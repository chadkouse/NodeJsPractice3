{
  "metadata":{
    "apiVersion":"2013-04-01",
    "endpointPrefix":"route53",
    "globalEndpoint":"route53.amazonaws.com",
    "serviceAbbreviation":"Route 53",
    "serviceFullName":"Amazon Route 53",
    "signatureVersion":"v3https",
    "protocol":"rest-xml"
  },
  "operations":{
    "ChangeResourceRecordSets":{
      "name":"ChangeResourceRecordSets",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/hostedzone/{Id}/rrset/"
      },
      "input":{
        "shape":"ChangeResourceRecordSetsRequest",
        "documentation":"<p>A complex type that contains a change batch.</p>",
        "xmlOrder":[
          "HostedZoneId",
          "ChangeBatch"
        ],
        "xmlNamespace":"https://route53.amazonaws.com/doc/2013-04-01/",
        "locationName":"ChangeResourceRecordSetsRequest"
      },
      "output":{
        "shape":"ChangeResourceRecordSetsResponse",
        "documentation":"<p>A complex type containing the response for the request.</p>",
        "xmlOrder":["ChangeInfo"]
      },
      "errors":[
        {
          "shape":"NoSuchHostedZone",
          "error":{"httpStatusCode":404},
          "exception":true
        },
        {
          "shape":"NoSuchHealthCheck",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>The health check you are trying to get or delete does not exist.</p>"
        },
        {
          "shape":"InvalidChangeBatch",
          "exception":true,
          "documentation":"<p>This error contains a list of one or more error messages. Each error message indicates one error in the change batch. For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html#example_Errors\">Example InvalidChangeBatch Errors</a>. </p>"
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        },
        {
          "shape":"PriorRequestNotComplete",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>The request was rejected because Route 53 was still processing a prior request.</p>"
        }
      ],
      "documentation":"<p>Use this action to create or change your authoritative DNS information. To use this action, send a <code>POST</code> request to the <code>2013-04-01/hostedzone/<i>hosted Zone ID</i>/rrset</code> resource. The request body must include an XML document with a <code>ChangeResourceRecordSetsRequest</code> element.</p>\n    <p>Changes are a list of change items and are considered transactional. For more information on transactional changes, also known as change batches, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/RRSchanges.html#RRSchanges_API\">Creating, Changing, and Deleting Resource Record Sets Using the Route 53 API</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>\n    <important>Due to the nature of transactional changes, you cannot delete the same resource record set more than once in a single change batch. If you attempt to delete the same change batch more than once, Route 53 returns an <code>InvalidChangeBatch</code> error.</important>\n    <p>In response to a <code>ChangeResourceRecordSets</code> request, your DNS data is changed on all Route 53 DNS servers. Initially, the status of a change is <code>PENDING</code>. This means the change has not yet propagated to all the authoritative Route 53 DNS servers. When the change is propagated to all hosts, the change returns a status of <code>INSYNC</code>.</p>\n    <p>Note the following limitations on a <code>ChangeResourceRecordSets</code> request:</p>\n    <p>- A request cannot contain more than 100 Change elements.</p>\n    <p>- A request cannot contain more than 1000 ResourceRecord elements.</p>\n    <p>The sum of the number of characters (including spaces) in all <code>Value</code> elements in a request cannot exceed 32,000 characters.</p>"
    },
    "CreateHealthCheck":{
      "name":"CreateHealthCheck",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/healthcheck",
        "responseCode":201
      },
      "input":{
        "shape":"CreateHealthCheckRequest",
        "documentation":"<p>&gt;A complex type that contains information about the request to create a health check.</p>",
        "xmlOrder":[
          "CallerReference",
          "HealthCheckConfig"
        ],
        "xmlNamespace":"https://route53.amazonaws.com/doc/2013-04-01/",
        "locationName":"CreateHealthCheckRequest"
      },
      "output":{
        "shape":"CreateHealthCheckResponse",
        "documentation":"<p>A complex type containing the response information for the new health check.</p>",
        "xmlOrder":[
          "HealthCheck",
          "Location"
        ]
      },
      "errors":[
        {
          "shape":"TooManyHealthChecks",
          "exception":true
        },
        {
          "shape":"HealthCheckAlreadyExists",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>The health check you are trying to create already exists. Route 53 returns this error when a health check has already been created with the specified <code>CallerReference</code>.</p>"
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        }
      ],
      "documentation":"<p> This action creates a new health check.</p>\n    <p> To create a new health check, send a <code>POST</code> request to the <code>2013-04-01/healthcheck</code> resource. The request body must include an XML document with a <code>CreateHealthCheckRequest</code> element. The response returns the <code>CreateHealthCheckResponse</code> element that contains metadata about the health check.</p>"
    },
    "CreateHostedZone":{
      "name":"CreateHostedZone",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/hostedzone",
        "responseCode":201
      },
      "input":{
        "shape":"CreateHostedZoneRequest",
        "documentation":"<p>A complex type that contains information about the request to create a hosted zone.</p>",
        "xmlOrder":[
          "Name",
          "CallerReference",
          "HostedZoneConfig"
        ],
        "xmlNamespace":"https://route53.amazonaws.com/doc/2013-04-01/",
        "locationName":"CreateHostedZoneRequest"
      },
      "output":{
        "shape":"CreateHostedZoneResponse",
        "documentation":"<p>A complex type containing the response information for the new hosted zone.</p>",
        "xmlOrder":[
          "HostedZone",
          "ChangeInfo",
          "DelegationSet",
          "Location"
        ]
      },
      "errors":[
        {
          "shape":"InvalidDomainName",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>This error indicates that the specified domain name is not valid.</p>"
        },
        {
          "shape":"HostedZoneAlreadyExists",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>The hosted zone you are trying to create already exists. Route 53 returns this error when a hosted zone has already been created with the specified <code>CallerReference</code>.</p>"
        },
        {
          "shape":"TooManyHostedZones",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>This error indicates that you've reached the maximum number of hosted zones that can be created for the current AWS account. You can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>"
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        },
        {
          "shape":"DelegationSetNotAvailable",
          "exception":true,
          "documentation":"<p>Route 53 allows some duplicate domain names, but there is a maximum number of duplicate names. This error indicates that you have reached that maximum. If you want to create another hosted zone with the same name and Route 53 generates this error, you can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>"
        }
      ],
      "documentation":"<p> This action creates a new hosted zone.</p>\n    <p>To create a new hosted zone, send a <code>POST</code> request to the <code>2013-04-01/hostedzone</code> resource. The request body must include an XML document with a <code>CreateHostedZoneRequest</code> element. The response returns the <code>CreateHostedZoneResponse</code> element that contains metadata about the hosted zone.</p>\n    <p>Route 53 automatically creates a default SOA record and four NS records for the zone. The NS records in the hosted zone are the name servers you give your registrar to delegate your domain to. For more information about SOA and NS records, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html\">NS and SOA Records that Route 53 Creates for a Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>\n    <p>When you create a zone, its initial status is <code>PENDING</code>. This means that it is not yet available on all DNS servers. The status of the zone changes to <code>INSYNC</code> when the NS and SOA records are available on all Route 53 DNS servers. </p>"
    },
    "DeleteHealthCheck":{
      "name":"DeleteHealthCheck",
      "http":{
        "method":"DELETE",
        "requestUri":"/2013-04-01/healthcheck/{HealthCheckId}"
      },
      "input":{
        "shape":"DeleteHealthCheckRequest",
        "documentation":"<p>A complex type containing the request information for delete health check.</p>",
        "xmlOrder":["HealthCheckId"]
      },
      "output":{
        "shape":"DeleteHealthCheckResponse",
        "documentation":"<p>Empty response for the request.</p>"
      },
      "errors":[
        {
          "shape":"NoSuchHealthCheck",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>The health check you are trying to get or delete does not exist.</p>"
        },
        {
          "shape":"HealthCheckInUse",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>There are resource records associated with this health check. Before you can delete the health check, you must disassociate it from the resource record sets.</p>"
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        }
      ],
      "documentation":"<p>This action deletes a health check. To delete a health check, send a <code>DELETE</code> request to the <code>2013-04-01/healthcheck/<i>health check ID</i></code> resource.</p>\n    <important> You can delete a health check only if there are no resource record sets associated with this health check. If resource record sets are associated with this health check, you must disassociate them before you can delete your health check. If you try to delete a health check that is associated with resource record sets, Route 53 will deny your request with a <code>HealthCheckInUse</code> error. For information about disassociating the records from your health check, see <a>ChangeResourceRecordSets</a>.</important>"
    },
    "DeleteHostedZone":{
      "name":"DeleteHostedZone",
      "http":{
        "method":"DELETE",
        "requestUri":"/2013-04-01/hostedzone/{Id}"
      },
      "input":{
        "shape":"DeleteHostedZoneRequest",
        "documentation":"<p>A complex type containing the response information for the delete request.</p>",
        "xmlOrder":["Id"]
      },
      "output":{
        "shape":"DeleteHostedZoneResponse",
        "documentation":"<p>A complex type containing the response information for the request.</p>",
        "xmlOrder":["ChangeInfo"]
      },
      "errors":[
        {
          "shape":"NoSuchHostedZone",
          "error":{"httpStatusCode":404},
          "exception":true
        },
        {
          "shape":"HostedZoneNotEmpty",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>The hosted zone contains resource record sets in addition to the default NS and SOA resource record sets. Before you can delete the hosted zone, you must delete the additional resource record sets.</p>"
        },
        {
          "shape":"PriorRequestNotComplete",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>The request was rejected because Route 53 was still processing a prior request.</p>"
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        }
      ],
      "documentation":"<p>This action deletes a hosted zone. To delete a hosted zone, send a <code>DELETE</code> request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i></code> resource.</p>\n    <p>For more information about deleting a hosted zone, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DeleteHostedZone.html\">Deleting a Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>\n    <important> You can delete a hosted zone only if there are no resource record sets other than the default SOA record and NS resource record sets. If your hosted zone contains other resource record sets, you must delete them before you can delete your hosted zone. If you try to delete a hosted zone that contains other resource record sets, Route 53 will deny your request with a <code>HostedZoneNotEmpty</code> error. For information about deleting records from your hosted zone, see <a>ChangeResourceRecordSets</a>.</important>"
    },
    "GetChange":{
      "name":"GetChange",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/change/{Id}"
      },
      "input":{
        "shape":"GetChangeRequest",
        "documentation":"<p>The input for a GetChange request.</p>",
        "xmlOrder":["Id"]
      },
      "output":{
        "shape":"GetChangeResponse",
        "documentation":"<p>A complex type that contains the <code>ChangeInfo</code> element.</p>",
        "xmlOrder":["ChangeInfo"]
      },
      "errors":[
        {
          "shape":"NoSuchChange",
          "error":{"httpStatusCode":404},
          "exception":true
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        }
      ],
      "documentation":"<p> This action returns the current status of a change batch request. The status is one of the following values:</p>\n    <p>- <code>PENDING</code> indicates that the changes in this request have not replicated to all Route 53 DNS servers. This is the initial status of all change batch requests.</p>\n    <p>- <code>INSYNC</code> indicates that the changes have replicated to all Amazon Route 53 DNS servers. </p>"
    },
    "GetHealthCheck":{
      "name":"GetHealthCheck",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/healthcheck/{HealthCheckId}"
      },
      "input":{
        "shape":"GetHealthCheckRequest",
        "documentation":"<p>A complex type that contains information about the request to get a health check.</p>",
        "xmlOrder":["HealthCheckId"]
      },
      "output":{
        "shape":"GetHealthCheckResponse",
        "documentation":"<p>A complex type containing information about the specified health check.</p>",
        "xmlOrder":["HealthCheck"]
      },
      "errors":[
        {
          "shape":"NoSuchHealthCheck",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>The health check you are trying to get or delete does not exist.</p>"
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        },
        {
          "shape":"IncompatibleVersion",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>The resource you are trying to access is unsupported on this Route 53 endpoint. Please consider using a newer endpoint or a tool that does so.</p>"
        }
      ],
      "documentation":"<p> To retrieve the health check, send a <code>GET</code> request to the <code>2013-04-01/healthcheck/<i>health check ID</i></code> resource. </p>"
    },
    "GetHostedZone":{
      "name":"GetHostedZone",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone/{Id}"
      },
      "input":{
        "shape":"GetHostedZoneRequest",
        "documentation":"<p> The input for a GetHostedZone request.</p>",
        "xmlOrder":["Id"]
      },
      "output":{
        "shape":"GetHostedZoneResponse",
        "documentation":"<p>A complex type containing information about the specified hosted zone.</p>",
        "xmlOrder":[
          "HostedZone",
          "DelegationSet"
        ]
      },
      "errors":[
        {
          "shape":"NoSuchHostedZone",
          "error":{"httpStatusCode":404},
          "exception":true
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        }
      ],
      "documentation":"<p> To retrieve the delegation set for a hosted zone, send a <code>GET</code> request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i></code> resource. The delegation set is the four Route 53 name servers that were assigned to the hosted zone when you created it.</p>"
    },
    "ListHealthChecks":{
      "name":"ListHealthChecks",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/healthcheck"
      },
      "input":{
        "shape":"ListHealthChecksRequest",
        "documentation":"<p> To retrieve a list of your health checks, send a <code>GET</code> request to the <code>2013-04-01/healthcheck</code> resource. The response to this request includes a <code>HealthChecks</code> element with zero or more <code>HealthCheck</code> child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the health check that the list begins with.</p>\n    <note> Route 53 returns a maximum of 100 items. If you set <code>MaxItems</code> to a value greater than 100, Route 53 returns only the first 100.</note>",
        "xmlOrder":[
          "Marker",
          "MaxItems"
        ]
      },
      "output":{
        "shape":"ListHealthChecksResponse",
        "documentation":"<p> A complex type that contains the response for the request.</p>",
        "xmlOrder":[
          "HealthChecks",
          "Marker",
          "IsTruncated",
          "NextMarker",
          "MaxItems"
        ]
      },
      "errors":[
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        },
        {
          "shape":"IncompatibleVersion",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>The resource you are trying to access is unsupported on this Route 53 endpoint. Please consider using a newer endpoint or a tool that does so.</p>"
        }
      ],
      "documentation":"<p> To retrieve a list of your health checks, send a <code>GET</code> request to the <code>2013-04-01/healthcheck</code> resource. The response to this request includes a <code>HealthChecks</code> element with zero, one, or multiple <code>HealthCheck</code> child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the health check that the list begins with. </p>\n    <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListHostedZones":{
      "name":"ListHostedZones",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone"
      },
      "input":{
        "shape":"ListHostedZonesRequest",
        "documentation":"<p> To retrieve a list of your hosted zones, send a <code>GET</code> request to the <code>2013-04-01/hostedzone</code> resource. The response to this request includes a <code>HostedZones</code> element with zero or more <code>HostedZone</code> child elements. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the hosted zone that the list begins with. For more information about listing hosted zones, see <a href=\"http://docs.amazonwebservices.com/Route53/latest/DeveloperGuide/ListInfoOnHostedZone.html\">Listing the Hosted Zones for an AWS Account</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>\n    <note> Route 53 returns a maximum of 100 items. If you set <code>MaxItems</code> to a value greater than 100, Route 53 returns only the first 100.</note>",
        "xmlOrder":[
          "Marker",
          "MaxItems"
        ]
      },
      "output":{
        "shape":"ListHostedZonesResponse",
        "documentation":"<p> A complex type that contains the response for the request.</p>",
        "xmlOrder":[
          "HostedZones",
          "Marker",
          "IsTruncated",
          "NextMarker",
          "MaxItems"
        ]
      },
      "errors":[
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        }
      ],
      "documentation":"<p> To retrieve a list of your hosted zones, send a <code>GET</code> request to the <code>2013-04-01/hostedzone</code> resource. The response to this request includes a <code>HostedZones</code> element with zero, one, or multiple <code>HostedZone</code> child elements. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the hosted zone that the list begins with. </p>\n    <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListResourceRecordSets":{
      "name":"ListResourceRecordSets",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone/{Id}/rrset"
      },
      "input":{
        "shape":"ListResourceRecordSetsRequest",
        "documentation":"<p> The input for a ListResourceRecordSets request.</p>",
        "xmlOrder":[
          "HostedZoneId",
          "StartRecordName",
          "StartRecordType",
          "StartRecordIdentifier",
          "MaxItems"
        ]
      },
      "output":{
        "shape":"ListResourceRecordSetsResponse",
        "documentation":"<p>A complex type that contains information about the resource record sets that are returned by the request and information about the response.</p>",
        "xmlOrder":[
          "ResourceRecordSets",
          "IsTruncated",
          "NextRecordName",
          "NextRecordType",
          "NextRecordIdentifier",
          "MaxItems"
        ]
      },
      "errors":[
        {
          "shape":"NoSuchHostedZone",
          "error":{"httpStatusCode":404},
          "exception":true
        },
        {
          "shape":"InvalidInput",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
        }
      ],
      "documentation":"<p>Imagine all the resource record sets in a zone listed out in front of you.\n  Imagine them sorted lexicographically first by DNS name (with the labels\n  reversed, like \"com.amazon.www\" for example), and secondarily,\n  lexicographically by record type. This operation retrieves at most MaxItems\n  resource record sets from this list, in order, starting at a position\n  specified by the Name and Type arguments:</p>\n  <ul>\n  <li>If both Name and Type are omitted, this means start the results at the\n  first RRSET in the HostedZone.</li>\n  <li>If Name is specified but Type is omitted, this means start the results\n  at the first RRSET in the list whose name is greater than or equal to Name.\n  </li>\n  <li>If both Name and Type are specified, this means start the results at the\n  first RRSET in the list whose name is greater than or equal to Name and\n  whose type is greater than or equal to Type.</li>\n  <li>It is an error to specify the Type but not the Name.</li>\n  </ul>\n  <p>Use ListResourceRecordSets to retrieve a single known record set by\n  specifying the record set's name and type, and setting MaxItems = 1</p>\n  <p>To retrieve all the records in a HostedZone, first pause any processes\n  making calls to ChangeResourceRecordSets. Initially call ListResourceRecordSets\n  without a Name and Type to get the first page of record sets. For subsequent\n  calls, set Name and Type to the NextName and NextType values returned by the\n  previous response.\n  </p>\n  <p>In the presence of concurrent ChangeResourceRecordSets calls, there is no\n  consistency of results across calls to ListResourceRecordSets. The only way\n  to get a consistent multi-page snapshot of all RRSETs in a zone is to stop\n  making changes while pagination is in progress.</p>\n  <p>However, the results from ListResourceRecordSets are consistent within a\n  page. If MakeChange calls are taking place concurrently, the result of each\n  one will either be completely visible in your results or not at all. You will\n  not see partial changes, or changes that do not ultimately succeed. (This\n  follows from the fact that MakeChange is atomic)\n  </p>\n  <p>The results from ListResourceRecordSets are strongly consistent with\n  ChangeResourceRecordSets. To be precise, if a single process makes a call to\n  ChangeResourceRecordSets and receives a successful response, the effects of that\n  change will be visible in a subsequent call to ListResourceRecordSets by\n  that process.</p>"
    }
  },
  "shapes":{
    "AliasHealthEnabled":{"type":"boolean"},
    "AliasTarget":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "DNSName",
        "EvaluateTargetHealth"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p><i>Alias resource record sets only:</i> The value of the hosted zone ID for the AWS resource.</p>\n    <p>For more information and an example, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\">Creating Alias Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p>."
        },
        "DNSName":{
          "shape":"DNSName",
          "documentation":"<p><i>Alias resource record sets only:</i> The external DNS name associated with the AWS Resource.</p>\n    <p>For more information and an example, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\">Creating Alias Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p>."
        },
        "EvaluateTargetHealth":{
          "shape":"AliasHealthEnabled",
          "documentation":"<p><i>Alias resource record sets only:</i> A boolean value that indicates whether this Resource Record Set should respect the health status of any health checks associated with the ALIAS target record which it is linked to.</p>\n    <p>For more information and an example, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\">Creating Alias Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p>."
        }
      },
      "documentation":"<p><i>Alias resource record sets only:</i> Information about the domain to which you are redirecting traffic.</p>\n    <p>For more information and an example, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\">Creating Alias Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p>.",
      "xmlOrder":[
        "HostedZoneId",
        "DNSName",
        "EvaluateTargetHealth"
      ]
    },
    "Change":{
      "type":"structure",
      "required":[
        "Action",
        "ResourceRecordSet"
      ],
      "members":{
        "Action":{
          "shape":"ChangeAction",
          "documentation":"<p>The action to perform.</p>\n    <p>Valid values: <code>CREATE</code> | <code>DELETE</code> | <code>UPSERT</code></p>"
        },
        "ResourceRecordSet":{
          "shape":"ResourceRecordSet",
          "documentation":"<p>Information about the resource record set to create or delete.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the information for each change in a change batch request.</p>",
      "xmlOrder":[
        "Action",
        "ResourceRecordSet"
      ]
    },
    "ChangeAction":{
      "type":"string",
      "enum":[
        "CREATE",
        "DELETE",
        "UPSERT"
      ]
    },
    "ChangeBatch":{
      "type":"structure",
      "required":["Changes"],
      "members":{
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p><i>Optional:</i> Any comments you want to include about a change batch request.</p>"
        },
        "Changes":{
          "shape":"Changes",
          "documentation":"<p>A complex type that contains one <code>Change</code> element for each resource record set that you want to create or delete.</p>"
        }
      },
      "documentation":"<p>A complex type that contains an optional comment and the changes that you want to make with a change batch request.</p>",
      "xmlOrder":[
        "Comment",
        "Changes"
      ]
    },
    "ChangeInfo":{
      "type":"structure",
      "required":[
        "Id",
        "Status",
        "SubmittedAt"
      ],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.</p>"
        },
        "Status":{
          "shape":"ChangeStatus",
          "documentation":"<p>The current state of the request. <code>PENDING</code> indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.</p>\n    <p>Valid Values: <code>PENDING</code> | <code>INSYNC</code></p>"
        },
        "SubmittedAt":{
          "shape":"TimeStamp",
          "documentation":"<p>The date and time the change was submitted, in the format <code>YYYY-MM-DDThh:mm:ssZ</code>, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The <code>Z</code> after the time indicates that the time is listed in Coordinated Universal Time (UTC), which is synonymous with Greenwich Mean Time in this context.</p>"
        },
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p>A complex type that describes change information about changes made to your hosted zone.</p>\n    <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>"
        }
      },
      "documentation":"<p>A complex type that describes change information about changes made to your hosted zone.</p>\n    <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>",
      "xmlOrder":[
        "Id",
        "Status",
        "SubmittedAt",
        "Comment"
      ]
    },
    "ChangeResourceRecordSetsRequest":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "ChangeBatch"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "location":"uri",
          "locationName":"Id",
          "documentation":"<p> The ID of the hosted zone that contains the resource record sets that you want to change.</p>"
        },
        "ChangeBatch":{
          "shape":"ChangeBatch",
          "documentation":"<p>A complex type that contains an optional comment and the <code>Changes</code> element.</p>"
        }
      },
      "documentation":"<p>A complex type that contains a change batch.</p>",
      "xmlOrder":[
        "HostedZoneId",
        "ChangeBatch"
      ]
    },
    "ChangeResourceRecordSetsResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains information about changes made to your hosted zone.</p>\n    <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response for the request.</p>",
      "xmlOrder":["ChangeInfo"]
    },
    "ChangeStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "INSYNC"
      ]
    },
    "Changes":{
      "type":"list",
      "member":{
        "shape":"Change",
        "locationName":"Change"
      },
      "min":1
    },
    "CreateHealthCheckRequest":{
      "type":"structure",
      "required":[
        "CallerReference",
        "HealthCheckConfig"
      ],
      "members":{
        "CallerReference":{
          "shape":"HealthCheckNonce",
          "documentation":"<p>A unique string that identifies the request and that allows failed <code>CreateHealthCheck</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a health check. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project.</p>\n    <p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
        },
        "HealthCheckConfig":{
          "shape":"HealthCheckConfig",
          "documentation":"<p>A complex type that contains health check configuration.</p>"
        }
      },
      "documentation":"<p>&gt;A complex type that contains information about the request to create a health check.</p>",
      "xmlOrder":[
        "CallerReference",
        "HealthCheckConfig"
      ]
    },
    "CreateHealthCheckResponse":{
      "type":"structure",
      "required":[
        "HealthCheck",
        "Location"
      ],
      "members":{
        "HealthCheck":{
          "shape":"HealthCheck",
          "documentation":"<p>A complex type that contains identifying information about the health check.</p>"
        },
        "Location":{
          "shape":"ResourceURI",
          "location":"header",
          "locationName":"Location",
          "documentation":"<p>The unique URL representing the new health check.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response information for the new health check.</p>",
      "xmlOrder":[
        "HealthCheck",
        "Location"
      ]
    },
    "CreateHostedZoneRequest":{
      "type":"structure",
      "required":[
        "Name",
        "CallerReference"
      ],
      "members":{
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.</p>\n    <p>This is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of <code>NameServers</code> elements returned in <code>DelegationSet</code>.</p>"
        },
        "CallerReference":{
          "shape":"Nonce",
          "documentation":"<p>A unique string that identifies the request and that allows failed <code>CreateHostedZone</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a hosted zone. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project, such as <code>DNSMigration_01</code>.</p>\n<p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
        },
        "HostedZoneConfig":{
          "shape":"HostedZoneConfig",
          "documentation":"<p>A complex type that contains an optional comment about your hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to create a hosted zone.</p>",
      "xmlOrder":[
        "Name",
        "CallerReference",
        "HostedZoneConfig"
      ]
    },
    "CreateHostedZoneResponse":{
      "type":"structure",
      "required":[
        "HostedZone",
        "ChangeInfo",
        "DelegationSet",
        "Location"
      ],
      "members":{
        "HostedZone":{
          "shape":"HostedZone",
          "documentation":"<p>A complex type that contains identifying information about the hosted zone.</p>"
        },
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains information about the request to create a hosted zone. This includes an ID that you use when you call the <a>GetChange</a> action to get the current status of the change request.</p>"
        },
        "DelegationSet":{
          "shape":"DelegationSet",
          "documentation":"<p>A complex type that contains name server information.</p>"
        },
        "Location":{
          "shape":"ResourceURI",
          "location":"header",
          "locationName":"Location",
          "documentation":"<p>The unique URL representing the new hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response information for the new hosted zone.</p>",
      "xmlOrder":[
        "HostedZone",
        "ChangeInfo",
        "DelegationSet",
        "Location"
      ]
    },
    "DNSName":{
      "type":"string",
      "max":1024
    },
    "DelegationSet":{
      "type":"structure",
      "required":["NameServers"],
      "members":{
        "NameServers":{
          "shape":"DelegationSetNameServers",
          "documentation":"<p>A complex type that contains the authoritative name servers for the hosted zone. Use the method provided by your domain registrar to add an NS record to your domain for each <code>NameServer</code> that is assigned to your hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contains name server information.</p>",
      "xmlOrder":["NameServers"]
    },
    "DelegationSetNameServers":{
      "type":"list",
      "member":{
        "shape":"DNSName",
        "locationName":"NameServer"
      },
      "min":1
    },
    "DelegationSetNotAvailable":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "exception":true,
      "documentation":"<p>Route 53 allows some duplicate domain names, but there is a maximum number of duplicate names. This error indicates that you have reached that maximum. If you want to create another hosted zone with the same name and Route 53 generates this error, you can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>"
    },
    "DeleteHealthCheckRequest":{
      "type":"structure",
      "required":["HealthCheckId"],
      "members":{
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "location":"uri",
          "locationName":"HealthCheckId",
          "documentation":"<p>The ID of the health check to delete.</p>"
        }
      },
      "documentation":"<p>A complex type containing the request information for delete health check.</p>",
      "xmlOrder":["HealthCheckId"]
    },
    "DeleteHealthCheckResponse":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>Empty response for the request.</p>"
    },
    "DeleteHostedZoneRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "location":"uri",
          "locationName":"Id",
          "documentation":"<p> The ID of the request. Include this ID in a call to <a>GetChange</a> to track when the change has propagated to all Route 53 DNS servers.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response information for the delete request.</p>",
      "xmlOrder":["Id"]
    },
    "DeleteHostedZoneResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains the ID, the status, and the date and time of your delete request.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response information for the request.</p>",
      "xmlOrder":["ChangeInfo"]
    },
    "ErrorMessage":{"type":"string"},
    "ErrorMessages":{
      "type":"list",
      "member":{
        "shape":"ErrorMessage",
        "locationName":"Message"
      }
    },
    "FailureThreshold":{
      "type":"integer",
      "min":1,
      "max":10
    },
    "FullyQualifiedDomainName":{
      "type":"string",
      "max":255
    },
    "GetChangeRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "location":"uri",
          "locationName":"Id",
          "documentation":"<p> The ID of the change batch request. The value that you specify here is the value that <code>ChangeResourceRecordSets</code> returned in the Id element when you submitted the request.</p>"
        }
      },
      "documentation":"<p>The input for a GetChange request.</p>",
      "xmlOrder":["Id"]
    },
    "GetChangeResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the date and time of the request.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the <code>ChangeInfo</code> element.</p>",
      "xmlOrder":["ChangeInfo"]
    },
    "GetHealthCheckRequest":{
      "type":"structure",
      "required":["HealthCheckId"],
      "members":{
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "location":"uri",
          "locationName":"HealthCheckId",
          "documentation":"<p>The ID of the health check to retrieve.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to get a health check.</p>",
      "xmlOrder":["HealthCheckId"]
    },
    "GetHealthCheckResponse":{
      "type":"structure",
      "required":["HealthCheck"],
      "members":{
        "HealthCheck":{
          "shape":"HealthCheck",
          "documentation":"<p>A complex type that contains the information about the specified health check.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about the specified health check.</p>",
      "xmlOrder":["HealthCheck"]
    },
    "GetHostedZoneRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "location":"uri",
          "locationName":"Id",
          "documentation":"<p>The ID of the hosted zone for which you want to get a list of the name servers in the delegation set.</p>"
        }
      },
      "documentation":"<p> The input for a GetHostedZone request.</p>",
      "xmlOrder":["Id"]
    },
    "GetHostedZoneResponse":{
      "type":"structure",
      "required":[
        "HostedZone",
        "DelegationSet"
      ],
      "members":{
        "HostedZone":{
          "shape":"HostedZone",
          "documentation":"<p>A complex type that contains the information about the specified hosted zone.</p>"
        },
        "DelegationSet":{
          "shape":"DelegationSet",
          "documentation":"<p>A complex type that contains information about the name servers for the specified hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about the specified hosted zone.</p>",
      "xmlOrder":[
        "HostedZone",
        "DelegationSet"
      ]
    },
    "HealthCheck":{
      "type":"structure",
      "required":[
        "Id",
        "CallerReference",
        "HealthCheckConfig"
      ],
      "members":{
        "Id":{
          "shape":"HealthCheckId",
          "documentation":"<p>The ID of the specified health check.</p>"
        },
        "CallerReference":{
          "shape":"HealthCheckNonce",
          "documentation":"<p>A unique string that identifies the request to create the health check.</p>"
        },
        "HealthCheckConfig":{
          "shape":"HealthCheckConfig",
          "documentation":"<p>A complex type that contains the health check configuration.</p>"
        }
      },
      "documentation":"<p>A complex type that contains identifying information about the health check.</p>",
      "xmlOrder":[
        "Id",
        "CallerReference",
        "HealthCheckConfig"
      ]
    },
    "HealthCheckAlreadyExists":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>The health check you are trying to create already exists. Route 53 returns this error when a health check has already been created with the specified <code>CallerReference</code>.</p>"
    },
    "HealthCheckConfig":{
      "type":"structure",
      "required":["Type"],
      "members":{
        "IPAddress":{
          "shape":"IPAddress",
          "documentation":"<p>IP Address of the instance being checked. </p>"
        },
        "Port":{
          "shape":"Port",
          "documentation":"<p>Port on which connection will be opened to the instance to health check. For HTTP and HTTP_STR_MATCH this defaults to 80 if the port is not specified. For HTTPS and HTTPS_STR_MATCH this defaults to 443 if the port is not specified.</p>"
        },
        "Type":{
          "shape":"HealthCheckType",
          "documentation":"<p>The type of health check to be performed. Currently supported types are TCP, HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH.</p>"
        },
        "ResourcePath":{
          "shape":"ResourcePath",
          "documentation":"<p>Path to ping on the instance to check the health. Required for HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH health checks, HTTP request is issued to the instance on the given port and path.</p>"
        },
        "FullyQualifiedDomainName":{
          "shape":"FullyQualifiedDomainName",
          "documentation":"<p>Fully qualified domain name of the instance to be health checked.</p>"
        },
        "SearchString":{
          "shape":"SearchString",
          "documentation":"<p>A string to search for in the body of a health check response. Required for HTTP_STR_MATCH and HTTPS_STR_MATCH health checks.</p>"
        },
        "RequestInterval":{
          "shape":"RequestInterval",
          "documentation":"<p>The number of seconds between the time that Route 53 gets a response from your endpoint and the time that it sends the next health-check request.</p>\n    <p>Each Route 53 health checker makes requests at this interval. Valid values are 10 and 30. The default value is 30.</p>"
        },
        "FailureThreshold":{
          "shape":"FailureThreshold",
          "documentation":"<p>The number of consecutive health checks that an endpoint must pass or fail for Route 53 to\n      change the current status of the endpoint from unhealthy to healthy or vice versa.</p>\n    <p>Valid values are integers between 1 and 10. For more information,\n      see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the\n      Amazon Route 53 Developer Guide.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the health check configuration.</p>",
      "xmlOrder":[
        "IPAddress",
        "Port",
        "Type",
        "ResourcePath",
        "FullyQualifiedDomainName",
        "SearchString",
        "RequestInterval",
        "FailureThreshold"
      ]
    },
    "HealthCheckId":{
      "type":"string",
      "max":64
    },
    "HealthCheckInUse":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>There are resource records associated with this health check. Before you can delete the health check, you must disassociate it from the resource record sets.</p>"
    },
    "HealthCheckNonce":{
      "type":"string",
      "min":1,
      "max":64
    },
    "HealthCheckType":{
      "type":"string",
      "enum":[
        "HTTP",
        "HTTPS",
        "HTTP_STR_MATCH",
        "HTTPS_STR_MATCH",
        "TCP"
      ]
    },
    "HealthChecks":{
      "type":"list",
      "member":{
        "shape":"HealthCheck",
        "locationName":"HealthCheck"
      }
    },
    "HostedZone":{
      "type":"structure",
      "required":[
        "Id",
        "Name",
        "CallerReference"
      ],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the specified hosted zone.</p>"
        },
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.</p>\n    <p>This is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of <code>NameServers</code> elements returned in <code>DelegationSet</code>.</p>"
        },
        "CallerReference":{
          "shape":"Nonce",
          "documentation":"<p>A unique string that identifies the request to create the hosted zone.</p>"
        },
        "Config":{
          "shape":"HostedZoneConfig",
          "documentation":"<p>A complex type that contains the <code>Comment</code> element.</p>"
        },
        "ResourceRecordSetCount":{
          "shape":"HostedZoneRRSetCount",
          "documentation":"<p>Total number of resource record sets in the hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contain information about the specified hosted zone.</p>",
      "xmlOrder":[
        "Id",
        "Name",
        "CallerReference",
        "Config",
        "ResourceRecordSetCount"
      ]
    },
    "HostedZoneAlreadyExists":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>The hosted zone you are trying to create already exists. Route 53 returns this error when a hosted zone has already been created with the specified <code>CallerReference</code>.</p>"
    },
    "HostedZoneConfig":{
      "type":"structure",
      "members":{
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p>An optional comment about your hosted zone. If you don't want to specify a comment, you can omit the <code>HostedZoneConfig</code> and <code>Comment</code> elements from the XML document.</p>"
        }
      },
      "documentation":"<p>A complex type that contains an optional comment about your hosted zone. If you don't want to specify a comment, you can omit the <code>HostedZoneConfig</code> and <code>Comment</code> elements from the XML document.</p>",
      "xmlOrder":["Comment"]
    },
    "HostedZoneNotEmpty":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>The hosted zone contains resource record sets in addition to the default NS and SOA resource record sets. Before you can delete the hosted zone, you must delete the additional resource record sets.</p>"
    },
    "HostedZoneRRSetCount":{"type":"long"},
    "HostedZones":{
      "type":"list",
      "member":{
        "shape":"HostedZone",
        "locationName":"HostedZone"
      }
    },
    "IPAddress":{
      "type":"string",
      "max":15,
      "pattern":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
    },
    "IncompatibleVersion":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>The resource you are trying to access is unsupported on this Route 53 endpoint. Please consider using a newer endpoint or a tool that does so.</p>"
    },
    "InvalidChangeBatch":{
      "type":"structure",
      "members":{
        "messages":{
          "shape":"ErrorMessages",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "exception":true,
      "documentation":"<p>This error contains a list of one or more error messages. Each error message indicates one error in the change batch. For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html#example_Errors\">Example InvalidChangeBatch Errors</a>. </p>"
    },
    "InvalidDomainName":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>This error indicates that the specified domain name is not valid.</p>"
    },
    "InvalidInput":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>"
    },
    "ListHealthChecksRequest":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"PageMarker",
          "location":"querystring",
          "locationName":"marker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "location":"querystring",
          "locationName":"maxitems",
          "documentation":"<p>Specify the maximum number of health checks to return per page of results.</p>"
        }
      },
      "documentation":"<p> To retrieve a list of your health checks, send a <code>GET</code> request to the <code>2013-04-01/healthcheck</code> resource. The response to this request includes a <code>HealthChecks</code> element with zero or more <code>HealthCheck</code> child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the health check that the list begins with.</p>\n    <note> Route 53 returns a maximum of 100 items. If you set <code>MaxItems</code> to a value greater than 100, Route 53 returns only the first 100.</note>",
      "xmlOrder":[
        "Marker",
        "MaxItems"
      ]
    },
    "ListHealthChecksResponse":{
      "type":"structure",
      "required":[
        "HealthChecks",
        "Marker",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "HealthChecks":{
          "shape":"HealthChecks",
          "documentation":"<p>A complex type that contains information about the health checks associated with the current AWS account.</p>"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p> A flag indicating whether there are more health checks to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p>\n    <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextMarker":{
          "shape":"PageMarker",
          "documentation":"<p> Indicates where to continue listing health checks. If <a>ListHealthChecksResponse$IsTruncated</a> is <code>true</code>, make another request to <code>ListHealthChecks</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element to get the next page of results.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of health checks to be included in the response body. If the number of health checks associated with this AWS account exceeds <code>MaxItems</code>, the value of <a>ListHealthChecksResponse$IsTruncated</a> in the response is <code>true</code>. Call <code>ListHealthChecks</code> again and specify the value of <a>ListHealthChecksResponse$NextMarker</a> in the <a>ListHostedZonesRequest$Marker</a> element to get the next page of results.</p>"
        }
      },
      "documentation":"<p> A complex type that contains the response for the request.</p>",
      "xmlOrder":[
        "HealthChecks",
        "Marker",
        "IsTruncated",
        "NextMarker",
        "MaxItems"
      ]
    },
    "ListHostedZonesRequest":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"PageMarker",
          "location":"querystring",
          "locationName":"marker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "location":"querystring",
          "locationName":"maxitems",
          "documentation":"<p>Specify the maximum number of hosted zones to return per page of results.</p>"
        }
      },
      "documentation":"<p> To retrieve a list of your hosted zones, send a <code>GET</code> request to the <code>2013-04-01/hostedzone</code> resource. The response to this request includes a <code>HostedZones</code> element with zero or more <code>HostedZone</code> child elements. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the hosted zone that the list begins with. For more information about listing hosted zones, see <a href=\"http://docs.amazonwebservices.com/Route53/latest/DeveloperGuide/ListInfoOnHostedZone.html\">Listing the Hosted Zones for an AWS Account</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>\n    <note> Route 53 returns a maximum of 100 items. If you set <code>MaxItems</code> to a value greater than 100, Route 53 returns only the first 100.</note>",
      "xmlOrder":[
        "Marker",
        "MaxItems"
      ]
    },
    "ListHostedZonesResponse":{
      "type":"structure",
      "required":[
        "HostedZones",
        "Marker",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "HostedZones":{
          "shape":"HostedZones",
          "documentation":"<p>A complex type that contains information about the hosted zones associated with the current AWS account.</p>"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p> A flag indicating whether there are more hosted zones to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p>\n    <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextMarker":{
          "shape":"PageMarker",
          "documentation":"<p> Indicates where to continue listing hosted zones. If <a>ListHostedZonesResponse$IsTruncated</a> is <code>true</code>, make another request to <code>ListHostedZones</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element to get the next page of results.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of hosted zones to be included in the response body. If the number of hosted zones associated with this AWS account exceeds <code>MaxItems</code>, the value of <a>ListHostedZonesResponse$IsTruncated</a> in the response is <code>true</code>. Call <code>ListHostedZones</code> again and specify the value of <a>ListHostedZonesResponse$NextMarker</a> in the <a>ListHostedZonesRequest$Marker</a> element to get the next page of results.</p>"
        }
      },
      "documentation":"<p> A complex type that contains the response for the request.</p>",
      "xmlOrder":[
        "HostedZones",
        "Marker",
        "IsTruncated",
        "NextMarker",
        "MaxItems"
      ]
    },
    "ListResourceRecordSetsRequest":{
      "type":"structure",
      "required":["HostedZoneId"],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "location":"uri",
          "locationName":"Id",
          "documentation":"<p> The ID of the hosted zone that contains the resource record sets that you want to get.</p>"
        },
        "StartRecordName":{
          "shape":"DNSName",
          "location":"querystring",
          "locationName":"name",
          "documentation":"<p>The first name in the lexicographic ordering of domain names that you want the <code>ListResourceRecordSets</code> request to list.</p>"
        },
        "StartRecordType":{
          "shape":"RRType",
          "location":"querystring",
          "locationName":"type",
          "documentation":"<p>The DNS type at which to begin the listing of resource record sets. </p>\n    <p>Valid values: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NS</code> | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code></p>\n    <p>Values for Weighted Resource Record Sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>TXT</code></p>\n    <p> Values for Regional Resource Record Sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>TXT</code></p>\n    <p>Values for Alias Resource Record Sets: <code>A</code> | <code>AAAA</code></p>\n    <p>Constraint: Specifying <code>type</code> without specifying <code>name</code> returns an <a>InvalidInput</a> error.</p>"
        },
        "StartRecordIdentifier":{
          "shape":"ResourceRecordSetIdentifier",
          "location":"querystring",
          "locationName":"identifier",
          "documentation":"<p><i>Weighted resource record sets only:</i> If results were truncated for a given DNS name and type, specify the value of <code>ListResourceRecordSetsResponse$NextRecordIdentifier</code> from the previous response to get the next resource record set that has the current DNS name and type.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "location":"querystring",
          "locationName":"maxitems",
          "documentation":"<p>The maximum number of records you want in the response body.</p>"
        }
      },
      "documentation":"<p> The input for a ListResourceRecordSets request.</p>",
      "xmlOrder":[
        "HostedZoneId",
        "StartRecordName",
        "StartRecordType",
        "StartRecordIdentifier",
        "MaxItems"
      ]
    },
    "ListResourceRecordSetsResponse":{
      "type":"structure",
      "required":[
        "ResourceRecordSets",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "ResourceRecordSets":{
          "shape":"ResourceRecordSets",
          "documentation":"<p>A complex type that contains information about the resource record sets that are returned by the request.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p> A flag that indicates whether there are more resource record sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <a>ListResourceRecordSetsResponse$NextRecordName</a> element.</p>\n    <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextRecordName":{
          "shape":"DNSName",
          "documentation":"<p>If the results were truncated, the name of the next record in the list. This element is present only if <a>ListResourceRecordSetsResponse$IsTruncated</a> is true. </p>"
        },
        "NextRecordType":{
          "shape":"RRType",
          "documentation":"<p>If the results were truncated, the type of the next record in the list. This element is present only if <a>ListResourceRecordSetsResponse$IsTruncated</a> is true. </p>"
        },
        "NextRecordIdentifier":{
          "shape":"ResourceRecordSetIdentifier",
          "documentation":"<p><i>Weighted resource record sets only:</i> If results were truncated for a given DNS name and type, the value of <code>SetIdentifier</code> for the next resource record set that has the current DNS name and type.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of records you requested. The maximum value of <code>MaxItems</code> is 100.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the resource record sets that are returned by the request and information about the response.</p>",
      "xmlOrder":[
        "ResourceRecordSets",
        "IsTruncated",
        "NextRecordName",
        "NextRecordType",
        "NextRecordIdentifier",
        "MaxItems"
      ]
    },
    "NoSuchChange":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "NoSuchHealthCheck":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":404},
      "exception":true,
      "documentation":"<p>The health check you are trying to get or delete does not exist.</p>"
    },
    "NoSuchHostedZone":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "Nonce":{
      "type":"string",
      "min":1,
      "max":128
    },
    "PageMarker":{
      "type":"string",
      "max":64
    },
    "PageMaxItems":{"type":"string"},
    "PageTruncated":{"type":"boolean"},
    "Port":{
      "type":"integer",
      "min":1,
      "max":65535
    },
    "PriorRequestNotComplete":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>The request was rejected because Route 53 was still processing a prior request.</p>"
    },
    "RData":{
      "type":"string",
      "max":4000
    },
    "RRType":{
      "type":"string",
      "enum":[
        "SOA",
        "A",
        "TXT",
        "NS",
        "CNAME",
        "MX",
        "PTR",
        "SRV",
        "SPF",
        "AAAA"
      ]
    },
    "RequestInterval":{
      "type":"integer",
      "min":10,
      "max":30
    },
    "ResourceDescription":{
      "type":"string",
      "max":256
    },
    "ResourceId":{
      "type":"string",
      "max":32
    },
    "ResourcePath":{
      "type":"string",
      "max":255
    },
    "ResourceRecord":{
      "type":"structure",
      "required":["Value"],
      "members":{
        "Value":{
          "shape":"RData",
          "documentation":"<p>The value of the <code>Value</code> element for the current resource record set.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the value of the <code>Value</code> element for the current resource record set.</p>",
      "xmlOrder":["Value"]
    },
    "ResourceRecordSet":{
      "type":"structure",
      "required":[
        "Name",
        "Type"
      ],
      "members":{
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The domain name of the current resource record set.</p>"
        },
        "Type":{
          "shape":"RRType",
          "documentation":"<p>The type of the current resource record set.</p>"
        },
        "SetIdentifier":{
          "shape":"ResourceRecordSetIdentifier",
          "documentation":"<p><i>Weighted, Regional, and Failover resource record sets only:</i> An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.</p>"
        },
        "Weight":{
          "shape":"ResourceRecordSetWeight",
          "documentation":"<p><i>Weighted resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location.</p>"
        },
        "Region":{
          "shape":"ResourceRecordSetRegion",
          "documentation":"<p><i>Regional resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that specifies the AWS region for the current resource record set.</p>"
        },
        "Failover":{
          "shape":"ResourceRecordSetFailover",
          "documentation":"<p><i>Failover resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that indicates whether the current resource record set is a primary or secondary resource record set.  A failover set may contain at most one resource record set marked as primary and one resource record set marked as secondary.  A resource record set marked as primary will be returned if any of the following are true: (1) an associated health check is passing, (2) if the resource record set is an alias with the evaluate target health and at least one target resource record set is healthy, (3) both the primary and secondary resource record set are failing health checks or (4) there is no secondary resource record set.  A secondary resource record set will be returned if: (1) the primary is failing a health check and either the secondary is passing a health check or has no associated health check, or (2) there is no primary resource record set. </p>\n    <p>Valid values: <code>PRIMARY</code> | <code>SECONDARY</code></p>"
        },
        "TTL":{
          "shape":"TTL",
          "documentation":"<p>The cache time to live for the current resource record set.</p>"
        },
        "ResourceRecords":{
          "shape":"ResourceRecords",
          "documentation":"<p>A complex type that contains the resource records for the current resource record set.</p>"
        },
        "AliasTarget":{
          "shape":"AliasTarget",
          "documentation":"<p><i>Alias resource record sets only:</i> Information about the AWS resource to which you are redirecting traffic.</p>"
        },
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "documentation":"<p><i>Health Check resource record sets only, not required for alias resource record sets:</i> An identifier that is used to identify health check associated with the resource record set.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the current resource record set.</p>",
      "xmlOrder":[
        "Name",
        "Type",
        "SetIdentifier",
        "Weight",
        "Region",
        "Failover",
        "TTL",
        "ResourceRecords",
        "AliasTarget",
        "HealthCheckId"
      ]
    },
    "ResourceRecordSetFailover":{
      "type":"string",
      "enum":[
        "PRIMARY",
        "SECONDARY"
      ]
    },
    "ResourceRecordSetIdentifier":{
      "type":"string",
      "min":1,
      "max":128
    },
    "ResourceRecordSetRegion":{
      "type":"string",
      "enum":[
        "us-east-1",
        "us-west-1",
        "us-west-2",
        "eu-west-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-northeast-1",
        "sa-east-1",
        "cn-north-1"
      ],
      "min":1,
      "max":64
    },
    "ResourceRecordSetWeight":{
      "type":"long",
      "min":0,
      "max":255
    },
    "ResourceRecordSets":{
      "type":"list",
      "member":{
        "shape":"ResourceRecordSet",
        "locationName":"ResourceRecordSet"
      }
    },
    "ResourceRecords":{
      "type":"list",
      "member":{
        "shape":"ResourceRecord",
        "locationName":"ResourceRecord"
      },
      "min":1
    },
    "ResourceURI":{
      "type":"string",
      "max":1024
    },
    "SearchString":{
      "type":"string",
      "max":255
    },
    "TTL":{
      "type":"long",
      "min":0,
      "max":2147483647
    },
    "TimeStamp":{"type":"timestamp"},
    "TooManyHealthChecks":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "exception":true
    },
    "TooManyHostedZones":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>This error indicates that you've reached the maximum number of hosted zones that can be created for the current AWS account. You can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>"
    }
  }
}
