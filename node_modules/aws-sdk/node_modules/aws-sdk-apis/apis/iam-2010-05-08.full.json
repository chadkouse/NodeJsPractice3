{
  "metadata":{
    "apiVersion":"2010-05-08",
    "endpointPrefix":"iam",
    "globalEndpoint":"iam.amazonaws.com",
    "serviceAbbreviation":"IAM",
    "serviceFullName":"AWS Identity and Access Management",
    "signatureVersion":"v4",
    "xmlNamespace":"https://iam.amazonaws.com/doc/2010-05-08/",
    "protocol":"query"
  },
  "documentation":"<fullname>AWS Identity and Access Management</fullname>\n\t\t\n\t\t<p>AWS Identity and Access Management (IAM) is a web service that you can use to manage users and user permissions\n\t\t\tunder your AWS account. This guide provides descriptions of the IAM API. For general\n\t\t\tinformation about IAM, see <a href=\"http://aws.amazon.com/iam/\" target=\"_blank\">AWS Identity\n\t\t\t\tand Access Management (IAM)</a>. For the user guide for IAM, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/\" target=\"_blank\">Using IAM</a>. </p>\n\t\t\n\t\t<note> AWS provides SDKs that consist of libraries and sample code for various programming\n\t\t\tlanguages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a convenient\n\t\t\tway to create programmatic access to IAM and AWS. For example, the SDKs take care of tasks\n\t\t\tsuch as cryptographically signing requests (see below), managing errors, and retrying requests\n\t\t\tautomatically. For information about the AWS SDKs, including how to download and install them,\n\t\t\tsee the <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a> page. </note>\n\t\t\n\t\t<p> Using the IAM Query API, you make direct calls to the IAM web service. IAM supports\n\t\t\tGET and POST requests for all actions. That is, the API does not require you to use GET for\n\t\t\tsome actions and POST for others. However, GET requests are subject to the limitation size of\n\t\t\ta URL; although this limit is browser dependent, a typical limit is 2048 bytes. Therefore, for\n\t\t\toperations that require larger sizes, you must use a POST request. </p>\n\t\t\n\t\t<p><b>Signing Requests</b><br> Requests must be signed using an access key ID and a secret\n\t\t\taccess key. We strongly recommend that you do not use your AWS account access key ID and\n\t\t\tsecret access key for everyday work with IAM. You can use the access key ID and secret access\n\t\t\tkey for an IAM user or you can use the AWS Security Token Service to generate temporary security credentials\n\t\t\tand use those to sign requests.</p> \n\t\t\n\t\t<p>To sign requests, we recommend that you use <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. If\n\t\t\tyou have an existing application that uses Signature Version 2, you do not have to update it\n\t\t\tto use Signature Version 4. However, some operations now require Signature Version 4. The\n\t\t\tdocumentation for operations that require version 4 indicate this requirement. </p>\n\t\t\n\n\t\t<p><b>Additional Resources</b><br>\n\t\tFor more information, see the following:</p>\n\t\t\n\t\t<ul>\n\t\t\t<li>\n<a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html\" target=\"_blank\">AWS Security Credentials</a>. This topic provides general information about the types of\n\t\t\t\tcredentials used for accessing AWS.</li>\n\t\t\t<li>\n<a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html\" target=\"_blank\">IAM\n\t\t\t\t\tBest Practices</a>. This topic presents a list of suggestions for using the IAM service\n\t\t\t\tto help secure your AWS resources.</li>\n\t\t\t<li>\n<a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/\" target=\"_blank\">AWS Security Token Service</a>. This guide\n\t\t\t\tdescribes how to create and use temporary security credentials.</li>\n\t\t\t<li>\n<a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\" target=\"_blank\">Signing AWS API Requests</a>. This set of topics walk you through the process of signing\n\t\t\t\ta request using an access key ID and secret access key.</li>\n\t\t</ul>",
  "operations":{
    "AddRoleToInstanceProfile":{
      "name":"AddRoleToInstanceProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"AddRoleToInstanceProfileRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Adds the specified role to the specified instance profile. For more information about roles,\n\t\t\tgo to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with\n\t\t\t\tRoles</a>. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance\n\t\t\t\tProfiles</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=AddRoleToInstanceProfile\n&InstanceProfileName=Webserver\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<ResponseMetadata> </ResponseMetadata>\n\t\t\t<queryresponse>\n<AddRoleToInstanceProfileResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ResponseMetadata>\n    <RequestId>12657608-99f2-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</AddRoleToInstanceProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "AddUserToGroup":{
      "name":"AddUserToGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"AddUserToGroupRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Adds the specified user to the specified group.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=AddUserToGroup\n&GroupName=Managers\n&UserName=Bob\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<AddUserToGroupResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</AddUserToGroupResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ChangePassword":{
      "name":"ChangePassword",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ChangePasswordRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"InvalidUserTypeException",
          "error":{
            "code":"InvalidUserType",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the type of user for the transaction was incorrect.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityTemporarilyUnmodifiableException",
          "error":{
            "code":"EntityTemporarilyUnmodifiable",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that is temporarily unmodifiable,\n\t\t\tsuch as a user name that was deleted and then recreated. The error indicates that the request\n\t\t\tis likely to succeed if you try again after waiting several minutes. The error message\n\t\t\tdescribes the entity.</p>"
        }
      ],
      "documentation":"<p>Changes the password of the IAM user calling <code>ChangePassword</code>. The root account\n\t\t\tpassword is not affected by this action. For information about modifying passwords, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\" target=\"_blank\">Managing Passwords</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ChangePassword\n&OldPassword=U79}kgds4?\n&NewPassword=Lb0*1(9xpN\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ChangePasswordResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ChangePasswordResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateAccessKey":{
      "name":"CreateAccessKey",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAccessKeyRequest"},
      "output":{
        "shape":"CreateAccessKeyResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateAccessKey</a> action.</p>",
        "resultWrapper":"CreateAccessKeyResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Creates a new AWS secret access key and corresponding AWS access key ID for the specified\n\t\t\tuser. The default status for new keys is <code>Active</code>.</p>\n\t\t<p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS\n\t\t\taccess key ID signing the request. Because this action works for access keys under the AWS\n\t\t\taccount, you can use this API to manage root credentials even if the AWS account has no\n\t\t\tassociated users.</p>\n\t\t<p>For information about limits on the number of keys you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<important>To ensure the security of your AWS account, the secret access key is accessible only\n\t\t\tduring key and user creation. You must save the key (for example, in a text file) if you want\n\t\t\tto be able to access it again. If a secret key is lost, you can delete the access keys for the\n\t\t\tassociated user and then create new keys.</important>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateAccessKey\n&UserName=Bob\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<CreateAccessKeyResponse>\n   <CreateAccessKeyResult>\n     <AccessKey>\n         <UserName>Bob</UserName>\n         <AccessKeyId>AKIAIOSFODNN7EXAMPLE</AccessKeyId>\n         <Status>Active</Status>\n         <SecretAccessKey>wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n         </SecretAccessKey>\n      </AccessKey>\n   </CreateAccessKeyResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</CreateAccessKeyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateAccountAlias":{
      "name":"CreateAccountAlias",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAccountAliasRequest"},
      "errors":[
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>This action creates an alias for your AWS account. For information about using an AWS account\n\t\t\talias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\" target=\"_blank\">Using an Alias for Your AWS Account ID</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateAccountAlias\n&AccountAlias=foocorporation\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<CreateAccountAliasResponse>\n  <ResponseMetadata>\n    <RequestId>36b5db08-f1b0-11df-8fbe-45274EXAMPLE</RequestId>\n  </ResponseMetadata>\n</CreateAccountAliasResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateGroup":{
      "name":"CreateGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateGroupRequest"},
      "output":{
        "shape":"CreateGroupResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateGroup</a> action.</p>",
        "resultWrapper":"CreateGroupResult"
      },
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Creates a new group.</p>\n\t\t<p>For information about the number of groups you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateGroup\n&Path=/\n&GroupName=Admins\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<CreateGroupResponse>\n   <CreateGroupResult>\n      <Group>\n         <Path>/</Path>\n         <GroupName>Admins</GroupName>\n         <GroupId>AGPACKCEVSQ6C2EXAMPLE</GroupId>\n         <Arn>arn:aws:iam::123456789012:group/Admins</Arn>\n      </Group>\n   </CreateGroupResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</CreateGroupResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateInstanceProfile":{
      "name":"CreateInstanceProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateInstanceProfileRequest"},
      "output":{
        "shape":"CreateInstanceProfileResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateInstanceProfile</a>\n\t\t\taction.</p>",
        "resultWrapper":"CreateInstanceProfileResult"
      },
      "errors":[
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Creates a new instance profile. For information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance\n\t\t\t\tProfiles</a>.</p>\n\t\t<p>For information about the number of instance profiles you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateInstanceProfile\n&InstanceProfileName=Webserver\n&Path=/application_abc/component_xyz/\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<CreateInstanceProfileResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <CreateInstanceProfileResult>\n    <InstanceProfile>\n      <InstanceProfileId>AIPAD5ARO2C5EXAMPLE3G</InstanceProfileId>\n      <Roles/>\n      <InstanceProfileName>Webserver</InstanceProfileName>\n      <Path>/application_abc/component_xyz/</Path>\n      <Arn>arn:aws:iam::123456789012:instance-profile/application_abc/component_xyz/Webserver</Arn>\n      <CreateDate>2012-05-09T16:11:10.222Z</CreateDate>\n    </InstanceProfile>\n  </CreateInstanceProfileResult>\n  <ResponseMetadata>\n    <RequestId>974142ee-99f1-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</CreateInstanceProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateLoginProfile":{
      "name":"CreateLoginProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateLoginProfileRequest"},
      "output":{
        "shape":"CreateLoginProfileResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateLoginProfile</a> action.</p>",
        "resultWrapper":"CreateLoginProfileResult"
      },
      "errors":[
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"PasswordPolicyViolationException",
          "error":{
            "code":"PasswordPolicyViolation",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the provided password did not meet the requirements imposed\n\t\t\tby the account password policy.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Creates a password for the specified user, giving the user the ability to access AWS services\n\t\t\tthrough the AWS Management Console. For more information about managing passwords, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_ManagingLogins.html\" target=\"_blank\">Managing Passwords</a> in <i>Using IAM</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateLoginProfile\n&UserName=Bob\n&Password=Password1\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<CreateLoginProfileResponse>\n   <CreateUserResult>\n      <LoginProfile>\n         <UserName>Bob</UserName>\n         <CreateDate>2011-09-19T23:00:56Z</CreateDate>\n      </LoginProfile>\n   </CreateUserResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</CreateLoginProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateRole":{
      "name":"CreateRole",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateRoleRequest"},
      "output":{
        "shape":"CreateRoleResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateRole</a> action.</p>",
        "resultWrapper":"CreateRoleResult"
      },
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"MalformedPolicyDocumentException",
          "error":{
            "code":"MalformedPolicyDocument",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the policy document was malformed. The error message\n\t\t\tdescribes the specific error.</p>"
        }
      ],
      "documentation":"<p>Creates a new role for your AWS account. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.\n\t\t\tFor information about limitations on role names and the number of roles you can create, go to\n\t\t\t\t<a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<p>The policy grants permission to an EC2 instance to assume the role. The policy is URL-encoded\n\t\t\taccording to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.\n\t\t\tCurrently, only EC2 instances can assume roles.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateRole\n&RoleName=S3Access\n&Path=/application_abc/component_xyz/\n&AssumeRolePolicyDocument={\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}\n&Version=2010-05-08\n&AUTHPARAMS\n\t\t\t</queryrequest>\n\t\t\t<queryresponse>\n<CreateRoleResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <CreateRoleResult>\n    <Role>\n      <Path>/application_abc/component_xyz/</Path>\n      <Arn>arn:aws:iam::123456789012:role/application_abc/component_xyz/S3Access</Arn>\n      <RoleName>S3Access</RoleName>\n      <AssumeRolePolicyDocument>{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}</AssumeRolePolicyDocument>\n      <CreateDate>2012-05-08T23:34:01.495Z</CreateDate>\n      <RoleId>AROADBQP57FF2AEXAMPLE</RoleId>\n    </Role>\n  </CreateRoleResult>\n  <ResponseMetadata>\n    <RequestId>4a93ceee-9966-11e1-b624-b1aEXAMPLE7c</RequestId>\n  </ResponseMetadata>\n</CreateRoleResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateSAMLProvider":{
      "name":"CreateSAMLProvider",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateSAMLProviderRequest"},
      "output":{
        "shape":"CreateSAMLProviderResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateSAMLProvider</a> action.</p>",
        "resultWrapper":"CreateSAMLProviderResult"
      },
      "errors":[
        {
          "shape":"InvalidInputException",
          "error":{
            "code":"InvalidInput",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Creates an IAM entity to describe an identity provider (IdP) that supports SAML 2.0.</p>\n\t\t<p>The SAML provider that you create with this operation can be used as a principal in a role's\n\t\t\ttrust policy to establish a trust relationship between AWS and a SAML identity provider. You\n\t\t\tcan create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one\n\t\t\tthat supports API access to AWS. </p>\n\t\t\n\t\t<p>When you create the SAML provider, you upload an a SAML metadata document that you get from\n\t\t\tyour IdP and that includes the issuer's name, expiration information, and keys that can be\n\t\t\tused to validate the SAML authentication response (assertions) that are received from the IdP.\n\t\t\tYou must generate the metadata document using the identity management software that is used as\n\t\t\tyour organization's IdP. </p>\n\t\t\n\t\t<note>This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version\n\t\t\t4</a>.</note>\n\t\t\n\t\t<p>For more information, see <a href=\"http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html\">Giving Console Access Using SAML</a> and <a href=\"http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\">Creating\n\t\t\t\tTemporary Security Credentials for SAML Federation</a> in the <i>Using Temporary\n\t\t\t\tCredentials</i> guide. </p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateSAMLProvider\n&Name=MyUniversity\n&SAMLProviderDocument=VGhpcyBpcyB3aGVyZSB5b3UgcHV0IHRoZSBTQU1MIHByb3ZpZGVyIG1ldGFkYXRhIGRvY3VtZW50\nLCBCYXNlNjQtZW5jb2RlZCBpbnRvIGEgYmlnIHN0cmluZy4=\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<CreateSAMLProviderResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <CreateSAMLProviderResult>\n    <SAMLProviderArn>arn:aws:iam::123456789012:saml-metadata/MyUniversity</SAMLProviderArn>\n  </CreateSAMLProviderResult>\n  <ResponseMetadata>\n    <RequestId>29f47818-99f5-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</CreateSAMLProviderResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateUser":{
      "name":"CreateUser",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateUserRequest"},
      "output":{
        "shape":"CreateUserResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateUser</a> action.</p>",
        "resultWrapper":"CreateUserResult"
      },
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Creates a new user for your AWS account.</p>\n\t\t<p>For information about limitations on the number of users you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateUser\n&Path=/division_abc/subdivision_xyz/\n&UserName=Bob\n&Version=2010-05-08\n&AUTHPARAMS\n\t\t\t</queryrequest>\n\t\t\t<queryresponse>\n<CreateUserResponse>\n   <CreateUserResult>\n      <User>\n         <Path>/division_abc/subdivision_xyz/</Path>\n         <UserName>Bob</UserName>\n         <UserId>AIDACKCEVSQ6C2EXAMPLE</UserId>\n         <Arn>arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/Bob\n         </Arn>\n     </User>\n   </CreateUserResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</CreateUserResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "CreateVirtualMFADevice":{
      "name":"CreateVirtualMFADevice",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateVirtualMFADeviceRequest"},
      "output":{
        "shape":"CreateVirtualMFADeviceResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>CreateVirtualMFADevice</a>\n\t\t\taction.</p>",
        "resultWrapper":"CreateVirtualMFADeviceResult"
      },
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        }
      ],
      "documentation":"<p>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a href=\"http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html\" target=\"_blank\">EnableMFADevice</a> to attach the MFA device to an IAM user. For more information about\n\t\t\tcreating and working with virtual MFA devices, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_VirtualMFA.html\" target=\"_blank\">Using a Virtual MFA Device</a> in <i>Using AWS Identity and Access Management</i>.</p>\n\t\t<p>For information about limits on the number of MFA devices you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<important>The seed information contained in the QR code and the Base32 string should be treated\n\t\t\tlike any other secret access information, such as your AWS access keys or your passwords.\n\t\t\tAfter you provision your virtual device, you should ensure that the information is destroyed\n\t\t\tfollowing secure procedures.</important>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=CreateVirtualMFADevice\n&VirtualMFADeviceName=ExampleName\n&Path=/\n&Version=2010-05-08\n&AUTHPARAMS\n</queryrequest>\n\t\t\t<queryresponse>\n<CreateVirtualMFADeviceResponse>\n  <CreateVirtualMFADeviceResult>\n    <VirtualMFADevice>\n      <SerialNumber>arn:aws:iam::123456789012:mfa/ExampleName</SerialNumber>\n      <Base32StringSeed>2K5K5XTLA7GGE75TQLYEXAMPLEEXAMPLEEXAMPLECHDFW4KJYZ6\n      UFQ75LL7COCYKM</Base32StringSeed>\n      <QRCodePNG>89504E470D0A1A0AASDFAHSDFKJKLJFKALSDFJASDF</QRCodePNG> <!-- byte array of png file -->\n    </VirtualMFADevice>\n  </CreateVirtualMFADeviceResult>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</CreateVirtualMFADeviceResponse>\n</queryresponse>\n\t\t</examples>"
    },
    "DeactivateMFADevice":{
      "name":"DeactivateMFADevice",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeactivateMFADeviceRequest"},
      "errors":[
        {
          "shape":"EntityTemporarilyUnmodifiableException",
          "error":{
            "code":"EntityTemporarilyUnmodifiable",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that is temporarily unmodifiable,\n\t\t\tsuch as a user name that was deleted and then recreated. The error indicates that the request\n\t\t\tis likely to succeed if you try again after waiting several minutes. The error message\n\t\t\tdescribes the entity.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deactivates the specified MFA device and removes it from association with the user name for\n\t\t\twhich it was originally enabled.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeactivateMFADevice\n&UserName=Bob\n&SerialNumber=R1234\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeactivateMFADeviceResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeactivateMFADeviceResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteAccessKey":{
      "name":"DeleteAccessKey",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteAccessKeyRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the access key associated with the specified user.</p>\n\t\t<p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS\n\t\t\taccess key ID signing the request. Because this action works for access keys under the AWS\n\t\t\taccount, you can use this API to manage root credentials even if the AWS account has no\n\t\t\tassociated users.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteAccessKey\n&UserName=Bob\n&AccessKeyId=AKIAIOSFODNN7EXAMPLE\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteAccessKeyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeleteAccessKeyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteAccountAlias":{
      "name":"DeleteAccountAlias",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteAccountAliasRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified AWS account alias. For information about using an AWS account alias,\n\t\t\tsee <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\" target=\"_blank\">Using an\n\t\t\t\tAlias for Your AWS Account ID</a> in <i>Using AWS Identity and Access Management</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteAccountAlias\n&AccountAlias=foocorporation\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteAccountAliasResponse>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</DeleteAccountAliasResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteAccountPasswordPolicy":{
      "name":"DeleteAccountPasswordPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Deletes the password policy for the AWS account.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteAccountPasswordPolicy\n&Version=2010-05-08\n&AUTHPARAMS\n</queryrequest>\n\t\t\t<queryresponse>\n<DeleteAccountPasswordPolicyResponse>\n   <ResponseMetadata>\n\t   <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n\t</ResponseMetadata>\n</DeleteAccountPasswordPolicy>\n</queryresponse>\n\t\t</examples>"
    },
    "DeleteGroup":{
      "name":"DeleteGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteGroupRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"DeleteConflictException",
          "error":{
            "code":"DeleteConflict",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to delete a resource that has attached\n\t\t\tsubordinate entities. The error message describes these entities.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified group. The group must not contain any users or have any attached\n\t\t\tpolicies.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteGroup\n&Group=Test\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteGroupResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeleteGroupResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteGroupPolicy":{
      "name":"DeleteGroupPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteGroupPolicyRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified policy that is associated with the specified group.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteGroupPolicy\n&GroupName=Admins\n&PolicyName=AdminRoot\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteGroupPolicyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeleteGroupPolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteInstanceProfile":{
      "name":"DeleteInstanceProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteInstanceProfileRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"DeleteConflictException",
          "error":{
            "code":"DeleteConflict",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to delete a resource that has attached\n\t\t\tsubordinate entities. The error message describes these entities.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified instance profile. The instance profile must not have an associated\n\t\t\trole.</p>\n\t\t<important>Make sure you do not have any Amazon EC2 instances running with the instance profile\n\t\t\tyou are about to delete. Deleting a role or instance profile that is associated with a running\n\t\t\tinstance will break any applications running on the instance.</important>\n\t\t<p>For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance\n\t\t\t\tProfiles</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteInstanceProfile\n&InstanceProfileName=Webserver\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteInstanceProfileResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ResponseMetadata>\n    <RequestId>90c18667-99f3-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</DeleteInstanceProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteLoginProfile":{
      "name":"DeleteLoginProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteLoginProfileRequest"},
      "errors":[
        {
          "shape":"EntityTemporarilyUnmodifiableException",
          "error":{
            "code":"EntityTemporarilyUnmodifiable",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that is temporarily unmodifiable,\n\t\t\tsuch as a user name that was deleted and then recreated. The error indicates that the request\n\t\t\tis likely to succeed if you try again after waiting several minutes. The error message\n\t\t\tdescribes the entity.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the password for the specified user, which terminates the user's ability to access\n\t\t\tAWS services through the AWS Management Console.</p>\n\t\t<important>Deleting a user's password does not prevent a user from accessing IAM through the\n\t\t\tcommand line interface or the API. To prevent all user access you must also either make the\n\t\t\taccess key inactive or delete it. For more information about making keys inactive or deleting\n\t\t\tthem, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </important>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteLoginProfile\n&UserName=Bob\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteLoginProfileResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeleteLoginProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteRole":{
      "name":"DeleteRole",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteRoleRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"DeleteConflictException",
          "error":{
            "code":"DeleteConflict",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to delete a resource that has attached\n\t\t\tsubordinate entities. The error message describes these entities.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified role. The role must not have any policies attached. For more\n\t\t\tinformation about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with\n\t\t\tRoles</a>.</p>\n\t\t<important>Make sure you do not have any Amazon EC2 instances running with the role you are\n\t\t\tabout to delete. Deleting a role or instance profile that is associated with a running\n\t\t\tinstance will break any applications running on the instance.</important>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteRole\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteRoleResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ResponseMetadata>\n    <RequestId>913e3f37-99ed-11e1-a4c3-270EXAMPLE04</RequestId>\n  </ResponseMetadata>\n</DeleteRoleResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteRolePolicy":{
      "name":"DeleteRolePolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteRolePolicyRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified policy associated with the specified role.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteRolePolicy\n&PolicyName=S3AccessPolicy\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteRolePolicyResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ResponseMetadata>\n    <RequestId>c749ee7f-99ef-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</DeleteRolePolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteSAMLProvider":{
      "name":"DeleteSAMLProvider",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteSAMLProviderRequest"},
      "errors":[
        {
          "shape":"InvalidInputException",
          "error":{
            "code":"InvalidInput",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true
        }
      ],
      "documentation":"<p>Deletes a SAML provider.</p>\n\t\t<p>Deleting the provider does not update any roles that reference the SAML provider as a\n\t\t\tprincipal in their trust policies. Any attempt to assume a role that references a SAML\n\t\t\tprovider that has been deleted will fail. </p>\n\t\t<note>This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version\n\t\t\t4</a>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteSAMLProvider\n&Name=arn:aws:iam::123456789012:saml-metadata/MyUniversity\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t</examples>"
    },
    "DeleteServerCertificate":{
      "name":"DeleteServerCertificate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteServerCertificateRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"DeleteConflictException",
          "error":{
            "code":"DeleteConflict",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to delete a resource that has attached\n\t\t\tsubordinate entities. The error message describes these entities.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified server certificate.</p>\n\t\t<important>If you are using a server certificate with Elastic Load Balancing, deleting the\n\t\t\tcertificate could have implications for your application. If Elastic Load Balancing doesn't\n\t\t\tdetect the deletion of bound certificates, it may continue to use the certificates. This could\n\t\t\tcause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the\n\t\t\treference to the certificate from Elastic Load Balancing before using this command to delete\n\t\t\tthe certificate. For more information, go to <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html\" target=\"blank\">DeleteLoadBalancerListeners</a> in the <i>Elastic Load Balancing API\n\t\t\t\tReference</i>.</important>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteServerCertificate\n&ServerCertificateName=ProdServerCert\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteServerCertificateResponse>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</DeleteServerCertificateResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteSigningCertificate":{
      "name":"DeleteSigningCertificate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteSigningCertificateRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified signing certificate associated with the specified user.</p>\n\t\t<p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS\n\t\t\taccess key ID signing the request. Because this action works for access keys under the AWS\n\t\t\taccount, you can use this API to manage root credentials even if the AWS account has no\n\t\t\tassociated users.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteSigningCertificate\n&UserName=Bob\n&CertificateId=TA7SMP42TDN5Z26OBPJE7EXAMPLE\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteSigningCertificateResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeleteSigningCertificateResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteUser":{
      "name":"DeleteUser",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteUserRequest"},
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"DeleteConflictException",
          "error":{
            "code":"DeleteConflict",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to delete a resource that has attached\n\t\t\tsubordinate entities. The error message describes these entities.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified user. The user must not belong to any groups, have any keys or signing\n\t\t\tcertificates, or have any attached policies.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteUser\n&UserName=Bob\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteUserResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeleteUserResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteUserPolicy":{
      "name":"DeleteUserPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteUserPolicyRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified policy associated with the specified user.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteUserPolicy\n&UserName=Bob\n&PolicyName=AllAccessPolicy\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<DeleteUserPolicyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</DeleteUserPolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "DeleteVirtualMFADevice":{
      "name":"DeleteVirtualMFADevice",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteVirtualMFADeviceRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"DeleteConflictException",
          "error":{
            "code":"DeleteConflict",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to delete a resource that has attached\n\t\t\tsubordinate entities. The error message describes these entities.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Deletes a virtual MFA device.</p>\n\t\t<note>You must deactivate a user's virtual MFA device before you can delete it. For information\n\t\t\tabout deactivating MFA devices, see <a href=\"http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeactivateMFADevice.html\">DeactivateMFADevice</a>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=DeleteVirtualMFADevice\n&SerialNumber=arn:aws:iam::123456789012:mfa/ExampleName\n&Version=2010-05-08\n&AUTHPARAMS\n</queryrequest>\n\t\t\t<queryresponse>\n<DeleteVirtualMFADeviceResponse>\n  <DeleteVirtualMFADeviceResult>\n    <VirtualMFADevice>\n      <SerialNumber>arn:aws:iam::123456789012:mfa/ExampleName</SerialNumber>\n    </VirtualMFADevice>\n  </DeleteVirtualMFADeviceResult>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</DeleteVirtualMFADeviceResponse>\n</queryresponse>\n\t\t</examples>"
    },
    "EnableMFADevice":{
      "name":"EnableMFADevice",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"EnableMFADeviceRequest"},
      "errors":[
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"EntityTemporarilyUnmodifiableException",
          "error":{
            "code":"EntityTemporarilyUnmodifiable",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that is temporarily unmodifiable,\n\t\t\tsuch as a user name that was deleted and then recreated. The error indicates that the request\n\t\t\tis likely to succeed if you try again after waiting several minutes. The error message\n\t\t\tdescribes the entity.</p>"
        },
        {
          "shape":"InvalidAuthenticationCodeException",
          "error":{
            "code":"InvalidAuthenticationCode",
            "httpStatusCode":403,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the authentication code was not recognized. The error\n\t\t\tmessage describes the specific error.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Enables the specified MFA device and associates it with the specified user name. When\n\t\t\tenabled, the MFA device is required for every subsequent login by the user name associated\n\t\t\twith the device.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=EnableMFADevice\n&UserName=Bob\n&SerialNumber=R1234\n&AuthenticationCode1=234567\n&AuthenticationCode2=987654\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<EnableMFADeviceResponse>\n   <ResponseMetadata>\n     <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</EnableMFADeviceResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetAccountPasswordPolicy":{
      "name":"GetAccountPasswordPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{
        "shape":"GetAccountPasswordPolicyResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetAccountPasswordPolicy</a>\n\t\t\taction.</p>",
        "resultWrapper":"GetAccountPasswordPolicyResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves the password policy for the AWS account. For more information about using a\n\t\t\tpassword policy, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an\n\t\t\t\tIAM Password Policy</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetAccountPasswordPolicy\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetAccountPasswordPolicyResponse>\n  <GetAccountPasswordPolicyResult>\n    <PasswordPolicy> \n        <MinimumPasswordLength>6</MinimumPasswordLength>, \n        <RequireUppercaseCharacters>false</RequireUppercaseCharacters>\n        <RequireLowercaseCharacters>false</RequireLowercaseCharacters> \n        <RequireNumbers>false</RequireNumbers> \n        <RequireSymbols>false</RequireSymbols>\n        <AllowUsersToChangePassword>true</AllowUsersToChangePassword>\n    </PasswordPolicy>\t\n  </GetAccountPasswordPolicyResult>\n  <ResponseMetadata> \n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</GetAccountPasswordPolicyResponse>\t\n</queryresponse>\n\t\t</examples>"
    },
    "GetAccountSummary":{
      "name":"GetAccountSummary",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{
        "shape":"GetAccountSummaryResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetAccountSummary</a> action.</p>",
        "resultWrapper":"GetAccountSummaryResult"
      },
      "documentation":"<p>Retrieves account level information about account entity usage and IAM quotas.</p>\n\t\t<p>For information about limitations on IAM entities, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetAccountSummary\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetAccountSummaryResponse>\n  <GetAccountSummaryResult>\n    <SummaryMap>\n      <entry>\n        <key>Groups</key>\n        <value>31</value>\n      </entry>\n      <entry>\n        <key>GroupsQuota</key>\n        <value>50</value>\n      </entry>\n      <entry>\n        <key>UsersQuota</key>\n        <value>150</value>\n      </entry>\n      <entry>\n        <key>Users</key>\n        <value>35</value>\n      </entry>\n      <entry>\n        <key>GroupPolicySizeQuota</key>\n        <value>10240</value>\n      </entry>\n      <entry>\n        <key>AccessKeysPerUserQuota</key>\n        <value>2</value>\n      </entry>\n      <entry>\n        <key>GroupsPerUserQuota</key>\n        <value>10</value>\n      </entry>\n      <entry>\n        <key>UserPolicySizeQuota</key>\n        <value>10240</value>\n      </entry>\n      <entry>\n        <key>SigningCertificatesPerUserQuota</key>\n        <value>2</value>\n      </entry>\n      <entry>\n        <key>ServerCertificates</key>\n        <value>0</value>\n      </entry>\n      <entry>\n        <key>ServerCertificatesQuota</key>\n        <value>10</value>\n      </entry>\n      <entry>\n        <key>AccountMFAEnabled</key>\n        <value>0</value>\n      </entry>\n      <entry>\n        <key>MFADevicesInUse</key>\n        <value>10</value>\n      </entry>\n      <entry>\n        <key>MFADevices</key>\n        <value>20</value>\n      </entry>\n    </SummaryMap>\n  </GetAccountSummaryResult>\n  <ResponseMetadata>\n    <RequestId>f1e38443-f1ad-11df-b1ef-a9265EXAMPLE</RequestId>\n  </ResponseMetadata>\n</GetAccountSummaryResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetGroup":{
      "name":"GetGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetGroupRequest"},
      "output":{
        "shape":"GetGroupResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetGroup</a> action.</p>",
        "resultWrapper":"GetGroupResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Returns a list of users that are in the specified group. You can paginate the results using\n\t\t\tthe <code>MaxItems</code> and <code>Marker</code> parameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetGroup\n&GroupName=Admins\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetGroupResponse>\n   <GetGroupResult>\n      <Group>\n         <Path>/</Path>\n         <GroupName>Admins</GroupName>\n         <GroupId>AGPACKCEVSQ6C2EXAMPLE</GroupId>\n         <Arn>arn:aws:iam::123456789012:group/Admins</Arn>\n      </Group>\n      <Users>      \n         <member>\n            <Path>/division_abc/subdivision_xyz/</Path>\n            <UserName>Bob</UserName>\n            <UserId>AIDACKCEVSQ6C2EXAMPLE</UserId>\n            <Arn>\n            arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/Bob\n            </Arn>\n         </member>\n         <member>\n            <Path>/division_abc/subdivision_xyz/</Path>\n            <UserName>Susan</UserName>\n            <UserId>AIDACKCEVSQ6C2EXAMPLE</UserId>\n            <Arn>\n            arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/Susan\n            </Arn>\n         </member>\n      </Users>\n      <IsTruncated>false</IsTruncated>\n   </GetGroupResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</GetGroupResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetGroupPolicy":{
      "name":"GetGroupPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetGroupPolicyRequest"},
      "output":{
        "shape":"GetGroupPolicyResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetGroupPolicy</a> action.</p>",
        "resultWrapper":"GetGroupPolicyResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves the specified policy document for the specified group. The returned policy is\n\t\t\tURL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetGroupPolicy\n&GroupName=Admins\n&PolicyName=AdminRoot\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetGroupPolicyResponse>\n   <GetGroupPolicyResult>\n      <GroupName>Admins</GroupName>\n      <PolicyName>AdminRoot</PolicyName>\n      <PolicyDocument>\n      {\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"*\",\"Resource\":\"*\"}]}\n      </PolicyDocument>\n   </GetGroupPolicyResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</GetGroupPolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetInstanceProfile":{
      "name":"GetInstanceProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetInstanceProfileRequest"},
      "output":{
        "shape":"GetInstanceProfileResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetInstanceProfile</a> action.</p>",
        "resultWrapper":"GetInstanceProfileResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves information about the specified instance profile, including the instance profile's\n\t\t\tpath, GUID, ARN, and role. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance\n\t\t\t\tProfiles</a>. For more information about ARNs, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\">ARNs</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetInstanceProfile\n&InstanceProfileName=Webserver\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetInstanceProfileResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <GetInstanceProfileResult>\n    <InstanceProfile>\n      <InstanceProfileId>AIPAD5ARO2C5EXAMPLE3G</InstanceProfileId>\n      <Roles>\n        <member>\n          <Path>/application_abc/component_xyz/</Path>\n          <Arn>arn:aws:iam::123456789012:role/application_abc/component_xyz/S3Access</Arn>\n          <RoleName>S3Access</RoleName>\n          <AssumeRolePolicyDocument>{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}</AssumeRolePolicyDocument>\n          <CreateDate>2012-05-09T15:45:35Z</CreateDate>\n          <RoleId>AROACVYKSVTSZFEXAMPLE</RoleId>\n        </member>\n      </Roles>\n      <InstanceProfileName>Webserver</InstanceProfileName>\n      <Path>/application_abc/component_xyz/</Path>\n      <Arn>arn:aws:iam::123456789012:instance-profile/application_abc/component_xyz/Webserver</Arn>\n      <CreateDate>2012-05-09T16:11:10Z</CreateDate>\n    </InstanceProfile>\n  </GetInstanceProfileResult>\n  <ResponseMetadata>\n    <RequestId>37289fda-99f2-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</GetInstanceProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetLoginProfile":{
      "name":"GetLoginProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetLoginProfileRequest"},
      "output":{
        "shape":"GetLoginProfileResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetLoginProfile</a> action.</p>",
        "resultWrapper":"GetLoginProfileResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves the user name and password-creation date for the specified user. If the user has\n\t\t\tnot been assigned a password, the action returns a 404 (<code>NoSuchEntity</code>) error. </p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetLoginProfile\n&UserName=Bob\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetLoginProfileResponse>\n   <GetLoginProfileResult>\n      <LoginProfile>\n         <UserName>Bob</UserName>\n         <CreateDate>2011-09-19T23:00:56Z</CreateDate>\n      </LoginProfile>\n   </GetLoginProfileResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</GetLoginProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetRole":{
      "name":"GetRole",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetRoleRequest"},
      "output":{
        "shape":"GetRoleResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetRole</a> action.</p>",
        "resultWrapper":"GetRoleResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves information about the specified role, including the role's path, GUID, ARN, and the\n\t\t\tpolicy granting permission to EC2 to assume the role. For more information about ARNs, go to\n\t\t\t\t<a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\">ARNs</a>. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with\n\t\t\tRoles</a>.</p>\n\t\t<p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC\n\t\t\t3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetRole\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetRoleResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <GetRoleResult>\n    <Role>\n      <Path>/application_abc/component_xyz/</Path>\n      <Arn>arn:aws:iam::123456789012:role/application_abc/component_xyz/S3Access</Arn>\n      <RoleName>S3Access</RoleName>\n      <AssumeRolePolicyDocument>{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}</AssumeRolePolicyDocument>\n      <CreateDate>2012-05-08T23:34:01Z</CreateDate>\n      <RoleId>AROADBQP57FF2AEXAMPLE</RoleId>\n    </Role>\n  </GetRoleResult>\n  <ResponseMetadata>\n    <RequestId>df37e965-9967-11e1-a4c3-270EXAMPLE04</RequestId>\n  </ResponseMetadata>\n</GetRoleResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetRolePolicy":{
      "name":"GetRolePolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetRolePolicyRequest"},
      "output":{
        "shape":"GetRolePolicyResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetRolePolicy</a> action.</p>",
        "resultWrapper":"GetRolePolicyResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves the specified policy document for the specified role. For more information about\n\t\t\troles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with\n\t\t\t\tRoles</a>.</p>\n\t\t<p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC\n\t\t\t3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetRolePolicy\n&PolicyName=S3AccessPolicy\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetRolePolicyResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <GetRolePolicyResult>\n    <PolicyName>S3AccessPolicy</PolicyName>\n    <RoleName>S3Access</RoleName>\n    <PolicyDocument>{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"s3:*\"],\"Resource\":[\"*\"]}]}</PolicyDocument>\n  </GetRolePolicyResult>\n  <ResponseMetadata>\n    <RequestId>7e7cd8bc-99ef-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</GetRolePolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetSAMLProvider":{
      "name":"GetSAMLProvider",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetSAMLProviderRequest"},
      "output":{
        "shape":"GetSAMLProviderResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetSAMLProvider</a> action.</p>",
        "resultWrapper":"GetSAMLProviderResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"InvalidInputException",
          "error":{
            "code":"InvalidInput",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true
        }
      ],
      "documentation":"<p>Returns the SAML provider metadocument that was uploaded when the provider was created or\n\t\t\tupdated.</p>\n\t\t<note>This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version\n\t\t\t4</a>.\n\t\t</note>\n\t\t\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetSAMLProvider\n&Name=arn:aws:iam::123456789012:saml-metadata/MyUniversity\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetSAMLProviderResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <GetSAMLProviderResult>\n    <CreateDate>2012-05-09T16:27:11Z</CreateDate>\n    <ValidUntil>2015-12-31T211:59:59Z</ValidUntil>\n    <SAMLMetadataDocument>Pd9fexDssTkRgGNqs...DxptfEs==</SAMLMetadataDocument>\n  </GetSAMLProviderResult>\n  <ResponseMetadata>\n    <RequestId>29f47818-99f5-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</GetSAMLProviderResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetServerCertificate":{
      "name":"GetServerCertificate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetServerCertificateRequest"},
      "output":{
        "shape":"GetServerCertificateResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetServerCertificate</a> action.</p>",
        "resultWrapper":"GetServerCertificateResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves information about the specified server certificate.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetServerCertificate\n&ServerCertificateName=ProdServerCert\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetServerCertificateResponse>\n  <GetServerCertificateResult>\n    <ServerCertificate>\n      <ServerCertificateMetadata>\n        <ServerCertificateName>ProdServerCert</ServerCertificateName>\n        <Path>/company/servercerts/</Path>\n        <Arn>arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert</Arn>\n        <UploadDate>2010-05-08T01:02:03.004Z</UploadDate>\n        <ServerCertificateId>ASCACKCEVSQ6C2EXAMPLE</ServerCertificateId>\n      </ServerCertificateMetadata>\n      <CertificateBody>-----BEGIN CERTIFICATE-----\nMIICdzCCAeCgAwIBAgIGANc+Ha2wMA0GCSqGSIb3DQEBBQUAMFMxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMQwwCgYDVQQLEwNBV1MxITAfBgNVBAMT\nGEFXUyBMaW1pdGVkLUFzc3VyYW5jZSBDQTAeFw0wOTAyMDQxNzE5MjdaFw0xMDAy\nMDQxNzE5MjdaMFIxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMRcw\nFQYDVQQLEw5BV1MtRGV2ZWxvcGVyczEVMBMGA1UEAxMMNTdxNDl0c3ZwYjRtMIGf\nMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCpB/vsOwmT/O0td1RqzKjttSBaPjbr\ndqwNe9BrOyB08fw2+Ch5oonZYXfGUrT6mkYXH5fQot9HvASrzAKHO596FdJA6DmL\nywdWe1Oggk7zFSXO1Xv+3vPrJtaYxYo3eRIp7w80PMkiOv6M0XK8ubcTouODeJbf\nsuDqcLnLDxwsvwIDAQABo1cwVTAOBgNVHQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAww\nCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQULGNaBphBumaKbDRK\nCAi0mH8B3mowDQYJKoZIhvcNAQEFBQADgYEAuKxhkXaCLGcqDuweKtO/AEw9ZePH\nwr0XqsaIK2HZboqruebXEGsojK4Ks0WzwgrEynuHJwTn760xe39rSqXWIOGrOBaX\nwFpWHVjTFMKk+tSDG1lssLHyYWWdFFU4AnejRGORJYNaRHgVTKjHphc5jEhHm0BX\nAEaHzTpmEXAMPLE=\n-----END CERTIFICATE-----\n      </CertificateBody>\n    </ServerCertificate>\n  </GetServerCertificateResult>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</GetServerCertificateResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetUser":{
      "name":"GetUser",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetUserRequest"},
      "output":{
        "shape":"GetUserResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetUser</a> action.</p>",
        "resultWrapper":"GetUserResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves information about the specified user, including the user's path, unique ID, and\n\t\t\tARN.</p>\n\t\t<p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS\n\t\t\taccess key ID signing the request.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetUser\n&UserName=Bob\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetUserResponse>\n   <GetUserResult>\n      <User>\n         <Path>/division_abc/subdivision_xyz/</Path>\n         <UserName>Bob</UserName>\n         <UserId>AIDACKCEVSQ6C2EXAMPLE</UserId>\n         <Arn>\n         arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/Bob\n         </Arn>\n      </User>\n   </GetUserResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</GetUserResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "GetUserPolicy":{
      "name":"GetUserPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetUserPolicyRequest"},
      "output":{
        "shape":"GetUserPolicyResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>GetUserPolicy</a> action.</p>",
        "resultWrapper":"GetUserPolicyResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Retrieves the specified policy document for the specified user. The returned policy is\n\t\t\tURL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=GetUserPolicy\n&UserName=Bob\n&PolicyName=AllAccessPolicy\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<GetUserPolicyResponse>\n   <GetUserPolicyResult>\n      <UserName>Bob</UserName>\n      <PolicyName>AllAccessPolicy</PolicyName>\n      <PolicyDocument>\n      {\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"*\",\"Resource\":\"*\"}]}\n      </PolicyDocument>\n   </GetUserPolicyResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</GetUserPolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListAccessKeys":{
      "name":"ListAccessKeys",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListAccessKeysRequest"},
      "output":{
        "shape":"ListAccessKeysResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListAccessKeys</a> action.</p>",
        "resultWrapper":"ListAccessKeysResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Returns information about the access key IDs associated with the specified user. If there are\n\t\t\tnone, the action returns an empty list.</p>\n\t\t<p>Although each user is limited to a small number of keys, you can still paginate the results\n\t\t\tusing the <code>MaxItems</code> and <code>Marker</code> parameters.</p>\n\t\t<p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly\n\t\t\tbased on the AWS access key ID used to sign the request. Because this action works for access\n\t\t\tkeys under the AWS account, this API can be used to manage root credentials even if the AWS\n\t\t\taccount has no associated users.</p>\n\t\t<note>To ensure the security of your AWS account, the secret access key is accessible only\n\t\t\tduring key and user creation.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListAccessKeys\n&UserName=Bob\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListAccessKeysResponse>\n   <ListAccessKeysResult>\n      <UserName>Bob</UserName>\n      <AccessKeyMetadata>\n         <member>\n            <UserName>Bob</UserName>\n            <AccessKeyId>AKIAIOSFODNN7EXAMPLE</AccessKeyId>\n            <Status>Active</Status>\n         </member>\n         <member>\n            <UserName>Bob</UserName>\n            <AccessKeyId>AKIAI44QH8DHBEXAMPLE</AccessKeyId>\n            <Status>Inactive</Status>\n         </member>\n      </AccessKeyMetadata>\n      <IsTruncated>false</IsTruncated>\n   </ListAccessKeysResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListAccessKeysResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListAccountAliases":{
      "name":"ListAccountAliases",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListAccountAliasesRequest"},
      "output":{
        "shape":"ListAccountAliasesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListAccountAliases</a> action.</p>",
        "resultWrapper":"ListAccountAliasesResult"
      },
      "documentation":"<p>Lists the account aliases associated with the account. For information about using an AWS\n\t\t\taccount alias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\" target=\"_blank\">Using an Alias for Your AWS Account ID</a> in <i>Using AWS Identity and\n\t\t\t\tAccess Management</i>.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListAccountAliases\n&Version=2010-05-08\n&AUTHPARAMS      \n      </queryrequest>\n\t\t\t<queryresponse>\n<ListAccountAliasesResponse>\n  <ListAccountAliasesResult>\n    <IsTruncated>false</IsTruncated>\n    <AccountAliases>\n      <member>foocorporation</member>\n    </AccountAliases>\n  </ListAccountAliasesResult>\n  <ResponseMetadata>\n    <RequestId>c5a076e9-f1b0-11df-8fbe-45274EXAMPLE</RequestId>\n  </ResponseMetadata>\n</ListAccountAliasesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListGroupPolicies":{
      "name":"ListGroupPolicies",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListGroupPoliciesRequest"},
      "output":{
        "shape":"ListGroupPoliciesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListGroupPolicies</a> action.</p>",
        "resultWrapper":"ListGroupPoliciesResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Lists the names of the policies associated with the specified group. If there are none, the\n\t\t\taction returns an empty list.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListGroupPolicies\n&GroupName=Admins\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListGroupPoliciesResponse>\n   <ListGroupPoliciesResult>\n      <PolicyNames>\n         <member>AdminRoot</member>\n         <member>KeyPolicy</member>\n      </PolicyNames>\n      <IsTruncated>false</IsTruncated>\n   </ListGroupPoliciesResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListGroupPoliciesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListGroups":{
      "name":"ListGroups",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListGroupsRequest"},
      "output":{
        "shape":"ListGroupsResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListGroups</a> action.</p>",
        "resultWrapper":"ListGroupsResult"
      },
      "documentation":"<p>Lists the groups that have the specified path prefix.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListGroups\n&PathPrefix=/division_abc/subdivision_xyz/\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListGroupsResponse>\n   <ListGroupsResult>\n      <Groups>\n         <member>\n            <Path>/division_abc/subdivision_xyz/</Path>\n            <GroupName>Admins</GroupName>\n            <GroupId>AGPACKCEVSQ6C2EXAMPLE</GroupId>\n            <Arn>arn:aws:iam::123456789012:group/Admins</Arn>\n         </member>\n         <member>\n            <Path>/division_abc/subdivision_xyz/product_1234/engineering/\n            </Path>\n            <GroupName>Test</GroupName>\n            <GroupId>AGP2MAB8DPLSRHEXAMPLE</GroupId>\n            <Arn>arn:aws:iam::123456789012:group\n            /division_abc/subdivision_xyz/product_1234/engineering/Test</Arn>\n         </member>\n         <member>\n            <Path>/division_abc/subdivision_xyz/product_1234/</Path>\n            <GroupName>Managers</GroupName>\n            <GroupId>AGPIODR4TAW7CSEXAMPLE</GroupId>\n            <Arn>arn:aws:iam::123456789012\n            :group/division_abc/subdivision_xyz/product_1234/Managers</Arn>\n         </member>\n      </Groups>\n      <IsTruncated>false</IsTruncated>\n   </ListGroupsResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListGroupsResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListGroupsForUser":{
      "name":"ListGroupsForUser",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListGroupsForUserRequest"},
      "output":{
        "shape":"ListGroupsForUserResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListGroupsForUser</a> action.</p>",
        "resultWrapper":"ListGroupsForUserResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Lists the groups the specified user belongs to.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\n\t\t\t\t\nhttps://iam.amazonaws.com/\n?Action=ListGroupsForUser\n&UserName=Bob\n&AUTHPARAMS\n      \n\t\t\t</queryrequest>\n\t\t\t<queryresponse>\n\t\t\t\t\n<ListGroupsForUserResponse> \n   <ListGroupsForUserResult>\n      <Groups>\n         <member>\n            <Path>/</Path>\n            <GroupName>Admins</GroupName>\n            <GroupId>AGPACKCEVSQ6C2EXAMPLE</GroupId>\n            <Arn>arn:aws:iam::123456789012:group/Admins</Arn>\n         </member>\n      </Groups>\n      <IsTruncated>false</IsTruncated>\n   </ListGroupsForUserResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListGroupsForUserResponse>\n</queryresponse>\n\t\t</examples>"
    },
    "ListInstanceProfiles":{
      "name":"ListInstanceProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListInstanceProfilesRequest"},
      "output":{
        "shape":"ListInstanceProfilesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListInstanceProfiles</a> action.</p>",
        "resultWrapper":"ListInstanceProfilesResult"
      },
      "documentation":"<p>Lists the instance profiles that have the specified path prefix. If there are none, the\n\t\t\taction returns an empty list. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance\n\t\t\t\tProfiles</a>.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListInstanceProfiles\n&MaxItems=100\n&PathPrefix=/application_abc/\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListInstanceProfilesResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ListInstanceProfilesResult>\n    <IsTruncated>false</IsTruncated>\n    <InstanceProfiles>\n      <member>\n        <Id>AIPACIFN4OZXG7EXAMPLE</Id>\n        <Roles/>\n        <InstanceProfileName>Database</InstanceProfileName>\n        <Path>/application_abc/component_xyz/</Path>\n        <Arn>arn:aws:iam::123456789012:instance-profile/application_abc/component_xyz/Database</Arn>\n        <CreateDate>2012-05-09T16:27:03Z</CreateDate>\n      </member>\n      <member>\n        <Id>AIPACZLSXM2EYYEXAMPLE</Id>\n        <Roles/>\n        <InstanceProfileName>Webserver</InstanceProfileName>\n        <Path>/application_abc/component_xyz/</Path>\n        <Arn>arn:aws:iam::123456789012:instance-profile/application_abc/component_xyz/Webserver</Arn>\n        <CreateDate>2012-05-09T16:27:11Z</CreateDate>\n      </member>\n    </InstanceProfiles>\n  </ListInstanceProfilesResult>\n  <ResponseMetadata>\n    <RequestId>fd74fa8d-99f3-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</ListInstanceProfilesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListInstanceProfilesForRole":{
      "name":"ListInstanceProfilesForRole",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListInstanceProfilesForRoleRequest"},
      "output":{
        "shape":"ListInstanceProfilesForRoleResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListInstanceProfilesForRole</a>\n\t\t\taction.</p>",
        "resultWrapper":"ListInstanceProfilesForRoleResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Lists the instance profiles that have the specified associated role. If there are none, the\n\t\t\taction returns an empty list. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance\n\t\t\t\tProfiles</a>.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListInstanceProfilesForRole\n&MaxItems=100\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListInstanceProfilesForRoleResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ListInstanceProfilesForRoleResult>\n    <IsTruncated>false</IsTruncated>\n    <InstanceProfiles>\n      <member>\n        <Id>AIPACZLS2EYYXMEXAMPLE</Id>\n        <Roles>\n          <member>\n            <Path>/application_abc/component_xyz/</Path>\n            <Arn>arn:aws:iam::123456789012:role/application_abc/component_xyz/S3Access</Arn>\n            <RoleName>S3Access</RoleName>\n            <AssumeRolePolicyDocument>{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}</AssumeRolePolicyDocument>\n            <CreateDate>2012-05-09T15:45:35Z</CreateDate>\n            <RoleId>AROACVSVTSZYK3EXAMPLE</RoleId>\n          </member>\n        </Roles>\n        <InstanceProfileName>Webserver</InstanceProfileName>\n        <Path>/application_abc/component_xyz/</Path>\n        <Arn>arn:aws:iam::123456789012:instance-profile/application_abc/component_xyz/Webserver</Arn>\n        <CreateDate>2012-05-09T16:27:11Z</CreateDate>\n      </member>\n    </InstanceProfiles>\n  </ListInstanceProfilesForRoleResult>\n  <ResponseMetadata>\n    <RequestId>6a8c3992-99f4-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</ListInstanceProfilesForRoleResponse>\n\n      </queryresponse>\n\t\t</examples>"
    },
    "ListMFADevices":{
      "name":"ListMFADevices",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListMFADevicesRequest"},
      "output":{
        "shape":"ListMFADevicesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListMFADevices</a> action.</p>",
        "resultWrapper":"ListMFADevicesResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Lists the MFA devices. If the request includes the user name, then this action lists all the\n\t\t\tMFA devices associated with the specified user name. If you do not specify a user name, IAM\n\t\t\tdetermines the user name implicitly based on the AWS access key ID signing the request.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListMFADevices\n&UserName=Bob\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListMFADevicesResponse>\n   <ListMFADevicesResult>\n      <MFADevices>\n         <member>\n            <UserName>Bob</UserName>\n            <SerialNumber>R1234</SerialNumber>\n         </member>\n      </MFADevices>\n      <IsTruncated>false</IsTruncated>\n   </ListMFADevicesResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListMFADevicesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListRolePolicies":{
      "name":"ListRolePolicies",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListRolePoliciesRequest"},
      "output":{
        "shape":"ListRolePoliciesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListRolePolicies</a> action.</p>",
        "resultWrapper":"ListRolePoliciesResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Lists the names of the policies associated with the specified role. If there are none, the\n\t\t\taction returns an empty list.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListRolePolicies\n&MaxItems=100\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListRolePoliciesResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ListRolePoliciesResult>\n    <PolicyNames>\n      <member>CloudwatchPutMetricPolicy</member>\n      <member>S3AccessPolicy</member>\n    </PolicyNames>\n    <IsTruncated>false</IsTruncated>\n  </ListRolePoliciesResult>\n  <ResponseMetadata>\n    <RequestId>8c7e1816-99f0-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</ListRolePoliciesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListRoles":{
      "name":"ListRoles",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListRolesRequest"},
      "output":{
        "shape":"ListRolesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListRoles</a> action.</p>",
        "resultWrapper":"ListRolesResult"
      },
      "documentation":"<p>Lists the roles that have the specified path prefix. If there are none, the action returns an\n\t\t\tempty list. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with\n\t\t\tRoles</a>.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC\n\t\t\t3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListRoles\n&MaxItems=100\n&PathPrefix=/application_abc/\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListRolesResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ListRolesResult>\n    <IsTruncated>false</IsTruncated>\n    <Roles>\n      <member>\n        <Path>/application_abc/component_xyz/</Path>\n        <Arn>arn:aws:iam::123456789012:role/application_abc/component_xyz/S3Access</Arn>\n        <RoleName>S3Access</RoleName>\n        <AssumeRolePolicyDocument>{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}</AssumeRolePolicyDocument>\n        <CreateDate>2012-05-09T15:45:35Z</CreateDate>\n        <RoleId>AROACVSVTSZYEXAMPLEYK</RoleId>\n      </member>\n      <member>\n        <Path>/application_abc/component_xyz/</Path>\n        <Arn>arn:aws:iam::123456789012:role/application_abc/component_xyz/SDBAccess</Arn>\n        <RoleName>SDBAccess</RoleName>\n        <AssumeRolePolicyDocument>{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}</AssumeRolePolicyDocument>\n        <CreateDate>2012-05-09T15:45:45Z</CreateDate>\n        <RoleId>AROAC2ICXG32EXAMPLEWK</RoleId>\n      </member>\n    </Roles>\n  </ListRolesResult>\n  <ResponseMetadata>\n    <RequestId>20f7279f-99ee-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</ListRolesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListSAMLProviders":{
      "name":"ListSAMLProviders",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListSAMLProvidersRequest"},
      "output":{
        "shape":"ListSAMLProvidersResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListSAMLProviders</a> action.</p>",
        "resultWrapper":"ListSAMLProvidersResult"
      },
      "documentation":"<p>Lists the SAML providers in the account.</p>\n\t\t<note>This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version\n\t\t\t4</a>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListSAMLProviders\n&MaxItems=100\n&PathPrefix=/application_abc/\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListSAMLProvidersResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ListSAMLProvidersResult>\n    <SAMLProviderList>\n      <member>\n        <Arn>arn:aws:iam::123456789012:instance-profile/application_abc/component_xyz/Database</Arn>\n        <ValidUntil>2032-05-09T16:27:11Z</ValidUntil>\n        <CreateDate>2012-05-09T16:27:03Z</CreateDate>\n      </member>\n      <member>\n        <Arn>arn:aws:iam::123456789012:instance-profile/application_abc/component_xyz/Webserver</Arn>\n        <ValidUntil>2015-03-11T13:11:02Z</ValidUntil>\n        <CreateDate>2012-05-09T16:27:11Z</CreateDate>\n      </member>\n    </SAMLProviderList>\n  </ListSAMLProvidersResult>\n  <ResponseMetadata>\n    <RequestId>fd74fa8d-99f3-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</ListInstanceProfilesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListServerCertificates":{
      "name":"ListServerCertificates",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListServerCertificatesRequest"},
      "output":{
        "shape":"ListServerCertificatesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListServerCertificates</a>\n\t\t\taction.</p>",
        "resultWrapper":"ListServerCertificatesResult"
      },
      "documentation":"<p>Lists the server certificates that have the specified path prefix. If none exist, the action\n\t\t\treturns an empty list.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListServerCertificates\n&PathPrefix=/company/servercerts\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListServerCertificatesResponse>\n  <ListServerCertificatesResult>\n    <IsTruncated>false</IsTruncated>\n    <ServerCertificateMetadataList>\n      <member>\n        <ServerCertificateMetadata>\n          <ServerCertificateName>ProdServerCert</ServerCertificateName>\n          <Path>/company/servercerts/</Path>\n          <Arn>arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert</Arn>\n          <UploadDate>2010-05-08T01:02:03.004Z</UploadDate>\n          <ServerCertificateId>ASCACKCEVSQ6CEXAMPLE1</ServerCertificateId>\n        </ServerCertificateMetadata>\n      </member>\n      <member>\n        <ServerCertificateMetadata>\n          <ServerCertificateName>BetaServerCert</ServerCertificateName>\n          <Path>/company/servercerts/</Path>\n          <Arn>arn:aws:iam::123456789012:server-certificate/company/servercerts/BetaServerCert</Arn>\n          <UploadDate>2010-05-08T02:03:01.004Z</UploadDate>\n          <ServerCertificateId>ASCACKCEVSQ6CEXAMPLE2</ServerCertificateId>\n        </ServerCertificateMetadata>\n      </member>\n      <member>\n        <ServerCertificateMetadata>\n          <ServerCertificateName>TestServerCert</ServerCertificateName>\n          <Path>/company/servercerts/</Path>\n          <Arn>arn:aws:iam::123456789012:server-certificate/company/servercerts/TestServerCert</Arn>\n          <UploadDate>2010-05-08T03:01:02.004Z</UploadDate>\n          <ServerCertificateId>ASCACKCEVSQ6CEXAMPLE3</ServerCertificateId>\n        </ServerCertificateMetadata>\n      </member>\n    </ServerCertificateMetadataList>\n  </ListServerCertificatesResult>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</ListServerCertificatesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListSigningCertificates":{
      "name":"ListSigningCertificates",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListSigningCertificatesRequest"},
      "output":{
        "shape":"ListSigningCertificatesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListSigningCertificates</a>\n\t\t\taction.</p>",
        "resultWrapper":"ListSigningCertificatesResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Returns information about the signing certificates associated with the specified user. If\n\t\t\tthere are none, the action returns an empty list.</p>\n\t\t<p>Although each user is limited to a small number of signing certificates, you can still\n\t\t\tpaginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>\n\t\t<p>If the <code>UserName</code> field is not specified, the user name is determined implicitly\n\t\t\tbased on the AWS access key ID used to sign the request. Because this action works for access\n\t\t\tkeys under the AWS account, this API can be used to manage root credentials even if the AWS\n\t\t\taccount has no associated users.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListSigningCertificates\n&UserName=Bob\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListSigningCertificatesResponse>\n   <ListSigningCertificatesResult>\n      <UserName>Bob</UserName>\n      <Certificates>\n         <member>\n            <UserName>Bob</UserName>\n            <CertificateId>TA7SMP42TDN5Z26OBPJE7EXAMPLE</CertificateId>\n            <CertificateBody>-----BEGIN CERTIFICATE-----\n    MIICdzCCAeCgAwIBAgIGANc+Ha2wMA0GCSqGSIb3DQEBBQUAMFMxCzAJBgNVBAYT\n    AlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMQwwCgYDVQQLEwNBV1MxITAfBgNVBAMT\n    GEFXUyBMaW1pdGVkLUFzc3VyYW5jZSBDQTAeFw0wOTAyMDQxNzE5MjdaFw0xMDAy\n    MDQxNzE5MjdaMFIxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMRcw\n    FQYDVQQLEw5BV1MtRGV2ZWxvcGVyczEVMBMGA1UEAxMMNTdxNDl0c3ZwYjRtMIGf\n    MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCpB/vsOwmT/O0td1RqzKjttSBaPjbr\n    dqwNe9BrOyB08fw2+Ch5oonZYXfGUrT6mkYXH5fQot9HvASrzAKHO596FdJA6DmL\n    ywdWe1Oggk7zFSXO1Xv+3vPrJtaYxYo3eRIp7w80PMkiOv6M0XK8ubcTouODeJbf\n    suDqcLnLDxwsvwIDAQABo1cwVTAOBgNVHQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAww\n    CgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQULGNaBphBumaKbDRK\n    CAi0mH8B3mowDQYJKoZIhvcNAQEFBQADgYEAuKxhkXaCLGcqDuweKtO/AEw9ZePH\n    wr0XqsaIK2HZboqruebXEGsojK4Ks0WzwgrEynuHJwTn760xe39rSqXWIOGrOBaX\n    wFpWHVjTFMKk+tSDG1lssLHyYWWdFFU4AnejRGORJYNaRHgVTKjHphc5jEhHm0BX\n    AEaHzTpmEXAMPLE=\n    -----END CERTIFICATE-----</CertificateBody>\n            <Status>Active</Status>\n         </member>\n      </Certificates>\n      <IsTruncated>false</IsTruncated>\n   </ListSigningCertificatesResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListSigningCertificatesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListUserPolicies":{
      "name":"ListUserPolicies",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListUserPoliciesRequest"},
      "output":{
        "shape":"ListUserPoliciesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListUserPolicies</a> action.</p>",
        "resultWrapper":"ListUserPoliciesResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Lists the names of the policies associated with the specified user. If there are none, the\n\t\t\taction returns an empty list.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListUserPolicies\n&UserName=Bob\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ListUserPoliciesResponse>\n   <ListUserPoliciesResult>\n      <PolicyNames>\n         <member>AllAccessPolicy</member>\n         <member>KeyPolicy</member>\n      </PolicyNames>\n      <IsTruncated>false</IsTruncated>\n   </ListUserPoliciesResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListUserPoliciesResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListUsers":{
      "name":"ListUsers",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListUsersRequest"},
      "output":{
        "shape":"ListUsersResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListUsers</a> action.</p>",
        "resultWrapper":"ListUsersResult"
      },
      "documentation":"<p>Lists the users that have the specified path prefix. If there are none, the action returns an\n\t\t\tempty list.</p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ListUsers\n&PathPrefix=/division_abc/subdivision_xyz/product_1234/engineering/\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\n\t\t\t<queryresponse>\n<ListUsersResponse>\n   <ListUsersResult>\n      <Users>\n         <member>\n            <Path>/division_abc/subdivision_xyz/engineering/</Path>\n            <UserName>Andrew</UserName>\n            <UserId>AID2MAB8DPLSRHEXAMPLE</UserId>\n            <Arn>arn:aws:iam::123456789012:user\n            /division_abc/subdivision_xyz/engineering/Andrew</Arn>\n         </member>\n         <member>\n            <Path>/division_abc/subdivision_xyz/engineering/</Path>\n            <UserName>Jackie</UserName>\n            <UserId>AIDIODR4TAW7CSEXAMPLE</UserId>\n            <Arn>arn:aws:iam::123456789012:user\n            /division_abc/subdivision_xyz/engineering/Jackie</Arn>\n         </member>\n      </Users>\n      <IsTruncated>false</IsTruncated>\n   </ListUsersResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ListUsersResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ListVirtualMFADevices":{
      "name":"ListVirtualMFADevices",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListVirtualMFADevicesRequest"},
      "output":{
        "shape":"ListVirtualMFADevicesResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>ListVirtualMFADevices</a>\n\t\t\taction.</p>",
        "resultWrapper":"ListVirtualMFADevicesResult"
      },
      "documentation":"<p> Lists the virtual MFA devices under the AWS account by assignment status. If you do not\n\t\t\tspecify an assignment status, the action returns a list of all virtual MFA devices. Assignment\n\t\t\tstatus can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>. </p>\n\t\t<p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>\n\t\t\tparameters.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\n<!-- This example shows the request where \n     the AssignmentStatus is Any -->\n  \nhttps://iam.amazonaws.com/\n?Action=ListVirtualMFADevices\n&AssignmentStatus=Any\n&AUTHPARAMS\n</queryrequest>\n\t\t\t<queryresponse>\n<!-- The action returns all three virtual MFA devices\n     associated with the account: the first device is\n     unassigned, the second is assigned to the root \n     account, and the third is assigned to a user \n     named ExampleUser under the account. -->\n\n<ListVirtualMFADevicesResponse>\n  <ListVirtualMFADevicesResult>\n    <IsTruncated>false</IsTruncated>\n    <VirtualMFADevices>\n      <member>\n        <SerialNumber>\n        arn:aws:iam::123456789012:mfa/MFAdeviceName\n        </SerialNumber>\n      </member>\n      <member>\n        <SerialNumber>\n        arn:aws:iam::123456789012:mfa/RootMFAdeviceName\n        </SerialNumber>\n        <EnableDate>2011-10-20T20:49:03Z</EnableDate>\n        <User>\n          <UserId>123456789012</UserId>\n          <Arn>arn:aws:iam::123456789012:root</Arn>\n          <CreateDate>2009-10-13T22:00:36Z</CreateDate>\n        </User>\n      </member>\n      <member>\n        <SerialNumber>\n        arn:aws:iam:::mfa/ExampleUserMFAdeviceName\n        </SerialNumber>\n        <EnableDate>2011-10-31T20:45:02Z</EnableDate>\n        <User>\n          <UserId>AIDEXAMPLE4EXAMPLEXYZ</UserId>\n          <Path>/</Path>\n          <UserName>ExampleUser</UserName>\n          <Arn>arn:aws:iam::111122223333:user/ExampleUser</Arn>\n          <CreateDate>2011-07-01T17:23:07Z</CreateDate>\n        </User>\n      </member>\n    </VirtualMFADevices>\n  </ListVirtualMFADevicesResult>\n  <ResponseMetadata>\n    <RequestId>b61ce1b1-0401-11e1-b2f8-2dEXAMPLEbfc</RequestId>\n  </ResponseMetadata>\n</ListVirtualMFADevicesResponse>\n</queryresponse>\n\t\t</examples>"
    },
    "PutGroupPolicy":{
      "name":"PutGroupPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"PutGroupPolicyRequest"},
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"MalformedPolicyDocumentException",
          "error":{
            "code":"MalformedPolicyDocument",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the policy document was malformed. The error message\n\t\t\tdescribes the specific error.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Adds (or updates) a policy document associated with the specified group. For information\n\t\t\tabout policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html\" target=\"_blank\">Overview of Policies</a> in <i>Using AWS Identity and Access Management</i>.</p>\n\t\t<p>For information about limits on the number of policies you can associate with a group, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<note>Because policy documents can be large, you should use POST rather than GET when calling\n\t\t\t\t<code>PutGroupPolicy</code>. For information about setting up signatures and authorization\n\t\t\tthrough the API, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\" target=\"_blank\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information\n\t\t\tabout using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\" target=\"_blank\">Making\n\t\t\t\tQuery Requests</a> in <i>Using IAM</i>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=PutGroupPolicy\n&GroupName=Admins\n&PolicyName=AdminRoot\n&PolicyDocument={\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"*\",\"Resource\":\"*\"}]}\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<PutGroupPolicyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</PutGroupPolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "PutRolePolicy":{
      "name":"PutRolePolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"PutRolePolicyRequest"},
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"MalformedPolicyDocumentException",
          "error":{
            "code":"MalformedPolicyDocument",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the policy document was malformed. The error message\n\t\t\tdescribes the specific error.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Adds (or updates) a policy document associated with the specified role. For information about\n\t\t\tpolicies, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html\" target=\"_blank\">Overview of Policies</a> in <i>Using AWS Identity and Access Management</i>.</p>\n\t\t<p>For information about limits on the policies you can associate with a role, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<note>Because policy documents can be large, you should use POST rather than GET when calling\n\t\t\t\t<code>PutRolePolicy</code>. For information about setting up signatures and authorization\n\t\t\tthrough the API, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\" target=\"_blank\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information\n\t\t\tabout using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\" target=\"_blank\">Making\n\t\t\t\tQuery Requests</a> in <i>Using IAM</i>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=PutRolePolicy\n&RoleName=S3Access\n&PolicyName=S3AccessPolicy\n&PolicyDocument={\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"s3:*\",\"Resource\":\"*\"}]}\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<PutRolePolicyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</PutRolePolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "PutUserPolicy":{
      "name":"PutUserPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"PutUserPolicyRequest"},
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"MalformedPolicyDocumentException",
          "error":{
            "code":"MalformedPolicyDocument",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the policy document was malformed. The error message\n\t\t\tdescribes the specific error.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Adds (or updates) a policy document associated with the specified user. For information about\n\t\t\tpolicies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html\" target=\"_blank\">Overview of Policies</a> in <i>Using AWS Identity and Access Management</i>.</p>\n\t\t<p>For information about limits on the number of policies you can associate with a user, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<note>Because policy documents can be large, you should use POST rather than GET when calling\n\t\t\t\t<code>PutUserPolicy</code>. For information about setting up signatures and authorization\n\t\t\tthrough the API, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\" target=\"_blank\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information\n\t\t\tabout using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\" target=\"_blank\">Making\n\t\t\t\tQuery Requests</a> in <i>Using IAM</i>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=PutUserPolicy\n&UserName=Bob\n&PolicyName=AllAccessPolicy\n&PolicyDocument={\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"*\",\"Resource\":\"*\"}]}\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<PutUserPolicyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</PutUserPolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "RemoveRoleFromInstanceProfile":{
      "name":"RemoveRoleFromInstanceProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RemoveRoleFromInstanceProfileRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Removes the specified role from the specified instance profile.</p>\n\t\t<important>Make sure you do not have any Amazon EC2 instances running with the role you are\n\t\t\tabout to remove from the instance profile. Removing a role from an instance profile that is\n\t\t\tassociated with a running instance will break any applications running on the\n\t\t\tinstance.</important>\n\t\t<p>For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.\n\t\t\tFor more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance\n\t\t\t\tProfiles</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=RemoveRoleFromInstanceProfile\n&InstanceProfileName=Webserver\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<RemoveRoleFromInstanceProfileResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ResponseMetadata>\n    <RequestId>29f47818-99f5-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</RemoveRoleFromInstanceProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "RemoveUserFromGroup":{
      "name":"RemoveUserFromGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RemoveUserFromGroupRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Removes the specified user from the specified group.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=RemoveUserFromGroup\n&GroupName=Managers\n&UserName=Bob\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<RemoveUserFromGroupResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</RemoveUserFromGroupResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "ResyncMFADevice":{
      "name":"ResyncMFADevice",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ResyncMFADeviceRequest"},
      "errors":[
        {
          "shape":"InvalidAuthenticationCodeException",
          "error":{
            "code":"InvalidAuthenticationCode",
            "httpStatusCode":403,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the authentication code was not recognized. The error\n\t\t\tmessage describes the specific error.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Synchronizes the specified MFA device with AWS servers.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=ResyncMFADevice\n&UserName=Bob\n&SerialNumber=R1234\n&AuthenticationCode1=234567\n&AuthenticationCode2=987654\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<ResyncMFADeviceResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</ResyncMFADeviceResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateAccessKey":{
      "name":"UpdateAccessKey",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateAccessKeyRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Changes the status of the specified access key from Active to Inactive, or vice versa. This\n\t\t\taction can be used to disable a user's key as part of a key rotation work flow.</p>\n\t\t<p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly\n\t\t\tbased on the AWS access key ID used to sign the request. Because this action works for access\n\t\t\tkeys under the AWS account, this API can be used to manage root credentials even if the AWS\n\t\t\taccount has no associated users.</p>\n\t\t<p>For information about rotating keys, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html\" target=\"_blank\">Managing Keys and Certificates</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateAccessKey\n&UserName=Bob\n&AccessKeyId=AKIAIOSFODNN7EXAMPLE\n&Status=Inactive\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateAccessKeyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</UpdateAccessKeyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateAccountPasswordPolicy":{
      "name":"UpdateAccountPasswordPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateAccountPasswordPolicyRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"MalformedPolicyDocumentException",
          "error":{
            "code":"MalformedPolicyDocument",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the policy document was malformed. The error message\n\t\t\tdescribes the specific error.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Updates the password policy settings for the account. For more information about using a\n\t\t\tpassword policy, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an\n\t\t\t\tIAM Password Policy</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateAccountPasswordPolicy\n&MinimumPasswordLength=9\n&RequireSymbols=true\n&RequireNumbers=false\n&RequireUppercaseCharacters=true\n&RequireLowercaseCharacters=true\n&AllowUsersToChangePassword=true\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateAccountPasswordPolicyResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</UpdateAccountPasswordPolicyResponse>\n</queryresponse>\n\t\t</examples>"
    },
    "UpdateAssumeRolePolicy":{
      "name":"UpdateAssumeRolePolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateAssumeRolePolicyRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"MalformedPolicyDocumentException",
          "error":{
            "code":"MalformedPolicyDocument",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the policy document was malformed. The error message\n\t\t\tdescribes the specific error.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Updates the policy that grants an entity permission to assume a role. Currently, only an\n\t\t\tAmazon EC2 instance can assume a role. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with\n\t\t\tRoles</a>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateAssumeRolePolicy\n&PolicyDocument={\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]},\"Action\":[\"sts:AssumeRole\"]}]}\n&RoleName=S3Access\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateAssumeRolePolicyResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <ResponseMetadata>\n    <RequestId>309c1671-99ed-11e1-a4c3-270EXAMPLE04</RequestId>\n  </ResponseMetadata>\n</UpdateAssumeRolePolicyResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateGroup":{
      "name":"UpdateGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateGroupRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Updates the name and/or the path of the specified group.</p>\n\t\t<important> You should understand the implications of changing a group's path or name. For more\n\t\t\tinformation, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Renaming.html\" target=\"_blank\">Renaming Users and Groups</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>. </important>\n\t\t<note>To change a group name the requester must have appropriate permissions on both the source\n\t\t\tobject and the target object. For example, to change Managers to MGRs, the entity making the\n\t\t\trequest must have permission on Managers and MGRs, or must have permission on all (*). For\n\t\t\tmore information about permissions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\" target=\"blank\">Permissions and Policies</a>. </note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateGroup\n&GroupName=Test\n&NewGroupName=Test_1\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateGroupResponse>\n   <UpdateGroupResult>\n      <Group xmlns=\"http://iam.amazonaws.com/doc/2010-05-08/\">\n         <Path>/division_abc/subdivision_xyz/product_1234/engineering/</Path>\n         <GroupName>Test_1</GroupName>\n         <GroupId>AGP2MAB8DPLSRHEXAMPLE</GroupId>\n         <Arn>arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/\n         product_1234/engineering/Test_1</Arn>\n      </Group>\n   </UpdateGroupResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</UpdateGroupResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateLoginProfile":{
      "name":"UpdateLoginProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateLoginProfileRequest"},
      "errors":[
        {
          "shape":"EntityTemporarilyUnmodifiableException",
          "error":{
            "code":"EntityTemporarilyUnmodifiable",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that is temporarily unmodifiable,\n\t\t\tsuch as a user name that was deleted and then recreated. The error indicates that the request\n\t\t\tis likely to succeed if you try again after waiting several minutes. The error message\n\t\t\tdescribes the entity.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"PasswordPolicyViolationException",
          "error":{
            "code":"PasswordPolicyViolation",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the provided password did not meet the requirements imposed\n\t\t\tby the account password policy.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Changes the password for the specified user.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateLoginProfile\n&UserName=Bob\n&Password=NewPassword\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateLoginProfileResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</UpdateLoginProfileResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateSAMLProvider":{
      "name":"UpdateSAMLProvider",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateSAMLProviderRequest"},
      "output":{
        "shape":"UpdateSAMLProviderResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>UpdateSAMLProvider</a> action.</p>",
        "resultWrapper":"UpdateSAMLProviderResult"
      },
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"InvalidInputException",
          "error":{
            "code":"InvalidInput",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Updates the metadata document for an existing SAML provider.</p>\n\t\t<note>This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version\n\t\t\t4</a>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateSAMLProvider\n&Name=arn:aws:iam::123456789012:saml-metadata/MyUniversity\n&SAMLProviderDocument=VGhpcyBpcyB3aGVyZSB5b3UgcHV0IHRoZSBTQU1MIHByb3ZpZGVyIG1ldGFkYXRhIGRvY3VtZW50\nLCBCYXNlNjQtZW5jb2RlZCBpbnRvIGEgYmlnIHN0cmluZy4=\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateSAMLProviderResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n  <UpdateSAMLProviderResult>\n    <SAMLProviderArn>arn:aws:iam::123456789012:saml-metadata/MyUniversity</SAMLProviderArn>\n  </UpdateSAMLProviderResult>\n  <ResponseMetadata>\n    <RequestId>29f47818-99f5-11e1-a4c3-27EXAMPLE804</RequestId>\n  </ResponseMetadata>\n</UpdateSAMLProviderResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateServerCertificate":{
      "name":"UpdateServerCertificate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateServerCertificateRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Updates the name and/or the path of the specified server certificate.</p>\n\t\t<important> You should understand the implications of changing a server certificate's path or\n\t\t\tname. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html\" target=\"_blank\">Managing Server Certificates</a> in <i>Using AWS Identity and Access Management</i>. </important>\n\t\t<note>To change a server certificate name the requester must have appropriate permissions on\n\t\t\tboth the source object and the target object. For example, to change the name from\n\t\t\tProductionCert to ProdCert, the entity making the request must have permission on\n\t\t\tProductionCert and ProdCert, or must have permission on all (*). For more information about\n\t\t\tpermissions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\" target=\"blank\">Permissions and Policies</a>. </note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateServerCertificate\n&ServerCertificateName=ProdServerCert\n&NewServerCertificateName=ProdServerCertName\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateServerCertificateResponse>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</UpdateServerCertificateResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateSigningCertificate":{
      "name":"UpdateSigningCertificate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateSigningCertificateRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        }
      ],
      "documentation":"<p>Changes the status of the specified signing certificate from active to disabled, or vice\n\t\t\tversa. This action can be used to disable a user's signing certificate as part of a\n\t\t\tcertificate rotation work flow.</p>\n\t\t<p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly\n\t\t\tbased on the AWS access key ID used to sign the request. Because this action works for access\n\t\t\tkeys under the AWS account, this API can be used to manage root credentials even if the AWS\n\t\t\taccount has no associated users.</p>\n\t\t<p>For information about rotating certificates, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html\" target=\"_blank\">Managing Keys and Certificates</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateSigningCertificate\n&UserName=Bob\n&CertificateId=TA7SMP42TDN5Z26OBPJE7EXAMPLE\n&Status=Inactive\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateSigningCertificateResponse>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</UpdateSigningCertificateResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UpdateUser":{
      "name":"UpdateUser",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateUserRequest"},
      "errors":[
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        },
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"EntityTemporarilyUnmodifiableException",
          "error":{
            "code":"EntityTemporarilyUnmodifiable",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that is temporarily unmodifiable,\n\t\t\tsuch as a user name that was deleted and then recreated. The error indicates that the request\n\t\t\tis likely to succeed if you try again after waiting several minutes. The error message\n\t\t\tdescribes the entity.</p>"
        }
      ],
      "documentation":"<p>Updates the name and/or the path of the specified user.</p>\n\t\t<important> You should understand the implications of changing a user's path or name. For more\n\t\t\tinformation, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Renaming.html\" target=\"_blank\">Renaming Users and Groups</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>. </important>\n\t\t<note>To change a user name the requester must have appropriate permissions on both the source\n\t\t\tobject and the target object. For example, to change Bob to Robert, the entity making the\n\t\t\trequest must have permission on Bob and Robert, or must have permission on all (*). For more\n\t\t\tinformation about permissions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\" target=\"blank\">Permissions and Policies</a>. </note>\n\t\t<examples>\n\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UpdateUser\n&UserName=Bob\n&NewUserName=Robert\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UpdateUserResponse>\n   <UpdateUserResult>\n   <User>\n      <Path>/division_abc/subdivision_xyz/</Path>\n      <UserName>Robert</UserName>\n      <UserId>AIDACKCEVSQ6C2EXAMPLE</UserId>\n      <Arn>arn:aws::123456789012:user/division_abc/subdivision_xyz/Robert\n      </Arn>\n   </User>\n   </UpdateUserResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</UpdateUserResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UploadServerCertificate":{
      "name":"UploadServerCertificate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UploadServerCertificateRequest"},
      "output":{
        "shape":"UploadServerCertificateResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>UploadServerCertificate</a>\n\t\t\taction.</p>",
        "resultWrapper":"UploadServerCertificateResult"
      },
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"MalformedCertificateException",
          "error":{
            "code":"MalformedCertificate",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the certificate was malformed or expired. The error message\n\t\t\tdescribes the specific error.</p>"
        },
        {
          "shape":"KeyPairMismatchException",
          "error":{
            "code":"KeyPairMismatch",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the public key certificate and the private key do not\n\t\t\tmatch.</p>"
        }
      ],
      "documentation":"<p>Uploads a server certificate entity for the AWS account. The server certificate entity\n\t\t\tincludes a public key certificate, a private key, and an optional certificate chain, which\n\t\t\tshould all be PEM-encoded.</p>\n\t\t<p>For information about the number of server certificates you can upload, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html\" target=\"_blank\">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<note>Because the body of the public key certificate, private key, and the certificate chain can\n\t\t\tbe large, you should use POST rather than GET when calling\n\t\t\t\t<code>UploadServerCertificate</code>. For information about setting up signatures and\n\t\t\tauthorization through the API, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\" target=\"_blank\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information\n\t\t\tabout using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\" target=\"_blank\">Making\n\t\t\t\tQuery Requests</a> in <i>Using IAM</i>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nhttps://iam.amazonaws.com/\n?Action=UploadServerCertificate\n&ServerCertificateName=ProdServerCert\n&Path=/company/servercerts/\n&CertificateBody=-----BEGIN CERTIFICATE-----\nMIICdzCCAeCgAwIBAgIGANc+Ha2wMA0GCSqGSIb3DQEBBQUAMFMxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMQwwCgYDVQQLEwNBV1MxITAfBgNVBAMT\nGEFXUyBMaW1pdGVkLUFzc3VyYW5jZSBDQTAeFw0wOTAyMDQxNzE5MjdaFw0xMDAy\nMDQxNzE5MjdaMFIxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMRcw\nFQYDVQQLEw5BV1MtRGV2ZWxvcGVyczEVMBMGA1UEAxMMNTdxNDl0c3ZwYjRtMIGf\nMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCpB/vsOwmT/O0td1RqzKjttSBaPjbr\ndqwNe9BrOyB08fw2+Ch5oonZYXfGUrT6mkYXH5fQot9HvASrzAKHO596FdJA6DmL\nywdWe1Oggk7zFSXO1Xv+3vPrJtaYxYo3eRIp7w80PMkiOv6M0XK8ubcTouODeJbf\nsuDqcLnLDxwsvwIDAQABo1cwVTAOBgNVHQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAww\nCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQULGNaBphBumaKbDRK\nCAi0mH8B3mowDQYJKoZIhvcNAQEFBQADgYEAuKxhkXaCLGcqDuweKtO/AEw9ZePH\nwr0XqsaIK2HZboqruebXEGsojK4Ks0WzwgrEynuHJwTn760xe39rSqXWIOGrOBaX\nwFpWHVjTFMKk+tSDG1lssLHyYWWdFFU4AnejRGORJYNaRHgVTKjHphc5jEhHm0BX\nAEaHzTpmEXAMPLE=\n-----END CERTIFICATE-----\n&PrivateKey=-----BEGIN DSA PRIVATE KEY-----\nMIIBugIBTTKBgQD33xToSXPJ6hr37L3+KNi3/7DgywlBcvlFPPSHIw3ORuO/22mT\n8Cy5fT89WwNvZ3BPKWU6OZ38TQv3eWjNc/3U3+oqVNG2poX5nCPOtO1b96HYX2mR\n3FTdH6FRKbQEhpDzZ6tRrjTHjMX6sT3JRWkBd2c4bGu+HUHO1H7QvrCTeQIVTKMs\nTCKCyrLiGhUWuUGNJUMU6y6zToGTHl84Tz7TPwDGDXuy/Dk5s4jTVr+xibROC/gS\nQrs4Dzz3T1ze6lvU8S1KT9UsOB5FUJNTTPCPey+Lo4mmK6b23XdTyCIT8e2fsm2j\njHHC1pIPiTkdLS3j6ZYjF8LY6TENFng+LDY/xwPOl7TJVoD3J/WXC2J9CEYq9o34\nkq6WWn3CgYTuo54nXUgnoCb3xdG8COFrg+oTbIkHTSzs3w5o/GGgKK7TDF3UlJjq\nvHNyJQ6kWBrQRR1Xp5KYQ4c/Dm5kef+62mH53HpcCELguWVcffuVQpmq3EWL9Zp9\njobTJQ2VHjb5IVxiO6HRSd27di3njyrzUuJCyHSDTqwLJmTThpd6OTIUTL3Tc4m2\n62TITdw53KWJEXAMPLE=\n-----END DSA PRIVATE KEY-----\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UploadServerCertificateResponse>\n  <UploadServerCertificateResult>\n    <ServerCertificateMetadata>\n      <ServerCertificateName>ProdServerCert</ServerCertificateName>\n      <Path>/company/servercerts/</Path>\n      <Arn>arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert</Arn>\n      <UploadDate>2010-05-08T01:02:03.004Z</UploadDate>\n      <ServerCertificateId>ASCACKCEVSQ6C2EXAMPLE</ServerCertificateId>\n    </ServerCertificateMetadata>\n  </UploadServerCertificateResult>\n  <ResponseMetadata>\n    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n  </ResponseMetadata>\n</UploadServerCertificateResponse>\n      </queryresponse>\n\t\t</examples>"
    },
    "UploadSigningCertificate":{
      "name":"UploadSigningCertificate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UploadSigningCertificateRequest"},
      "output":{
        "shape":"UploadSigningCertificateResponse",
        "documentation":"<p>Contains the result of a successful invocation of the <a>UploadSigningCertificate</a>\n\t\t\taction.</p>",
        "resultWrapper":"UploadSigningCertificateResult"
      },
      "errors":[
        {
          "shape":"LimitExceededException",
          "error":{
            "code":"LimitExceeded",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
        },
        {
          "shape":"EntityAlreadyExistsException",
          "error":{
            "code":"EntityAlreadyExists",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
        },
        {
          "shape":"MalformedCertificateException",
          "error":{
            "code":"MalformedCertificate",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the certificate was malformed or expired. The error message\n\t\t\tdescribes the specific error.</p>"
        },
        {
          "shape":"InvalidCertificateException",
          "error":{
            "code":"InvalidCertificate",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the certificate is invalid.</p>"
        },
        {
          "shape":"DuplicateCertificateException",
          "error":{
            "code":"DuplicateCertificate",
            "httpStatusCode":409,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because the same certificate is associated to another user under the\n\t\t\taccount.</p>"
        },
        {
          "shape":"NoSuchEntityException",
          "error":{
            "code":"NoSuchEntity",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
        }
      ],
      "documentation":"<p>Uploads an X.509 signing certificate and associates it with the specified user. Some AWS\n\t\t\tservices use X.509 signing certificates to validate requests that are signed with a\n\t\t\tcorresponding private key. When you upload the certificate, its default status is\n\t\t\t\t<code>Active</code>.</p>\n\t\t<p>If the <code>UserName</code> field is not specified, the user name is determined implicitly\n\t\t\tbased on the AWS access key ID used to sign the request. Because this action works for access\n\t\t\tkeys under the AWS account, this API can be used to manage root credentials even if the AWS\n\t\t\taccount has no associated users.</p>\n\t\t<note>Because the body of a X.509 certificate can be large, you should use POST rather than GET\n\t\t\twhen calling <code>UploadSigningCertificate</code>. For information about setting up\n\t\t\tsignatures and authorization through the API, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\" target=\"_blank\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information\n\t\t\tabout using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\" target=\"_blank\">Making\n\t\t\t\tQuery Requests</a> in <i>Using IAM</i>.</note>\n\t\t<examples>\n\t\t\t<queryrequest>\nPOST / HTTP/1.1\nHost: iam.amazonaws.com\nContent-Type: application/x-www-form-urlencoded\n\nAction=UploadSigningCertificate\n&UserName=Bob\n&CertificateBody=-----BEGIN CERTIFICATE-----\n    MIICdzCCAeCgAwIBAgIGANc+Ha2wMA0GCSqGSIb3DQEBBQUAMFMxCzAJBgNVBAYT\n    AlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMQwwCgYDVQQLEwNBV1MxITAfBgNVBAMT\n    GEFXUyBMaW1pdGVkLUFzc3VyYW5jZSBDQTAeFw0wOTAyMDQxNzE5MjdaFw0xMDAy\n    MDQxNzE5MjdaMFIxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMRcw\n    FQYDVQQLEw5BV1MtRGV2ZWxvcGVyczEVMBMGA1UEAxMMNTdxNDl0c3ZwYjRtMIGf\n    MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCpB/vsOwmT/O0td1RqzKjttSBaPjbr\n    dqwNe9BrOyB08fw2+Ch5oonZYXfGUrT6mkYXH5fQot9HvASrzAKHO596FdJA6DmL\n    ywdWe1Oggk7zFSXO1Xv+3vPrJtaYxYo3eRIp7w80PMkiOv6M0XK8ubcTouODeJbf\n    suDqcLnLDxwsvwIDAQABo1cwVTAOBgNVHQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAww\n    CgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQULGNaBphBumaKbDRK\n    CAi0mH8B3mowDQYJKoZIhvcNAQEFBQADgYEAuKxhkXaCLGcqDuweKtO/AEw9ZePH\n    wr0XqsaIK2HZboqruebXEGsojK4Ks0WzwgrEynuHJwTn760xe39rSqXWIOGrOBaX\n    wFpWHVjTFMKk+tSDG1lssLHyYWWdFFU4AnejRGORJYNaRHgVTKjHphc5jEhHm0BX\n    AEaHzTpmEXAMPLE=\n    -----END CERTIFICATE-----\n&Version=2010-05-08\n&AUTHPARAMS\n      </queryrequest>\n\t\t\t<queryresponse>\n<UploadSigningCertificateResponse>\n   <UploadSigningCertificateResult>\n      <Certificate>\n         <UserName>Bob</UserName>\n         <CertificateId>TA7SMP42TDN5Z26OBPJE7EXAMPLE</CertificateId>\n         <CertificateBody>-----BEGIN CERTIFICATE-----\n    MIICdzCCAeCgAwIBAgIGANc+Ha2wMA0GCSqGSIb3DQEBBQUAMFMxCzAJBgNVBAYT\n    AlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMQwwCgYDVQQLEwNBV1MxITAfBgNVBAMT\n    GEFXUyBMaW1pdGVkLUFzc3VyYW5jZSBDQTAeFw0wOTAyMDQxNzE5MjdaFw0xMDAy\n    MDQxNzE5MjdaMFIxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpBbWF6b24uY29tMRcw\n    FQYDVQQLEw5BV1MtRGV2ZWxvcGVyczEVMBMGA1UEAxMMNTdxNDl0c3ZwYjRtMIGf\n    MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCpB/vsOwmT/O0td1RqzKjttSBaPjbr\n    dqwNe9BrOyB08fw2+Ch5oonZYXfGUrT6mkYXH5fQot9HvASrzAKHO596FdJA6DmL\n    ywdWe1Oggk7zFSXO1Xv+3vPrJtaYxYo3eRIp7w80PMkiOv6M0XK8ubcTouODeJbf\n    suDqcLnLDxwsvwIDAQABo1cwVTAOBgNVHQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAww\n    CgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQULGNaBphBumaKbDRK\n    CAi0mH8B3mowDQYJKoZIhvcNAQEFBQADgYEAuKxhkXaCLGcqDuweKtO/AEw9ZePH\n    wr0XqsaIK2HZboqruebXEGsojK4Ks0WzwgrEynuHJwTn760xe39rSqXWIOGrOBaX\n    wFpWHVjTFMKk+tSDG1lssLHyYWWdFFU4AnejRGORJYNaRHgVTKjHphc5jEhHm0BX\n    AEaHzTpmEXAMPLE=\n    -----END CERTIFICATE-----</CertificateBody>\n         <Status>Active</Status>\n      </Certificate>\n   </UploadSigningCertificateResult>\n   <ResponseMetadata>\n      <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId>\n   </ResponseMetadata>\n</UploadSigningCertificateResponse>\n      </queryresponse>\n\t\t</examples>"
    }
  },
  "shapes":{
    "AccessKey":{
      "type":"structure",
      "required":[
        "UserName",
        "AccessKeyId",
        "Status",
        "SecretAccessKey"
      ],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user the key is associated with.</p>"
        },
        "AccessKeyId":{
          "shape":"accessKeyIdType",
          "documentation":"<p>The ID for this access key.</p>"
        },
        "Status":{
          "shape":"statusType",
          "documentation":"<p>The status of the access key. <code>Active</code> means the key is valid for API calls, while\n\t\t\t\t<code>Inactive</code> means it is not.</p>"
        },
        "SecretAccessKey":{
          "shape":"accessKeySecretType",
          "documentation":"<p>The secret key used to sign requests.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the access key was created.</p>"
        }
      },
      "documentation":"<p>The AccessKey data type contains information about an AWS access key.</p>\n\t\t<p> This data type is used as a response element in the actions <a>CreateAccessKey</a> and\n\t\t\t\t<a>ListAccessKeys</a>. </p>"
    },
    "AccessKeyMetadata":{
      "type":"structure",
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user the key is associated with.</p>"
        },
        "AccessKeyId":{
          "shape":"accessKeyIdType",
          "documentation":"<p>The ID for this access key.</p>"
        },
        "Status":{
          "shape":"statusType",
          "documentation":"<p>The status of the access key. <code>Active</code> means the key is valid for API calls, while\n\t\t\t\t<code>Inactive</code> means it is not.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the access key was created.</p>"
        }
      },
      "documentation":"<p>The AccessKey data type contains information about an AWS access key, without its secret\n\t\t\tkey.</p>\n\t\t<p> This data type is used as a response element in the action <a>ListAccessKeys</a>. </p>"
    },
    "AddRoleToInstanceProfileRequest":{
      "type":"structure",
      "required":[
        "InstanceProfileName",
        "RoleName"
      ],
      "members":{
        "InstanceProfileName":{
          "shape":"instanceProfileNameType",
          "documentation":"<p>Name of the instance profile to update.</p>"
        },
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role to add.</p>"
        }
      }
    },
    "AddUserToGroupRequest":{
      "type":"structure",
      "required":[
        "GroupName",
        "UserName"
      ],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group to update.</p>"
        },
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user to add.</p>"
        }
      }
    },
    "BootstrapDatum":{
      "type":"blob",
      "sensitive":true
    },
    "ChangePasswordRequest":{
      "type":"structure",
      "required":[
        "OldPassword",
        "NewPassword"
      ],
      "members":{
        "OldPassword":{"shape":"passwordType"},
        "NewPassword":{"shape":"passwordType"}
      }
    },
    "CreateAccessKeyRequest":{
      "type":"structure",
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>The user name that the new key will belong to.</p>"
        }
      }
    },
    "CreateAccessKeyResponse":{
      "type":"structure",
      "required":["AccessKey"],
      "members":{
        "AccessKey":{
          "shape":"AccessKey",
          "documentation":"<p>Information about the access key.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateAccessKey</a> action.</p>"
    },
    "CreateAccountAliasRequest":{
      "type":"structure",
      "required":["AccountAlias"],
      "members":{
        "AccountAlias":{
          "shape":"accountAliasType",
          "documentation":"<p>Name of the account alias to create.</p>"
        }
      }
    },
    "CreateGroupRequest":{
      "type":"structure",
      "required":["GroupName"],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>The path to the group. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
        },
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group to create. Do not include the path in this value.</p>"
        }
      }
    },
    "CreateGroupResponse":{
      "type":"structure",
      "required":["Group"],
      "members":{
        "Group":{
          "shape":"Group",
          "documentation":"<p>Information about the group.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateGroup</a> action.</p>"
    },
    "CreateInstanceProfileRequest":{
      "type":"structure",
      "required":["InstanceProfileName"],
      "members":{
        "InstanceProfileName":{
          "shape":"instanceProfileNameType",
          "documentation":"<p>Name of the instance profile to create.</p>"
        },
        "Path":{
          "shape":"pathType",
          "documentation":"<p>The path to the instance profile. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
        }
      }
    },
    "CreateInstanceProfileResponse":{
      "type":"structure",
      "required":["InstanceProfile"],
      "members":{
        "InstanceProfile":{
          "shape":"InstanceProfile",
          "documentation":"<p>Information about the instance profile.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateInstanceProfile</a>\n\t\t\taction.</p>"
    },
    "CreateLoginProfileRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "Password"
      ],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user to create a password for.</p>"
        },
        "Password":{
          "shape":"passwordType",
          "documentation":"<p>The new password for the user name.</p>"
        }
      }
    },
    "CreateLoginProfileResponse":{
      "type":"structure",
      "required":["LoginProfile"],
      "members":{
        "LoginProfile":{
          "shape":"LoginProfile",
          "documentation":"<p>The user name and password create date.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateLoginProfile</a> action.</p>"
    },
    "CreateRoleRequest":{
      "type":"structure",
      "required":[
        "RoleName",
        "AssumeRolePolicyDocument"
      ],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>The path to the role. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
        },
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role to create.</p>"
        },
        "AssumeRolePolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy that grants an entity permission to assume the role.</p>"
        }
      }
    },
    "CreateRoleResponse":{
      "type":"structure",
      "required":["Role"],
      "members":{
        "Role":{
          "shape":"Role",
          "documentation":"<p>Information about the role.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateRole</a> action.</p>"
    },
    "CreateSAMLProviderRequest":{
      "type":"structure",
      "required":[
        "SAMLMetadataDocument",
        "Name"
      ],
      "members":{
        "SAMLMetadataDocument":{
          "shape":"SAMLMetadataDocumentType",
          "documentation":"<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document\n\t\t\tincludes the issuer's name, expiration information, and keys that can be used to validate the\n\t\t\tSAML authentication response (assertions) that are received from the IdP. You must generate\n\t\t\tthe metadata document using the identity management software that is used as your\n\t\t\torganization's IdP. </p>\n\t\t\n\t\t<p>For more information, see <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\">Creating Temporary Security Credentials for SAML Federation</a> in the <i>Using Temporary\n\t\t\t\tSecurity Credentials</i> guide. </p>"
        },
        "Name":{
          "shape":"SAMLProviderNameType",
          "documentation":"<p>The name of the provider to create.</p>"
        }
      }
    },
    "CreateSAMLProviderResponse":{
      "type":"structure",
      "members":{
        "SAMLProviderArn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) of the SAML provider.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateSAMLProvider</a> action.</p>"
    },
    "CreateUserRequest":{
      "type":"structure",
      "required":["UserName"],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>The path for the user name. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
        },
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user to create.</p>"
        }
      }
    },
    "CreateUserResponse":{
      "type":"structure",
      "members":{
        "User":{
          "shape":"User",
          "documentation":"<p>Information about the user.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateUser</a> action.</p>"
    },
    "CreateVirtualMFADeviceRequest":{
      "type":"structure",
      "required":["VirtualMFADeviceName"],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>The path for the virtual MFA device. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
        },
        "VirtualMFADeviceName":{
          "shape":"virtualMFADeviceName",
          "documentation":"<p>The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA\n\t\t\tdevice.</p>"
        }
      }
    },
    "CreateVirtualMFADeviceResponse":{
      "type":"structure",
      "required":["VirtualMFADevice"],
      "members":{
        "VirtualMFADevice":{
          "shape":"VirtualMFADevice",
          "documentation":"<p>A newly created virtual MFA device.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>CreateVirtualMFADevice</a>\n\t\t\taction.</p>"
    },
    "DeactivateMFADeviceRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "SerialNumber"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user whose MFA device you want to deactivate.</p>"
        },
        "SerialNumber":{
          "shape":"serialNumberType",
          "documentation":"<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the\n\t\t\tserial number is the device ARN.</p>"
        }
      }
    },
    "DeleteAccessKeyRequest":{
      "type":"structure",
      "required":["AccessKeyId"],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user whose key you want to delete.</p>"
        },
        "AccessKeyId":{
          "shape":"accessKeyIdType",
          "documentation":"<p>The access key ID for the access key ID and secret access key you want to delete.</p>"
        }
      }
    },
    "DeleteAccountAliasRequest":{
      "type":"structure",
      "required":["AccountAlias"],
      "members":{
        "AccountAlias":{
          "shape":"accountAliasType",
          "documentation":"<p>Name of the account alias to delete.</p>"
        }
      }
    },
    "DeleteConflictException":{
      "type":"structure",
      "members":{
        "message":{"shape":"deleteConflictMessage"}
      },
      "error":{
        "code":"DeleteConflict",
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because it attempted to delete a resource that has attached\n\t\t\tsubordinate entities. The error message describes these entities.</p>"
    },
    "DeleteGroupPolicyRequest":{
      "type":"structure",
      "required":[
        "GroupName",
        "PolicyName"
      ],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group the policy is associated with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document to delete.</p>"
        }
      }
    },
    "DeleteGroupRequest":{
      "type":"structure",
      "required":["GroupName"],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group to delete.</p>"
        }
      }
    },
    "DeleteInstanceProfileRequest":{
      "type":"structure",
      "required":["InstanceProfileName"],
      "members":{
        "InstanceProfileName":{
          "shape":"instanceProfileNameType",
          "documentation":"<p>Name of the instance profile to delete.</p>"
        }
      }
    },
    "DeleteLoginProfileRequest":{
      "type":"structure",
      "required":["UserName"],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user whose password you want to delete.</p>"
        }
      }
    },
    "DeleteRolePolicyRequest":{
      "type":"structure",
      "required":[
        "RoleName",
        "PolicyName"
      ],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role the associated with the policy.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document to delete.</p>"
        }
      }
    },
    "DeleteRoleRequest":{
      "type":"structure",
      "required":["RoleName"],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role to delete.</p>"
        }
      }
    },
    "DeleteSAMLProviderRequest":{
      "type":"structure",
      "required":["SAMLProviderArn"],
      "members":{
        "SAMLProviderArn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) of the SAML provider to delete.</p>"
        }
      }
    },
    "DeleteServerCertificateRequest":{
      "type":"structure",
      "required":["ServerCertificateName"],
      "members":{
        "ServerCertificateName":{
          "shape":"serverCertificateNameType",
          "documentation":"<p>The name of the server certificate you want to delete.</p>"
        }
      }
    },
    "DeleteSigningCertificateRequest":{
      "type":"structure",
      "required":["CertificateId"],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user the signing certificate belongs to.</p>"
        },
        "CertificateId":{
          "shape":"certificateIdType",
          "documentation":"<p>ID of the signing certificate to delete.</p>"
        }
      }
    },
    "DeleteUserPolicyRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "PolicyName"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user the policy is associated with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document to delete.</p>"
        }
      }
    },
    "DeleteUserRequest":{
      "type":"structure",
      "required":["UserName"],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user to delete.</p>"
        }
      }
    },
    "DeleteVirtualMFADeviceRequest":{
      "type":"structure",
      "required":["SerialNumber"],
      "members":{
        "SerialNumber":{
          "shape":"serialNumberType",
          "documentation":"<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the\n\t\t\tserial number is the same as the ARN.</p>"
        }
      }
    },
    "DuplicateCertificateException":{
      "type":"structure",
      "members":{
        "message":{"shape":"duplicateCertificateMessage"}
      },
      "error":{
        "code":"DuplicateCertificate",
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the same certificate is associated to another user under the\n\t\t\taccount.</p>"
    },
    "EnableMFADeviceRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "SerialNumber",
        "AuthenticationCode1",
        "AuthenticationCode2"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user for whom you want to enable the MFA device.</p>"
        },
        "SerialNumber":{
          "shape":"serialNumberType",
          "documentation":"<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the\n\t\t\tserial number is the device ARN.</p>"
        },
        "AuthenticationCode1":{
          "shape":"authenticationCodeType",
          "documentation":"<p>An authentication code emitted by the device.</p>"
        },
        "AuthenticationCode2":{
          "shape":"authenticationCodeType",
          "documentation":"<p>A subsequent authentication code emitted by the device.</p>"
        }
      }
    },
    "EntityAlreadyExistsException":{
      "type":"structure",
      "members":{
        "message":{"shape":"entityAlreadyExistsMessage"}
      },
      "error":{
        "code":"EntityAlreadyExists",
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because it attempted to create a resource that already exists.</p>"
    },
    "EntityTemporarilyUnmodifiableException":{
      "type":"structure",
      "members":{
        "message":{"shape":"entityTemporarilyUnmodifiableMessage"}
      },
      "error":{
        "code":"EntityTemporarilyUnmodifiable",
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because it referenced an entity that is temporarily unmodifiable,\n\t\t\tsuch as a user name that was deleted and then recreated. The error indicates that the request\n\t\t\tis likely to succeed if you try again after waiting several minutes. The error message\n\t\t\tdescribes the entity.</p>"
    },
    "GetAccountPasswordPolicyResponse":{
      "type":"structure",
      "required":["PasswordPolicy"],
      "members":{
        "PasswordPolicy":{"shape":"PasswordPolicy"}
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetAccountPasswordPolicy</a>\n\t\t\taction.</p>"
    },
    "GetAccountSummaryResponse":{
      "type":"structure",
      "members":{
        "SummaryMap":{
          "shape":"summaryMapType",
          "documentation":"<p>A set of key value pairs containing account-level information.</p>\n\t\t<p>\n\t\t\t<code>SummaryMap</code> contains the following keys: <ul>\n\t\t\t\t<li><p><code>AccessKeysPerUserQuota</code> - Maximum number of access keys that can be\n\t\t\t\t\t\tcreated per user</p></li>\n\t\t\t\t<li><p><code>AccountMFAEnabled</code> - 1 if the root account has an MFA device assigned to\n\t\t\t\t\t\tit, 0 otherwise</p></li>\n\t\t\t\t<li><p><code>AssumeRolePolicySizeQuota</code> - Maximum allowed size for assume role policy\n\t\t\t\t\t\tdocuments (in kilobytes) </p></li>\n\t\t\t\t<li><p><code>GroupPolicySizeQuota</code> - Maximum allowed size for Group policy documents\n\t\t\t\t\t\t(in kilobytes)</p></li>\n\t\t\t\t<li><p><code>Groups</code> - Number of Groups for the AWS account</p></li>\n\t\t\t\t<li><p><code>GroupsPerUserQuota</code> - Maximum number of groups a user can belong\n\t\t\t\t\tto</p></li>\n\t\t\t\t<li><p><code>GroupsQuota</code> - Maximum groups allowed for the AWS account</p></li>\n\t\t\t\t<li><p><code>InstanceProfiles</code> - Number of instance profiles for the AWS\n\t\t\t\t\taccount</p></li>\n\t\t\t\t<li><p><code>InstanceProfilesQuota</code> - Maximum instance profiles allowed for the AWS\n\t\t\t\t\t\taccount</p></li>\n\t\t\t\t<li><p><code>MFADevices</code> - Number of MFA devices, either assigned or\n\t\t\t\t\tunassigned</p></li>\n\t\t\t\t<li><p><code>MFADevicesInUse</code> - Number of MFA devices that have been assigned to an\n\t\t\t\t\t\tIAM user or to the root account</p></li>\n\t\t\t\t<li><p><code>RolePolicySizeQuota</code> - Maximum allowed size for role policy documents (in\n\t\t\t\t\t\tkilobytes) </p></li>\n\t\t\t\t<li><p><code>Roles</code> - Number of roles for the AWS account</p></li>\n\t\t\t\t<li><p><code>RolesQuota</code> - Maximum roles allowed for the AWS account</p></li>\n\t\t\t\t<li><p><code>ServerCertificates</code> - Number of server certificates for the AWS\n\t\t\t\t\t\taccount</p></li>\n\t\t\t\t<li><p><code>ServerCertificatesQuota</code> - Maximum server certificates allowed for the\n\t\t\t\t\t\tAWS account</p></li>\n\t\t\t\t<li><p><code>SigningCertificatesPerUserQuota</code> - Maximum number of X509 certificates\n\t\t\t\t\t\tallowed for a user</p></li>\n\t\t\t\t<li><p><code>UserPolicySizeQuota</code> - Maximum allowed size for user policy documents (in\n\t\t\t\t\t\tkilobytes) </p></li>\n\t\t\t\t<li><p><code>Users</code> - Number of users for the AWS account</p></li>\n\t\t\t\t<li><p><code>UsersQuota</code> - Maximum users allowed for the AWS account</p></li>\n\t\t\t</ul>\n\t\t</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetAccountSummary</a> action.</p>"
    },
    "GetGroupPolicyRequest":{
      "type":"structure",
      "required":[
        "GroupName",
        "PolicyName"
      ],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group the policy is associated with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document to get.</p>"
        }
      }
    },
    "GetGroupPolicyResponse":{
      "type":"structure",
      "required":[
        "GroupName",
        "PolicyName",
        "PolicyDocument"
      ],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>The group the policy is associated with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>The name of the policy.</p>"
        },
        "PolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy document.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetGroupPolicy</a> action.</p>"
    },
    "GetGroupRequest":{
      "type":"structure",
      "required":["GroupName"],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of user names you want\n\t\t\tin the response. If there are additional user names beyond the maximum you specify, the\n\t\t\t\t<code>IsTruncated</code> response element is <code>true</code>. This parameter is optional.\n\t\t\tIf you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "GetGroupResponse":{
      "type":"structure",
      "required":[
        "Group",
        "Users"
      ],
      "members":{
        "Group":{
          "shape":"Group",
          "documentation":"<p>Information about the group.</p>"
        },
        "Users":{
          "shape":"userListType",
          "documentation":"<p>A list of users in the group.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more user names to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more user names in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If IsTruncated is <code>true</code>, then this element is present and contains the value to\n\t\t\tuse for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetGroup</a> action.</p>"
    },
    "GetInstanceProfileRequest":{
      "type":"structure",
      "required":["InstanceProfileName"],
      "members":{
        "InstanceProfileName":{
          "shape":"instanceProfileNameType",
          "documentation":"<p>Name of the instance profile to get information about.</p>"
        }
      }
    },
    "GetInstanceProfileResponse":{
      "type":"structure",
      "required":["InstanceProfile"],
      "members":{
        "InstanceProfile":{
          "shape":"InstanceProfile",
          "documentation":"<p>Information about the instance profile.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetInstanceProfile</a> action.</p>"
    },
    "GetLoginProfileRequest":{
      "type":"structure",
      "required":["UserName"],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user whose login profile you want to retrieve.</p>"
        }
      }
    },
    "GetLoginProfileResponse":{
      "type":"structure",
      "required":["LoginProfile"],
      "members":{
        "LoginProfile":{
          "shape":"LoginProfile",
          "documentation":"<p>User name and password create date for the user.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetLoginProfile</a> action.</p>"
    },
    "GetRolePolicyRequest":{
      "type":"structure",
      "required":[
        "RoleName",
        "PolicyName"
      ],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role associated with the policy.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document to get.</p>"
        }
      }
    },
    "GetRolePolicyResponse":{
      "type":"structure",
      "required":[
        "RoleName",
        "PolicyName",
        "PolicyDocument"
      ],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>The role the policy is associated with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>The name of the policy.</p>"
        },
        "PolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy document.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetRolePolicy</a> action.</p>"
    },
    "GetRoleRequest":{
      "type":"structure",
      "required":["RoleName"],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role to get information about.</p>"
        }
      }
    },
    "GetRoleResponse":{
      "type":"structure",
      "required":["Role"],
      "members":{
        "Role":{
          "shape":"Role",
          "documentation":"<p>Information about the role.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetRole</a> action.</p>"
    },
    "GetSAMLProviderRequest":{
      "type":"structure",
      "required":["SAMLProviderArn"],
      "members":{
        "SAMLProviderArn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) of the SAML provider to get information about.</p>"
        }
      }
    },
    "GetSAMLProviderResponse":{
      "type":"structure",
      "members":{
        "SAMLMetadataDocument":{
          "shape":"SAMLMetadataDocumentType",
          "documentation":"<p>The XML metadata document that includes information about an identity provider.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date and time when the SAML provider was created.</p>"
        },
        "ValidUntil":{
          "shape":"dateType",
          "documentation":"<p>The expiration date and time for the SAML provider.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetSAMLProvider</a> action.</p>"
    },
    "GetServerCertificateRequest":{
      "type":"structure",
      "required":["ServerCertificateName"],
      "members":{
        "ServerCertificateName":{
          "shape":"serverCertificateNameType",
          "documentation":"<p>The name of the server certificate you want to retrieve information about.</p>"
        }
      }
    },
    "GetServerCertificateResponse":{
      "type":"structure",
      "required":["ServerCertificate"],
      "members":{
        "ServerCertificate":{
          "shape":"ServerCertificate",
          "documentation":"<p>Information about the server certificate.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetServerCertificate</a> action.</p>"
    },
    "GetUserPolicyRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "PolicyName"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user who the policy is associated with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document to get.</p>"
        }
      }
    },
    "GetUserPolicyResponse":{
      "type":"structure",
      "required":[
        "UserName",
        "PolicyName",
        "PolicyDocument"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>The user the policy is associated with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>The name of the policy.</p>"
        },
        "PolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy document.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetUserPolicy</a> action.</p>"
    },
    "GetUserRequest":{
      "type":"structure",
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user to get information about.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to the user making the\n\t\t\trequest.</p>"
        }
      }
    },
    "GetUserResponse":{
      "type":"structure",
      "required":["User"],
      "members":{
        "User":{
          "shape":"User",
          "documentation":"<p>Information about the user.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>GetUser</a> action.</p>"
    },
    "Group":{
      "type":"structure",
      "required":[
        "Path",
        "GroupName",
        "GroupId",
        "Arn",
        "CreateDate"
      ],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>Path to the group. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>The name that identifies the group.</p>"
        },
        "GroupId":{
          "shape":"idType",
          "documentation":"<p>The stable and unique string identifying the group. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "Arn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how\n\t\t\tto use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the group was created.</p>"
        }
      },
      "documentation":"<p>The Group data type contains information about a group.</p>\n\t\t<p> This data type is used as a response element in the following actions:</p>\n\t\t<ul>\n\t\t\t<li><a>CreateGroup</a></li>\n\t\t\t<li><a>GetGroup</a></li>\n\t\t\t<li><a>ListGroups</a></li>\n\t\t</ul>"
    },
    "InstanceProfile":{
      "type":"structure",
      "required":[
        "Path",
        "InstanceProfileName",
        "InstanceProfileId",
        "Arn",
        "CreateDate",
        "Roles"
      ],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>Path to the instance profile. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "InstanceProfileName":{
          "shape":"instanceProfileNameType",
          "documentation":"<p>The name identifying the instance profile.</p>"
        },
        "InstanceProfileId":{
          "shape":"idType",
          "documentation":"<p>The stable and unique string identifying the instance profile. For more information about\n\t\t\tIDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "Arn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) specifying the instance profile. For more information about\n\t\t\tARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the instance profile was created.</p>"
        },
        "Roles":{
          "shape":"roleListType",
          "documentation":"<p>The role associated with the instance profile.</p>"
        }
      },
      "documentation":"<p>The InstanceProfile data type contains information about an instance profile.</p>\n\t\t<p> This data type is used as a response element in the following actions:</p>\n\t\t<ul>\n\t\t\t<li><p><a>CreateInstanceProfile</a></p></li>\n\t\t\t<li><p><a>GetInstanceProfile</a></p></li>\n\t\t\t<li><p><a>ListInstanceProfiles</a></p></li>\n\t\t\t<li><p><a>ListInstanceProfilesForRole</a></p></li>\n\t\t</ul>"
    },
    "InvalidAuthenticationCodeException":{
      "type":"structure",
      "members":{
        "message":{"shape":"invalidAuthenticationCodeMessage"}
      },
      "error":{
        "code":"InvalidAuthenticationCode",
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the authentication code was not recognized. The error\n\t\t\tmessage describes the specific error.</p>"
    },
    "InvalidCertificateException":{
      "type":"structure",
      "members":{
        "message":{"shape":"invalidCertificateMessage"}
      },
      "error":{
        "code":"InvalidCertificate",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the certificate is invalid.</p>"
    },
    "InvalidInputException":{
      "type":"structure",
      "members":{
        "message":{"shape":"invalidInputMessage"}
      },
      "error":{
        "code":"InvalidInput",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "InvalidUserTypeException":{
      "type":"structure",
      "members":{
        "message":{"shape":"invalidUserTypeMessage"}
      },
      "error":{
        "code":"InvalidUserType",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the type of user for the transaction was incorrect.</p>"
    },
    "KeyPairMismatchException":{
      "type":"structure",
      "members":{
        "message":{"shape":"keyPairMismatchMessage"}
      },
      "error":{
        "code":"KeyPairMismatch",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the public key certificate and the private key do not\n\t\t\tmatch.</p>"
    },
    "LimitExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"limitExceededMessage"}
      },
      "error":{
        "code":"LimitExceeded",
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because it attempted to create resources beyond the current AWS\n\t\t\taccount limits. The error message describes the limit exceeded.</p>"
    },
    "ListAccessKeysRequest":{
      "type":"structure",
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this parameter only when paginating results, and only in a subsequent request after\n\t\t\tyou've received a response where the results are truncated. Set it to the value of the\n\t\t\t\t<code>Marker</code> element in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this parameter only when paginating results to indicate the maximum number of keys you\n\t\t\twant in the response. If there are additional keys beyond the maximum you specify, the\n\t\t\t\t<code>IsTruncated</code> response element is <code>true</code>. This parameter is optional.\n\t\t\tIf you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListAccessKeysResponse":{
      "type":"structure",
      "required":["AccessKeyMetadata"],
      "members":{
        "AccessKeyMetadata":{
          "shape":"accessKeyMetadataListType",
          "documentation":"<p>A list of access key metadata.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more keys to list. If your results were truncated,\n\t\t\tyou can make a subsequent pagination request using the <code>Marker</code> request parameter\n\t\t\tto retrieve more keys in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListAccessKeys</a> action.</p>"
    },
    "ListAccountAliasesRequest":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of account aliases you\n\t\t\twant in the response. If there are additional account aliases beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListAccountAliasesResponse":{
      "type":"structure",
      "required":["AccountAliases"],
      "members":{
        "AccountAliases":{
          "shape":"accountAliasListType",
          "documentation":"<p>A list of aliases associated with the account.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more account aliases to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more account aliases in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListAccountAliases</a> action.</p>"
    },
    "ListGroupPoliciesRequest":{
      "type":"structure",
      "required":["GroupName"],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>The name of the group to list policies for.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of policy names you want\n\t\t\tin the response. If there are additional policy names beyond the maximum you specify, the\n\t\t\t\t<code>IsTruncated</code> response element is <code>true</code>. This parameter is optional.\n\t\t\tIf you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListGroupPoliciesResponse":{
      "type":"structure",
      "required":["PolicyNames"],
      "members":{
        "PolicyNames":{
          "shape":"policyNameListType",
          "documentation":"<p>A list of policy names.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more policy names to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more policy names in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListGroupPolicies</a> action.</p>"
    },
    "ListGroupsForUserRequest":{
      "type":"structure",
      "required":["UserName"],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>The name of the user to list groups for.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of groups you want in\n\t\t\tthe response. If there are additional groups beyond the maximum you specify, the\n\t\t\t\t<code>IsTruncated</code> response element is <code>true</code>. This parameter is optional.\n\t\t\tIf you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListGroupsForUserResponse":{
      "type":"structure",
      "required":["Groups"],
      "members":{
        "Groups":{
          "shape":"groupListType",
          "documentation":"<p>A list of groups.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more groups to list. If your results were truncated,\n\t\t\tyou can make a subsequent pagination request using the <code>Marker</code> request parameter\n\t\t\tto retrieve more groups in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListGroupsForUser</a> action.</p>"
    },
    "ListGroupsRequest":{
      "type":"structure",
      "members":{
        "PathPrefix":{
          "shape":"pathPrefixType",
          "documentation":"<p>The path prefix for filtering the results. For example:\n\t\t\t\t<code>/division_abc/subdivision_xyz/</code>, which would get all groups whose path starts\n\t\t\twith <code>/division_abc/subdivision_xyz/</code>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all\n\t\t\tgroups.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of groups you want in\n\t\t\tthe response. If there are additional groups beyond the maximum you specify, the\n\t\t\t\t<code>IsTruncated</code> response element is <code>true</code>. This parameter is optional.\n\t\t\tIf you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListGroupsResponse":{
      "type":"structure",
      "required":["Groups"],
      "members":{
        "Groups":{
          "shape":"groupListType",
          "documentation":"<p>A list of groups.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more groups to list. If your results were truncated,\n\t\t\tyou can make a subsequent pagination request using the <code>Marker</code> request parameter\n\t\t\tto retrieve more groups in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListGroups</a> action.</p>"
    },
    "ListInstanceProfilesForRoleRequest":{
      "type":"structure",
      "required":["RoleName"],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>The name of the role to list instance profiles for.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this parameter only when paginating results, and only in a subsequent request after\n\t\t\tyou've received a response where the results are truncated. Set it to the value of the\n\t\t\t\t<code>Marker</code> element in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this parameter only when paginating results to indicate the maximum number of user names\n\t\t\tyou want in the response. If there are additional user names beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListInstanceProfilesForRoleResponse":{
      "type":"structure",
      "required":["InstanceProfiles"],
      "members":{
        "InstanceProfiles":{
          "shape":"instanceProfileListType",
          "documentation":"<p>A list of instance profiles.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more instance profiles to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more instance profiles in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListInstanceProfilesForRole</a>\n\t\t\taction.</p>"
    },
    "ListInstanceProfilesRequest":{
      "type":"structure",
      "members":{
        "PathPrefix":{
          "shape":"pathPrefixType",
          "documentation":"<p>The path prefix for filtering the results. For example:\n\t\t\t\t<code>/application_abc/component_xyz/</code>, which would get all instance profiles whose\n\t\t\tpath starts with <code>/application_abc/component_xyz/</code>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all\n\t\t\tinstance profiles.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this parameter only when paginating results, and only in a subsequent request after\n\t\t\tyou've received a response where the results are truncated. Set it to the value of the\n\t\t\t\t<code>Marker</code> element in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this parameter only when paginating results to indicate the maximum number of user names\n\t\t\tyou want in the response. If there are additional user names beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListInstanceProfilesResponse":{
      "type":"structure",
      "required":["InstanceProfiles"],
      "members":{
        "InstanceProfiles":{
          "shape":"instanceProfileListType",
          "documentation":"<p>A list of instance profiles.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more instance profiles to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more instance profiles in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListInstanceProfiles</a> action.</p>"
    },
    "ListMFADevicesRequest":{
      "type":"structure",
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user whose MFA devices you want to list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of MFA devices you want\n\t\t\tin the response. If there are additional MFA devices beyond the maximum you specify, the\n\t\t\t\t<code>IsTruncated</code> response element is <code>true</code>. This parameter is optional.\n\t\t\tIf you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListMFADevicesResponse":{
      "type":"structure",
      "required":["MFADevices"],
      "members":{
        "MFADevices":{
          "shape":"mfaDeviceListType",
          "documentation":"<p>A list of MFA devices.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more MFA devices to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more MFA devices in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListMFADevices</a> action.</p>"
    },
    "ListRolePoliciesRequest":{
      "type":"structure",
      "required":["RoleName"],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>The name of the role to list policies for.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this parameter only when paginating results, and only in a subsequent request after\n\t\t\tyou've received a response where the results are truncated. Set it to the value of the\n\t\t\t\t<code>Marker</code> element in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this parameter only when paginating results to indicate the maximum number of user names\n\t\t\tyou want in the response. If there are additional user names beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListRolePoliciesResponse":{
      "type":"structure",
      "required":["PolicyNames"],
      "members":{
        "PolicyNames":{
          "shape":"policyNameListType",
          "documentation":"<p>A list of policy names.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more policy names to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more policy names in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListRolePolicies</a> action.</p>"
    },
    "ListRolesRequest":{
      "type":"structure",
      "members":{
        "PathPrefix":{
          "shape":"pathPrefixType",
          "documentation":"<p>The path prefix for filtering the results. For example:\n\t\t\t\t<code>/application_abc/component_xyz/</code>, which would get all roles whose path starts\n\t\t\twith <code>/application_abc/component_xyz/</code>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all\n\t\t\troles.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this parameter only when paginating results, and only in a subsequent request after\n\t\t\tyou've received a response where the results are truncated. Set it to the value of the\n\t\t\t\t<code>Marker</code> element in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this parameter only when paginating results to indicate the maximum number of user names\n\t\t\tyou want in the response. If there are additional user names beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListRolesResponse":{
      "type":"structure",
      "required":["Roles"],
      "members":{
        "Roles":{
          "shape":"roleListType",
          "documentation":"<p>A list of roles.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more roles to list. If your results were truncated,\n\t\t\tyou can make a subsequent pagination request using the <code>Marker</code> request parameter\n\t\t\tto retrieve more roles in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListRoles</a> action.</p>"
    },
    "ListSAMLProvidersRequest":{
      "type":"structure",
      "members":{
      }
    },
    "ListSAMLProvidersResponse":{
      "type":"structure",
      "members":{
        "SAMLProviderList":{
          "shape":"SAMLProviderListType",
          "documentation":"<p>The list of SAML providers for this account.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListSAMLProviders</a> action.</p>"
    },
    "ListServerCertificatesRequest":{
      "type":"structure",
      "members":{
        "PathPrefix":{
          "shape":"pathPrefixType",
          "documentation":"<p>The path prefix for filtering the results. For example: <code>/company/servercerts</code>\n\t\t\twould get all server certificates for which the path starts with\n\t\t\t\t<code>/company/servercerts</code>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all\n\t\t\tserver certificates.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of server certificates\n\t\t\tyou want in the response. If there are additional server certificates beyond the maximum you\n\t\t\tspecify, the <code>IsTruncated</code> response element will be set to <code>true</code>. This\n\t\t\tparameter is optional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListServerCertificatesResponse":{
      "type":"structure",
      "required":["ServerCertificateMetadataList"],
      "members":{
        "ServerCertificateMetadataList":{
          "shape":"serverCertificateMetadataListType",
          "documentation":"<p>A list of server certificates.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more server certificates to list. If your results\n\t\t\twere truncated, you can make a subsequent pagination request using the <code>Marker</code>\n\t\t\trequest parameter to retrieve more server certificates in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListServerCertificates</a>\n\t\t\taction.</p>"
    },
    "ListSigningCertificatesRequest":{
      "type":"structure",
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>The name of the user.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of certificate IDs you\n\t\t\twant in the response. If there are additional certificate IDs beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListSigningCertificatesResponse":{
      "type":"structure",
      "required":["Certificates"],
      "members":{
        "Certificates":{
          "shape":"certificateListType",
          "documentation":"<p>A list of the user's signing certificate information.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more certificate IDs to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more certificates in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListSigningCertificates</a>\n\t\t\taction.</p>"
    },
    "ListUserPoliciesRequest":{
      "type":"structure",
      "required":["UserName"],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>The name of the user to list policies for.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this only when paginating results, and only in a subsequent request after you've received\n\t\t\ta response where the results are truncated. Set it to the value of the <code>Marker</code>\n\t\t\telement in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this only when paginating results to indicate the maximum number of policy names you want\n\t\t\tin the response. If there are additional policy names beyond the maximum you specify, the\n\t\t\t\t<code>IsTruncated</code> response element is <code>true</code>. This parameter is optional.\n\t\t\tIf you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListUserPoliciesResponse":{
      "type":"structure",
      "required":["PolicyNames"],
      "members":{
        "PolicyNames":{
          "shape":"policyNameListType",
          "documentation":"<p>A list of policy names.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more policy names to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more policy names in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListUserPolicies</a> action.</p>"
    },
    "ListUsersRequest":{
      "type":"structure",
      "members":{
        "PathPrefix":{
          "shape":"pathPrefixType",
          "documentation":"<p>The path prefix for filtering the results. For example:\n\t\t\t\t<code>/division_abc/subdivision_xyz/</code>, which would get all user names whose path\n\t\t\tstarts with <code>/division_abc/subdivision_xyz/</code>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all\n\t\t\tuser names.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this parameter only when paginating results, and only in a subsequent request after\n\t\t\tyou've received a response where the results are truncated. Set it to the value of the\n\t\t\t\t<code>Marker</code> element in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this parameter only when paginating results to indicate the maximum number of user names\n\t\t\tyou want in the response. If there are additional user names beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListUsersResponse":{
      "type":"structure",
      "required":["Users"],
      "members":{
        "Users":{
          "shape":"userListType",
          "documentation":"<p>A list of users.</p>"
        },
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more user names to list. If your results were\n\t\t\ttruncated, you can make a subsequent pagination request using the <code>Marker</code> request\n\t\t\tparameter to retrieve more users in the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListUsers</a> action.</p>"
    },
    "ListVirtualMFADevicesRequest":{
      "type":"structure",
      "members":{
        "AssignmentStatus":{
          "shape":"assignmentStatusType",
          "documentation":"<p>The status (unassigned or assigned) of the devices to list. If you do not specify an\n\t\t\t\t<code>AssignmentStatus</code>, the action defaults to <code>Any</code> which lists both\n\t\t\tassigned and unassigned virtual MFA devices. </p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>Use this parameter only when paginating results, and only in a subsequent request after\n\t\t\tyou've received a response where the results are truncated. Set it to the value of the\n\t\t\t\t<code>Marker</code> element in the response you just received.</p>"
        },
        "MaxItems":{
          "shape":"maxItemsType",
          "documentation":"<p>Use this parameter only when paginating results to indicate the maximum number of user names\n\t\t\tyou want in the response. If there are additional user names beyond the maximum you specify,\n\t\t\tthe <code>IsTruncated</code> response element is <code>true</code>. This parameter is\n\t\t\toptional. If you do not include it, it defaults to 100.</p>"
        }
      }
    },
    "ListVirtualMFADevicesResponse":{
      "type":"structure",
      "required":["VirtualMFADevices"],
      "members":{
        "VirtualMFADevices":{"shape":"virtualMFADeviceListType"},
        "IsTruncated":{
          "shape":"booleanType",
          "documentation":"<p>A flag that indicates whether there are more items to list. If your results were truncated,\n\t\t\tyou can make a subsequent pagination request using the <code>Marker</code> request parameter\n\t\t\tto retrieve more items the list.</p>"
        },
        "Marker":{
          "shape":"markerType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the\n\t\t\tvalue to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>ListVirtualMFADevices</a>\n\t\t\taction.</p>"
    },
    "LoginProfile":{
      "type":"structure",
      "required":[
        "UserName",
        "CreateDate"
      ],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>The name of the user, which can be used for signing into the AWS Management Console.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the password for the user was created.</p>"
        }
      },
      "documentation":"<p>The LoginProfile data type contains the user name and password create date for a user.</p>\n\t\t<p> This data type is used as a response element in the actions <a>CreateLoginProfile</a> and\n\t\t\t\t<a>GetLoginProfile</a>. </p>"
    },
    "MFADevice":{
      "type":"structure",
      "required":[
        "UserName",
        "SerialNumber",
        "EnableDate"
      ],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>The user with whom the MFA device is associated.</p>"
        },
        "SerialNumber":{
          "shape":"serialNumberType",
          "documentation":"<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the\n\t\t\tserial number is the device ARN.</p>"
        },
        "EnableDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the MFA device was enabled for the user.</p>"
        }
      },
      "documentation":"<p>The <code>MFADevice</code> data type contains information about an MFA device.</p>\n\t\t<p> This data type is used as a response element in the action <a>ListMFADevices</a>. </p>"
    },
    "MalformedCertificateException":{
      "type":"structure",
      "members":{
        "message":{"shape":"malformedCertificateMessage"}
      },
      "error":{
        "code":"MalformedCertificate",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the certificate was malformed or expired. The error message\n\t\t\tdescribes the specific error.</p>"
    },
    "MalformedPolicyDocumentException":{
      "type":"structure",
      "members":{
        "message":{"shape":"malformedPolicyDocumentMessage"}
      },
      "error":{
        "code":"MalformedPolicyDocument",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the policy document was malformed. The error message\n\t\t\tdescribes the specific error.</p>"
    },
    "NoSuchEntityException":{
      "type":"structure",
      "members":{
        "message":{"shape":"noSuchEntityMessage"}
      },
      "error":{
        "code":"NoSuchEntity",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because it referenced an entity that does not exist. The error\n\t\t\tmessage describes the entity.</p>"
    },
    "PasswordPolicy":{
      "type":"structure",
      "members":{
        "MinimumPasswordLength":{
          "shape":"minimumPasswordLengthType",
          "documentation":"<p>Minimum length to require for IAM user passwords.</p>"
        },
        "RequireSymbols":{
          "shape":"booleanType",
          "documentation":"<p>Specifies whether to require symbols for IAM user passwords.</p>"
        },
        "RequireNumbers":{
          "shape":"booleanType",
          "documentation":"<p>Specifies whether to require numbers for IAM user passwords.</p>"
        },
        "RequireUppercaseCharacters":{
          "shape":"booleanType",
          "documentation":"<p>Specifies whether to require uppercase characters for IAM user passwords.</p>"
        },
        "RequireLowercaseCharacters":{
          "shape":"booleanType",
          "documentation":"<p>Specifies whether to require lowercase characters for IAM user passwords.</p>"
        },
        "AllowUsersToChangePassword":{
          "shape":"booleanType",
          "documentation":"<p>Specifies whether to allow IAM users to change their own password.</p>"
        },
        "ExpirePasswords":{"shape":"booleanType"},
        "MaxPasswordAge":{"shape":"maxPasswordAgeType"}
      },
      "documentation":"<p>The PasswordPolicy data type contains information about the account password policy.</p>\n\t\t<p> This data type is used as a response element in the action <a>GetAccountPasswordPolicy</a>.\n\t\t</p>"
    },
    "PasswordPolicyViolationException":{
      "type":"structure",
      "members":{
        "message":{"shape":"passwordPolicyViolationMessage"}
      },
      "error":{
        "code":"PasswordPolicyViolation",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request was rejected because the provided password did not meet the requirements imposed\n\t\t\tby the account password policy.</p>"
    },
    "PutGroupPolicyRequest":{
      "type":"structure",
      "required":[
        "GroupName",
        "PolicyName",
        "PolicyDocument"
      ],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group to associate the policy with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document.</p>"
        },
        "PolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy document.</p>"
        }
      }
    },
    "PutRolePolicyRequest":{
      "type":"structure",
      "required":[
        "RoleName",
        "PolicyName",
        "PolicyDocument"
      ],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role to associate the policy with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document.</p>"
        },
        "PolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy document.</p>"
        }
      }
    },
    "PutUserPolicyRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "PolicyName",
        "PolicyDocument"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user to associate the policy with.</p>"
        },
        "PolicyName":{
          "shape":"policyNameType",
          "documentation":"<p>Name of the policy document.</p>"
        },
        "PolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy document.</p>"
        }
      }
    },
    "RemoveRoleFromInstanceProfileRequest":{
      "type":"structure",
      "required":[
        "InstanceProfileName",
        "RoleName"
      ],
      "members":{
        "InstanceProfileName":{
          "shape":"instanceProfileNameType",
          "documentation":"<p>Name of the instance profile to update.</p>"
        },
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role to remove.</p>"
        }
      }
    },
    "RemoveUserFromGroupRequest":{
      "type":"structure",
      "required":[
        "GroupName",
        "UserName"
      ],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group to update.</p>"
        },
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user to remove.</p>"
        }
      }
    },
    "ResyncMFADeviceRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "SerialNumber",
        "AuthenticationCode1",
        "AuthenticationCode2"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user whose MFA device you want to resynchronize.</p>"
        },
        "SerialNumber":{
          "shape":"serialNumberType",
          "documentation":"<p>Serial number that uniquely identifies the MFA device.</p>"
        },
        "AuthenticationCode1":{
          "shape":"authenticationCodeType",
          "documentation":"<p>An authentication code emitted by the device.</p>"
        },
        "AuthenticationCode2":{
          "shape":"authenticationCodeType",
          "documentation":"<p>A subsequent authentication code emitted by the device.</p>"
        }
      }
    },
    "Role":{
      "type":"structure",
      "required":[
        "Path",
        "RoleName",
        "RoleId",
        "Arn",
        "CreateDate"
      ],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>Path to the role. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>The name identifying the role.</p>"
        },
        "RoleId":{
          "shape":"idType",
          "documentation":"<p>The stable and unique string identifying the role. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "Arn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how\n\t\t\tto use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the role was created.</p>"
        },
        "AssumeRolePolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy that grants an entity permission to assume the role.</p>\n\t\t<p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC\n\t\t\t3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>"
        }
      },
      "documentation":"<p>The Role data type contains information about a role.</p>\n\t\t<p> This data type is used as a response element in the following actions:</p>\n\t\t<ul>\n\t\t\t<li><p><a>CreateRole</a></p></li>\n\t\t\t<li><p><a>GetRole</a></p></li>\n\t\t\t<li><p><a>ListRoles</a></p></li>\n\t\t</ul>"
    },
    "SAMLMetadataDocumentType":{
      "type":"string",
      "min":1000,
      "max":10000000
    },
    "SAMLProviderListEntry":{
      "type":"structure",
      "members":{
        "Arn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) of the SAML provider.</p>"
        },
        "ValidUntil":{
          "shape":"dateType",
          "documentation":"<p>The expiration date and time for the SAML provider.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date and time when the SAML provider was created.</p>"
        }
      },
      "documentation":"<p>The list of SAML providers for this account.</p>"
    },
    "SAMLProviderListType":{
      "type":"list",
      "member":{"shape":"SAMLProviderListEntry"}
    },
    "SAMLProviderNameType":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w._-]*"
    },
    "ServerCertificate":{
      "type":"structure",
      "required":[
        "ServerCertificateMetadata",
        "CertificateBody"
      ],
      "members":{
        "ServerCertificateMetadata":{
          "shape":"ServerCertificateMetadata",
          "documentation":"<p>The meta information of the server certificate, such as its name, path, ID, and ARN.</p>"
        },
        "CertificateBody":{
          "shape":"certificateBodyType",
          "documentation":"<p>The contents of the public key certificate.</p>"
        },
        "CertificateChain":{
          "shape":"certificateChainType",
          "documentation":"<p>The contents of the public key certificate chain.</p>"
        }
      },
      "documentation":"<p>The ServerCertificate data type contains information about a server certificate.</p>\n\t\t<p>This data type is used as a response element in the action <a>GetServerCertificate</a>.</p>"
    },
    "ServerCertificateMetadata":{
      "type":"structure",
      "required":[
        "Path",
        "ServerCertificateName",
        "ServerCertificateId",
        "Arn"
      ],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>Path to the server certificate. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "ServerCertificateName":{
          "shape":"serverCertificateNameType",
          "documentation":"<p>The name that identifies the server certificate.</p>"
        },
        "ServerCertificateId":{
          "shape":"idType",
          "documentation":"<p>The stable and unique string identifying the server certificate. For more information about\n\t\t\tIDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "Arn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) specifying the server certificate. For more information about\n\t\t\tARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "UploadDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the server certificate was uploaded.</p>"
        }
      },
      "documentation":"<p>ServerCertificateMetadata contains information about a server certificate without its\n\t\t\tcertificate body, certificate chain, and private key.</p>\n\t\t<p>This data type is used as a response element in the action <a>UploadServerCertificate</a> and\n\t\t\t\t<a>ListServerCertificates</a>.</p>"
    },
    "SigningCertificate":{
      "type":"structure",
      "required":[
        "UserName",
        "CertificateId",
        "CertificateBody",
        "Status"
      ],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user the signing certificate is associated with.</p>"
        },
        "CertificateId":{
          "shape":"certificateIdType",
          "documentation":"<p>The ID for the signing certificate.</p>"
        },
        "CertificateBody":{
          "shape":"certificateBodyType",
          "documentation":"<p>The contents of the signing certificate.</p>"
        },
        "Status":{
          "shape":"statusType",
          "documentation":"<p>The status of the signing certificate. <code>Active</code> means the key is valid for API\n\t\t\tcalls, while <code>Inactive</code> means it is not.</p>"
        },
        "UploadDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the signing certificate was uploaded.</p>"
        }
      },
      "documentation":"<p>The SigningCertificate data type contains information about an X.509 signing certificate.</p>\n\t\t<p> This data type is used as a response element in the actions <a>UploadSigningCertificate</a>\n\t\t\tand <a>ListSigningCertificates</a>. </p>"
    },
    "UpdateAccessKeyRequest":{
      "type":"structure",
      "required":[
        "AccessKeyId",
        "Status"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user whose key you want to update.</p>"
        },
        "AccessKeyId":{
          "shape":"accessKeyIdType",
          "documentation":"<p>The access key ID of the secret access key you want to update.</p>"
        },
        "Status":{
          "shape":"statusType",
          "documentation":"<p>The status you want to assign to the secret access key. <code>Active</code> means the key can\n\t\t\tbe used for API calls to AWS, while <code>Inactive</code> means the key cannot be used.</p>"
        }
      }
    },
    "UpdateAccountPasswordPolicyRequest":{
      "type":"structure",
      "members":{
        "MinimumPasswordLength":{"shape":"minimumPasswordLengthType"},
        "RequireSymbols":{"shape":"booleanType"},
        "RequireNumbers":{"shape":"booleanType"},
        "RequireUppercaseCharacters":{"shape":"booleanType"},
        "RequireLowercaseCharacters":{"shape":"booleanType"},
        "AllowUsersToChangePassword":{"shape":"booleanType"}
      }
    },
    "UpdateAssumeRolePolicyRequest":{
      "type":"structure",
      "required":[
        "RoleName",
        "PolicyDocument"
      ],
      "members":{
        "RoleName":{
          "shape":"roleNameType",
          "documentation":"<p>Name of the role to update.</p>"
        },
        "PolicyDocument":{
          "shape":"policyDocumentType",
          "documentation":"<p>The policy that grants an entity permission to assume the role.</p>"
        }
      }
    },
    "UpdateGroupRequest":{
      "type":"structure",
      "required":["GroupName"],
      "members":{
        "GroupName":{
          "shape":"groupNameType",
          "documentation":"<p>Name of the group to update. If you're changing the name of the group, this is the original\n\t\t\tname.</p>"
        },
        "NewPath":{
          "shape":"pathType",
          "documentation":"<p>New path for the group. Only include this if changing the group's path.</p>"
        },
        "NewGroupName":{
          "shape":"groupNameType",
          "documentation":"<p>New name for the group. Only include this if changing the group's name.</p>"
        }
      }
    },
    "UpdateLoginProfileRequest":{
      "type":"structure",
      "required":[
        "UserName",
        "Password"
      ],
      "members":{
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>Name of the user whose password you want to update.</p>"
        },
        "Password":{
          "shape":"passwordType",
          "documentation":"<p>The new password for the user name.</p>"
        }
      }
    },
    "UpdateSAMLProviderRequest":{
      "type":"structure",
      "required":[
        "SAMLMetadataDocument",
        "SAMLProviderArn"
      ],
      "members":{
        "SAMLMetadataDocument":{
          "shape":"SAMLMetadataDocumentType",
          "documentation":"<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document\n\t\t\tincludes the issuer's name, expiration information, and keys that can be used to validate the\n\t\t\tSAML authentication response (assertions) that are received from the IdP. You must generate\n\t\t\tthe metadata document using the identity management software that is used as your\n\t\t\torganization's IdP. </p>"
        },
        "SAMLProviderArn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) of the SAML provider to update.</p>"
        }
      }
    },
    "UpdateSAMLProviderResponse":{
      "type":"structure",
      "members":{
        "SAMLProviderArn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) of the SAML provider that was updated.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>UpdateSAMLProvider</a> action.</p>"
    },
    "UpdateServerCertificateRequest":{
      "type":"structure",
      "required":["ServerCertificateName"],
      "members":{
        "ServerCertificateName":{
          "shape":"serverCertificateNameType",
          "documentation":"<p>The name of the server certificate that you want to update.</p>"
        },
        "NewPath":{
          "shape":"pathType",
          "documentation":"<p>The new path for the server certificate. Include this only if you are updating the server\n\t\t\tcertificate's path.</p>"
        },
        "NewServerCertificateName":{
          "shape":"serverCertificateNameType",
          "documentation":"<p>The new name for the server certificate. Include this only if you are updating the server\n\t\t\tcertificate's name.</p>"
        }
      }
    },
    "UpdateSigningCertificateRequest":{
      "type":"structure",
      "required":[
        "CertificateId",
        "Status"
      ],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user the signing certificate belongs to.</p>"
        },
        "CertificateId":{
          "shape":"certificateIdType",
          "documentation":"<p>The ID of the signing certificate you want to update.</p>"
        },
        "Status":{
          "shape":"statusType",
          "documentation":"<p>The status you want to assign to the certificate. <code>Active</code> means the certificate\n\t\t\tcan be used for API calls to AWS, while <code>Inactive</code> means the certificate cannot be\n\t\t\tused.</p>"
        }
      }
    },
    "UpdateUserRequest":{
      "type":"structure",
      "required":["UserName"],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user to update. If you're changing the name of the user, this is the original\n\t\t\tuser name.</p>"
        },
        "NewPath":{
          "shape":"pathType",
          "documentation":"<p>New path for the user. Include this parameter only if you're changing the user's path.</p>"
        },
        "NewUserName":{
          "shape":"userNameType",
          "documentation":"<p>New name for the user. Include this parameter only if you're changing the user's name.</p>"
        }
      }
    },
    "UploadServerCertificateRequest":{
      "type":"structure",
      "required":[
        "ServerCertificateName",
        "CertificateBody",
        "PrivateKey"
      ],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>The path for the server certificate. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>\n\t\t<p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
        },
        "ServerCertificateName":{
          "shape":"serverCertificateNameType",
          "documentation":"<p>The name for the server certificate. Do not include the path in this value.</p>"
        },
        "CertificateBody":{
          "shape":"certificateBodyType",
          "documentation":"<p>The contents of the public key certificate in PEM-encoded format.</p>"
        },
        "PrivateKey":{
          "shape":"privateKeyType",
          "documentation":"<p>The contents of the private key in PEM-encoded format.</p>"
        },
        "CertificateChain":{
          "shape":"certificateChainType",
          "documentation":"<p>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded\n\t\t\tpublic key certificates of the chain.</p>"
        }
      }
    },
    "UploadServerCertificateResponse":{
      "type":"structure",
      "members":{
        "ServerCertificateMetadata":{
          "shape":"ServerCertificateMetadata",
          "documentation":"<p>The meta information of the uploaded server certificate without its certificate body,\n\t\t\tcertificate chain, and private key.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>UploadServerCertificate</a>\n\t\t\taction.</p>"
    },
    "UploadSigningCertificateRequest":{
      "type":"structure",
      "required":["CertificateBody"],
      "members":{
        "UserName":{
          "shape":"existingUserNameType",
          "documentation":"<p>Name of the user the signing certificate is for.</p>"
        },
        "CertificateBody":{
          "shape":"certificateBodyType",
          "documentation":"<p>The contents of the signing certificate.</p>"
        }
      }
    },
    "UploadSigningCertificateResponse":{
      "type":"structure",
      "required":["Certificate"],
      "members":{
        "Certificate":{
          "shape":"SigningCertificate",
          "documentation":"<p>Information about the certificate.</p>"
        }
      },
      "documentation":"<p>Contains the result of a successful invocation of the <a>UploadSigningCertificate</a>\n\t\t\taction.</p>"
    },
    "User":{
      "type":"structure",
      "required":[
        "Path",
        "UserName",
        "UserId",
        "Arn",
        "CreateDate"
      ],
      "members":{
        "Path":{
          "shape":"pathType",
          "documentation":"<p>Path to the user. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "UserName":{
          "shape":"userNameType",
          "documentation":"<p>The name identifying the user.</p>"
        },
        "UserId":{
          "shape":"idType",
          "documentation":"<p>The stable and unique string identifying the user. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "Arn":{
          "shape":"arnType",
          "documentation":"<p>The Amazon Resource Name (ARN) specifying the user. For more information about ARNs and how\n\t\t\tto use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access\n\t\t\t\tManagement</i>.</p>"
        },
        "CreateDate":{
          "shape":"dateType",
          "documentation":"<p>The date when the user was created.</p>"
        }
      },
      "documentation":"<p>The User data type contains information about a user.</p>\n\t\t<p> This data type is used as a response element in the following actions:</p>\n\t\t<ul>\n\t\t\t<li><p><a>CreateUser</a></p></li>\n\t\t\t<li><p><a>GetUser</a></p></li>\n\t\t\t<li><p><a>ListUsers</a></p></li>\n\t\t</ul>"
    },
    "VirtualMFADevice":{
      "type":"structure",
      "required":["SerialNumber"],
      "members":{
        "SerialNumber":{
          "shape":"serialNumberType",
          "documentation":"<p>The serial number associated with <code>VirtualMFADevice</code>.</p>"
        },
        "Base32StringSeed":{
          "shape":"BootstrapDatum",
          "documentation":"<p>The Base32 seed defined as specified in <a href=\"http://www.ietf.org/rfc/rfc3548.txt\" target=\"_blank\">RFC3548</a>. The <code>Base32StringSeed</code> is Base64-encoded.</p>"
        },
        "QRCodePNG":{
          "shape":"BootstrapDatum",
          "documentation":"<p>A QR code PNG image that encodes <i>otpauth://totp/$virtualMFADeviceName@$AccountName?\n\t\t\t\tsecret=$Base32String</i> where $virtualMFADeviceName is one of the create call arguments,\n\t\t\tAccountName is the user name if set (accountId otherwise), and Base32String is the seed in\n\t\t\tBase32 format. The <code>Base32String</code> is Base64-encoded.</p>"
        },
        "User":{"shape":"User"},
        "EnableDate":{"shape":"dateType"}
      },
      "documentation":"<p>The <code>VirtualMFADevice</code> data type contains information about a virtual MFA\n\t\t\tdevice.</p>"
    },
    "accessKeyIdType":{
      "type":"string",
      "min":16,
      "max":32,
      "pattern":"[\\w]*"
    },
    "accessKeyMetadataListType":{
      "type":"list",
      "member":{"shape":"AccessKeyMetadata"},
      "documentation":"<p>The accessKeyMetadataListType data type contains a list of access key metadata.</p>\n\t\t<p> This data type is used as a response element in the action <a>ListAccessKeys</a>. </p>"
    },
    "accessKeySecretType":{
      "type":"string",
      "sensitive":true
    },
    "accountAliasListType":{
      "type":"list",
      "member":{"shape":"accountAliasType"}
    },
    "accountAliasType":{
      "type":"string",
      "min":3,
      "max":63,
      "pattern":"^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$"
    },
    "arnType":{
      "type":"string",
      "min":20,
      "max":2048
    },
    "assignmentStatusType":{
      "type":"string",
      "enum":[
        "Assigned",
        "Unassigned",
        "Any"
      ]
    },
    "authenticationCodeType":{
      "type":"string",
      "min":6,
      "max":6,
      "pattern":"[\\d]*"
    },
    "booleanType":{"type":"boolean"},
    "certificateBodyType":{
      "type":"string",
      "min":1,
      "max":16384,
      "pattern":"[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
    },
    "certificateChainType":{
      "type":"string",
      "min":1,
      "max":2097152,
      "pattern":"[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*"
    },
    "certificateIdType":{
      "type":"string",
      "min":24,
      "max":128,
      "pattern":"[\\w]*"
    },
    "certificateListType":{
      "type":"list",
      "member":{"shape":"SigningCertificate"},
      "documentation":"<p>The certificateListType data type contains a list of signing certificates.</p>\n\t\t<p> This data type is used as a response element in the action <a>ListSigningCertificates</a>.\n\t\t</p>"
    },
    "dateType":{"type":"timestamp"},
    "deleteConflictMessage":{"type":"string"},
    "duplicateCertificateMessage":{"type":"string"},
    "entityAlreadyExistsMessage":{"type":"string"},
    "entityTemporarilyUnmodifiableMessage":{"type":"string"},
    "existingUserNameType":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w+=,.@-]*"
    },
    "groupListType":{
      "type":"list",
      "member":{"shape":"Group"},
      "documentation":"<p>The groupListType data type contains a list of groups.</p>\n\t\t<p> This data type is used as a response element in the action <a>ListGroups</a>. </p>"
    },
    "groupNameType":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w+=,.@-]*"
    },
    "idType":{
      "type":"string",
      "min":16,
      "max":32,
      "pattern":"[\\w]*"
    },
    "instanceProfileListType":{
      "type":"list",
      "member":{"shape":"InstanceProfile"},
      "documentation":"<p>The instanceProfileListType data type contains a list of instance profiles.</p>\n\t\t<p> This data type is used as a response element in the actions <a>ListInstanceProfiles</a> and\n\t\t\t\t<a>ListInstanceProfilesForRole</a>. </p>"
    },
    "instanceProfileNameType":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w+=,.@-]*"
    },
    "invalidAuthenticationCodeMessage":{"type":"string"},
    "invalidCertificateMessage":{"type":"string"},
    "invalidInputMessage":{"type":"string"},
    "invalidUserTypeMessage":{"type":"string"},
    "keyPairMismatchMessage":{"type":"string"},
    "limitExceededMessage":{"type":"string"},
    "malformedCertificateMessage":{"type":"string"},
    "malformedPolicyDocumentMessage":{"type":"string"},
    "markerType":{
      "type":"string",
      "min":1,
      "max":320,
      "pattern":"[\\u0020-\\u00FF]*"
    },
    "maxItemsType":{
      "type":"integer",
      "min":1,
      "max":1000
    },
    "maxPasswordAgeType":{"type":"integer"},
    "mfaDeviceListType":{
      "type":"list",
      "member":{"shape":"MFADevice"},
      "documentation":"<p>Contains a list of MFA devices.</p>\n\t\t<p> This data type is used as a response element in the actions <a>ListMFADevices</a> and\n\t\t\t\t<a>ListVirtualMFADevices</a>. </p>"
    },
    "minimumPasswordLengthType":{
      "type":"integer",
      "min":6,
      "max":128
    },
    "noSuchEntityMessage":{"type":"string"},
    "passwordPolicyViolationMessage":{"type":"string"},
    "passwordType":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
      "sensitive":true
    },
    "pathPrefixType":{
      "type":"string",
      "min":1,
      "max":512,
      "pattern":"\\u002F[\\u0021-\\u007F]*"
    },
    "pathType":{
      "type":"string",
      "min":1,
      "max":512,
      "pattern":"(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
    },
    "policyDocumentType":{
      "type":"string",
      "min":1,
      "max":131072,
      "pattern":"[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
    },
    "policyNameListType":{
      "type":"list",
      "member":{"shape":"policyNameType"},
      "documentation":"<p>The policyNameListType data type contains a list of policy names.</p>\n\t\t<p> This data type is used as a response element in the action <a>ListPolicies</a>. </p>"
    },
    "policyNameType":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w+=,.@-]*"
    },
    "privateKeyType":{
      "type":"string",
      "min":1,
      "max":16384,
      "pattern":"[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
      "sensitive":true
    },
    "roleListType":{
      "type":"list",
      "member":{"shape":"Role"},
      "documentation":"<p>The roleListType data type contains a list of roles.</p>\n\t\t<p> This data type is used as a response element in the action <a>ListRoles</a>. </p>"
    },
    "roleNameType":{
      "type":"string",
      "min":1,
      "max":64,
      "pattern":"[\\w+=,.@-]*"
    },
    "serialNumberType":{
      "type":"string",
      "min":9,
      "max":256,
      "pattern":"[\\w+=/:,.@-]*"
    },
    "serverCertificateMetadataListType":{
      "type":"list",
      "member":{"shape":"ServerCertificateMetadata"}
    },
    "serverCertificateNameType":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w+=,.@-]*"
    },
    "statusType":{
      "type":"string",
      "enum":[
        "Active",
        "Inactive"
      ]
    },
    "summaryKeyType":{
      "type":"string",
      "enum":[
        "Users",
        "UsersQuota",
        "Groups",
        "GroupsQuota",
        "ServerCertificates",
        "ServerCertificatesQuota",
        "UserPolicySizeQuota",
        "GroupPolicySizeQuota",
        "GroupsPerUserQuota",
        "SigningCertificatesPerUserQuota",
        "AccessKeysPerUserQuota",
        "MFADevices",
        "MFADevicesInUse",
        "AccountMFAEnabled"
      ]
    },
    "summaryMapType":{
      "type":"map",
      "key":{"shape":"summaryKeyType"},
      "value":{"shape":"summaryValueType"}
    },
    "summaryValueType":{"type":"integer"},
    "userListType":{
      "type":"list",
      "member":{"shape":"User"},
      "documentation":"<p>The userListType data type contains a list of users.</p>\n\t\t<p> This data type is used as a response element in the actions <a>GetGroup</a> and\n\t\t\t\t<a>ListUsers</a>. </p>"
    },
    "userNameType":{
      "type":"string",
      "min":1,
      "max":64,
      "pattern":"[\\w+=,.@-]*"
    },
    "virtualMFADeviceListType":{
      "type":"list",
      "member":{"shape":"VirtualMFADevice"}
    },
    "virtualMFADeviceName":{
      "type":"string",
      "min":1,
      "pattern":"[\\w+=,.@-]*"
    }
  }
}
